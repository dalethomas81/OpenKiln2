[
    {
        "id": "592b686edd11b813",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e9cef8706a9cf7f6",
        "type": "tab",
        "label": "Logic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3154c44d1a91de38",
        "type": "tab",
        "label": "I/O",
        "disabled": false,
        "info": ""
    },
    {
        "id": "98e4246c87add39e",
        "type": "tab",
        "label": "Utility",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8775e5df1b6887a4",
        "type": "ui_tab",
        "d": true,
        "name": "Historical",
        "icon": "timeline",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "443a1fa760cb1696",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "OpenKiln Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "MMM-DD-YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b96e65c991e4f663",
        "type": "ui_group",
        "name": "Historical Data",
        "tab": "8775e5df1b6887a4",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "1a7d214ba0ada216",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "home",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "72c60c97a5a481ec",
        "type": "ui_tab",
        "name": "Control",
        "icon": "power_settings_new",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "afede006ffb47acb",
        "type": "ui_link",
        "name": "Node-Red Editor",
        "link": "NodeRed",
        "icon": "developer_dashboard",
        "target": "iframe",
        "order": 6
    },
    {
        "id": "1f041bb493bd73c1",
        "type": "ui_tab",
        "name": "Schedule",
        "icon": "mode_edit",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "723f1e0d521d5671",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "57fb49920731c540",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b27a47450c3d7a3c",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "739befb0e899ed56",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "32c790dff519b120",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a046a28b2ea5f0be",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "af4a79934426a42a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "2dc617e815eb563a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "c3291b77297c1a32",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "62c47bf35fc1331e",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ddf52b8312f3dcfe",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "ccb56bf9e6cc2677",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6ea6176457413f77",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e2e9fc7c1febf99",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "f6d092fb3bd13b06",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "50a6ad9370071ac2",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "0ed7068150cfb65f",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "2595b0b597065044",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "916cddc083aed4b1",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "388c16a271ef1c2d",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a766471096c0346a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e1bdbab1ef4cbe6",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "1f041bb493bd73c1",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "abf790e2f9501fc7",
        "type": "ui_group",
        "name": "Segments",
        "tab": "1f041bb493bd73c1",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "90879df8d2ee4c5d",
        "type": "ui_group",
        "name": "Control",
        "tab": "72c60c97a5a481ec",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "2201d496820b415d",
        "type": "ui_group",
        "name": "Status",
        "tab": "6e4426eb24a8676f",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "d86c6f681ae35c78",
        "type": "ui_link",
        "name": "PiSugar",
        "link": "PiSugar",
        "icon": "battery_charging_full",
        "target": "iframe",
        "order": 7
    },
    {
        "id": "450b79efd321b8c4",
        "type": "ui_link",
        "name": "Grafana",
        "link": "Grafana",
        "icon": "timeline",
        "target": "iframe",
        "order": 5
    },
    {
        "id": "de5db1c89316833e",
        "type": "ui_tab",
        "name": "Utility",
        "icon": "build",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a91f3f1520863187",
        "type": "ui_group",
        "name": "PID Auto Tuning",
        "tab": "de5db1c89316833e",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "92429f8f445aacdf",
        "type": "ui_group",
        "name": "PID Parameters",
        "tab": "de5db1c89316833e",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "112aa19380852c23",
        "type": "ui_group",
        "name": "Settings",
        "tab": "de5db1c89316833e",
        "order": 3,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "980de4a53ccfb887",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f86f065176941099",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a35b0f792e9846a",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "f68e02645d7738c1",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3be2f849e8ab7b8",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "37407a3c1ee7bb79",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "4cfc717b29133d4a",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7c99b97c361a432",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "9e570445ee458c7e",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad31e06a0c424f07",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "e2919be3bfd4465c",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "3bbf9d04d13b2787",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "49c26116852ae508",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "baaca26601c1e496",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "92429f8f445aacdf",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "6e4426eb24a8676f",
        "type": "ui_tab",
        "name": "Status",
        "icon": "assignment",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d7040309259bf8ac",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "2201d496820b415d",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "9feb3c4d01fc30bd",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "2201d496820b415d",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d9c381f9b17ee35",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "2201d496820b415d",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "216a35d79d0604ee",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "2201d496820b415d",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3de24e635754f29",
        "type": "influxdb in",
        "z": "592b686edd11b813",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "query": "",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1520,
        "y": 120,
        "wires": [
            [
                "fe5eba49bd6ec407"
            ]
        ]
    },
    {
        "id": "20098afb1eb3b578",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "select kiln temps",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "select * from Kiln_01_UpperTemperature, Kiln_01_LowerTemperature WHERE time > now() - 12h LIMIT 1000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 120,
        "wires": [
            [
                "d3de24e635754f29"
            ]
        ]
    },
    {
        "id": "c375c2d46ab804f0",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "https://docs.influxdata.com/influxdb/v1.8/query_language/explore-data/",
        "info": "",
        "x": 1300,
        "y": 80,
        "wires": []
    },
    {
        "id": "b9f05874cb2439dc",
        "type": "catch",
        "z": "592b686edd11b813",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "21cec14cfdce048d"
            ]
        ]
    },
    {
        "id": "21cec14cfdce048d",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "fde73e3afa0924f7",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "b96e65c991e4f663",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show Last 48 Hours",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "d640cbec48042332"
            ]
        ]
    },
    {
        "id": "51523551dd33a6f6",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "#:(memoryOnly)::kiln_01.dashboard.auto_refresh",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 1460,
        "wires": [
            [
                "a65357c5f5e0b6d3"
            ]
        ]
    },
    {
        "id": "a8d03f2954ef1460",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "auto refresh",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1460,
        "wires": [
            [
                "51523551dd33a6f6"
            ]
        ]
    },
    {
        "id": "018ef11ba74cb510",
        "type": "ui_form",
        "z": "592b686edd11b813",
        "name": "",
        "label": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Enabled",
                "value": "enabled",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Hold Enabled",
                "value": "hold",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Setpoint",
                "value": "setpoint",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Ramp Rate",
                "value": "ramp_rate",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Soak Time",
                "value": "soak_time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "enabled": false,
            "hold": false,
            "setpoint": "",
            "ramp_rate": "",
            "soak_time": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 490,
        "y": 520,
        "wires": [
            [
                "f5070cef209d87e2"
            ]
        ]
    },
    {
        "id": "f7a42259283f2fc9",
        "type": "ui_dropdown",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Schedule",
        "tooltip": "",
        "place": "Select option",
        "group": "5e1bdbab1ef4cbe6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": 6,
                "type": "num"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 500,
        "y": 440,
        "wires": [
            [
                "338932c551eabbf7",
                "7a65114e3c2394b2",
                "bbb665c4fceb800d"
            ]
        ]
    },
    {
        "id": "338932c551eabbf7",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::schedule_index",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "f5070cef209d87e2",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "//global.set('kiln_01.selected_schedule', temp);\nvar schedule_index = flow.get('schedule_index', 'memoryOnly');\nvar segment_index = flow.get('segment_index', 'memoryOnly');\nvar segment = 'kiln_01.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']'\nglobal.set(segment, msg.payload);\nmsg.payload = segment\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 520,
        "wires": [
            [
                "6b534a21adf47fbc"
            ]
        ]
    },
    {
        "id": "9256680a1dd25943",
        "type": "ui_dropdown",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Segment",
        "tooltip": "",
        "place": "Select option",
        "group": "5e1bdbab1ef4cbe6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": 6,
                "type": "num"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15",
                "value": 15,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 500,
        "y": 480,
        "wires": [
            [
                "b88e332b4ed39aac",
                "bbb665c4fceb800d"
            ]
        ]
    },
    {
        "id": "b88e332b4ed39aac",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::segment_index",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5192f533b0238631",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "update form",
        "func": "//global.set('kiln_01.selected_schedule', temp, 'memoryOnly');\nvar schedule_index = flow.get('schedule_index', 'memoryOnly');\nvar segment_index = flow.get('segment_index', 'memoryOnly');\nmsg.payload = global.get('kiln_01.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']');\nvar msg2 = {}\nmsg2.payload = global.get('kiln_01.schedules['+ schedule_index.toString() + '].segments');\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 660,
        "wires": [
            [
                "3fda2bd34a7c89b2"
            ],
            [
                "338980eff32a3206"
            ]
        ]
    },
    {
        "id": "49136d0a89f16ce8",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "26aedf9d4f3e92fc",
                "8f21d66b67ab4695",
                "63be7f287f0bdc31"
            ]
        ]
    },
    {
        "id": "26aedf9d4f3e92fc",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "set default index",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::schedule_index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::segment_index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "7a65114e3c2394b2",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "//global.set('kiln_01.selected_schedule', temp);\nvar schedule_index = msg.payload //flow.get('schedule_index', 'memoryOnly');\nvar segment_index = flow.get('segment_index', 'memoryOnly');\nvar schedules = global.get('kiln_01.schedules');\nvar selected_schedule = schedules[schedule_index].segments[segment_index]\n\nmsg.payload = ''\nfor (let key in selected_schedule) {\n  let value = selected_schedule[key];\n  if (selected_schedule.hasOwnProperty(key)) {\n    //node.warn(`Property ${key} is NOT from prototype chain`)\n    msg.payload = msg.payload + key.toString() + \":\" + value.toString() + \",\"\n  } else {\n    //node.warn(`Property ${key} is NOT from prototype chain`)\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "782f21bebe74bd1c",
        "type": "ui_dropdown",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Active Schedule",
        "tooltip": "",
        "place": "Select option",
        "group": "90879df8d2ee4c5d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "schedule 0",
                "value": 0,
                "type": "num"
            },
            {
                "label": "schedule 1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "schedule 2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "schedule 3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "schedule 4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "schedule 5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "schedule 6",
                "value": 6,
                "type": "num"
            },
            {
                "label": "schedule 7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "schedule 8",
                "value": 8,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 820,
        "wires": [
            [
                "245aecb0a76e7750"
            ]
        ]
    },
    {
        "id": "245aecb0a76e7750",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "set schedule index",
        "func": "\n//var selected_schedule = global.get('kiln_01.schedules['+ msg.payload + ']')\n//global.set('kiln_01.active_schedule', selected_schedule);\nglobal.set('kiln_01.active_schedule_index', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b5b651e02428cab0",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Control Dashboard",
        "info": "",
        "x": 110,
        "y": 780,
        "wires": []
    },
    {
        "id": "71b520a30c4deec4",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "play_arrow",
        "payload": "Start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 920,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "ae53f4a3aef75fe8",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "stop",
        "payload": "Stop",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 960,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "95a54e2f0c9b2382",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Release",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "restore",
        "payload": "Release",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 1040,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "c03c7fb7458a9e9f",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "Output - Buttons",
        "mode": "link",
        "links": [
            "defcc28b265151c2",
            "81fb9a528731184e"
        ],
        "x": 435,
        "y": 980,
        "wires": []
    },
    {
        "id": "219b6df02966d0e3",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Segment State",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-spread",
        "x": 780,
        "y": 920,
        "wires": []
    },
    {
        "id": "8095bbd934bc130c",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Current Segment State",
        "links": [
            "fb11495e37bdb84b"
        ],
        "x": 635,
        "y": 920,
        "wires": [
            [
                "219b6df02966d0e3"
            ]
        ]
    },
    {
        "id": "1de58add27ec2baf",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Schedule State",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-spread",
        "x": 780,
        "y": 880,
        "wires": []
    },
    {
        "id": "44901a155449dc95",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Current Schedule State",
        "links": [
            "b33e0726c17b668b"
        ],
        "x": 635,
        "y": 880,
        "wires": [
            [
                "1de58add27ec2baf"
            ]
        ]
    },
    {
        "id": "2e9532e03f213fb4",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Setpoint",
        "format": "<font color='green'>{{msg.payload}} °F</font>",
        "layout": "row-spread",
        "x": 760,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d73abf74227059fe",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 12,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Control Value",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "col-center",
        "x": 780,
        "y": 1120,
        "wires": []
    },
    {
        "id": "93915b796227fdef",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Control Value",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "col-center",
        "x": 780,
        "y": 1160,
        "wires": []
    },
    {
        "id": "a8bc30bb3ce76d5e",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Status Setpoint",
        "links": [
            "edf985d2d969c4b4"
        ],
        "x": 635,
        "y": 1040,
        "wires": [
            [
                "2e9532e03f213fb4"
            ]
        ]
    },
    {
        "id": "82e6c4e0fa7da46d",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Status Upper Setpoint",
        "links": [
            "1a062e18a18563e6"
        ],
        "x": 635,
        "y": 1120,
        "wires": [
            [
                "d73abf74227059fe"
            ]
        ]
    },
    {
        "id": "f0b946251521a686",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Status Lower Setpoint",
        "links": [
            "788e9bd3efaa96d1"
        ],
        "x": 635,
        "y": 1160,
        "wires": [
            [
                "93915b796227fdef"
            ]
        ]
    },
    {
        "id": "85642d7408d49cd8",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - schedule selection dropdown",
        "links": [
            "7b896f97e70ee242",
            "75b14d458cd1e761",
            "a898206a716472e9"
        ],
        "x": 315,
        "y": 820,
        "wires": [
            [
                "782f21bebe74bd1c"
            ]
        ]
    },
    {
        "id": "91047655c7bbfdd5",
        "type": "ui_ui_control",
        "z": "592b686edd11b813",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 1320,
        "wires": [
            [
                "c35a667653959ba3"
            ]
        ]
    },
    {
        "id": "c35a667653959ba3",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 1320,
        "wires": [
            [],
            [],
            [
                "d1b9dbb996bc65fd"
            ]
        ]
    },
    {
        "id": "d1b9dbb996bc65fd",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "update schedule dropdown with selected schedule index",
        "func": "\n\nmsg.payload = global.get('kiln_01.active_schedule_index');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "75b14d458cd1e761"
            ]
        ]
    },
    {
        "id": "75b14d458cd1e761",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "85642d7408d49cd8"
        ],
        "x": 835,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ed6864b464819bbc",
        "type": "ui_ui_control",
        "z": "592b686edd11b813",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "52e7c1f8dff102dc"
            ]
        ]
    },
    {
        "id": "52e7c1f8dff102dc",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 640,
        "wires": [
            [],
            [],
            [
                "5192f533b0238631"
            ]
        ]
    },
    {
        "id": "87d7118f46499bc1",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - release button",
        "links": [
            "f59050e178b63b1a"
        ],
        "x": 155,
        "y": 1040,
        "wires": [
            [
                "95a54e2f0c9b2382"
            ]
        ]
    },
    {
        "id": "bd741c9362f990e9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - advance button",
        "links": [],
        "x": 155,
        "y": 1000,
        "wires": [
            [
                "7bfd8d56a8dba80e"
            ]
        ]
    },
    {
        "id": "a585d96564013b99",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - stop button",
        "links": [],
        "x": 155,
        "y": 960,
        "wires": [
            [
                "ae53f4a3aef75fe8"
            ]
        ]
    },
    {
        "id": "0642571f7ecac918",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - start button",
        "links": [],
        "x": 155,
        "y": 920,
        "wires": [
            [
                "71b520a30c4deec4"
            ]
        ]
    },
    {
        "id": "e5aec5149ce37d5d",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current Segment",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-spread",
        "x": 790,
        "y": 960,
        "wires": []
    },
    {
        "id": "1d2a7e1b14ed985d",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - current segment",
        "links": [
            "3ab377921817af3f"
        ],
        "x": 635,
        "y": 960,
        "wires": [
            [
                "e5aec5149ce37d5d"
            ]
        ]
    },
    {
        "id": "f9d4fdfcb6abeb41",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Soak Remaining",
        "format": "<font color='green'>{{msg.payload}} min</font>",
        "layout": "row-spread",
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bc808949af0e238a",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Segment remaining",
        "links": [
            "355d9c4e737fdfe5",
            "9272078ab32e5e81",
            "f1d4774590c51f3d"
        ],
        "x": 635,
        "y": 1000,
        "wires": [
            [
                "f9d4fdfcb6abeb41"
            ]
        ]
    },
    {
        "id": "4610f0d05bf3b4b1",
        "type": "ui_gauge",
        "z": "592b686edd11b813",
        "name": "",
        "group": "2201d496820b415d",
        "order": 7,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Upper Temperature",
        "label": "°F",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "300",
        "seg2": "1000",
        "x": 790,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1a904f944ba81c1b",
        "type": "ui_gauge",
        "z": "592b686edd11b813",
        "name": "",
        "group": "2201d496820b415d",
        "order": 9,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Lower Temperature",
        "label": "°F",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "300",
        "seg2": "1000",
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9b6b7f2249d013ba",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Upper Temperature",
        "links": [
            "dcbc073ea7b777ee"
        ],
        "x": 635,
        "y": 1200,
        "wires": [
            [
                "4610f0d05bf3b4b1"
            ]
        ]
    },
    {
        "id": "4ea9f6ce194f1281",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Lower Temperature",
        "links": [
            "e65201e766b76bfd"
        ],
        "x": 635,
        "y": 1240,
        "wires": [
            [
                "1a904f944ba81c1b"
            ]
        ]
    },
    {
        "id": "0ced5c373a61386b",
        "type": "ui_chart",
        "z": "592b686edd11b813",
        "name": "",
        "group": "2201d496820b415d",
        "order": 15,
        "width": 7,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Refresh to see data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 810,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "a459b46f6aa451c3",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "d": true,
        "name": "",
        "group": "2201d496820b415d",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1400,
        "wires": [
            [
                "a65357c5f5e0b6d3"
            ]
        ]
    },
    {
        "id": "89090e12b153c6a4",
        "type": "ui_template",
        "z": "592b686edd11b813",
        "group": "abf790e2f9501fc7",
        "name": "",
        "order": 1,
        "width": 15,
        "height": 10,
        "format": "<style>\n.table\n{\nwidth: 100%;\n//width:500px;\n//background:lightblue;\n//border:1px solid black;\n//border-collapse: collapse;\n//font-size:10px;\ntext-align: center;\nvertical-align: center;\n}\n.data {\n  //width: 15%\n  //white-space: nowrap\n  //white-space: normal\n}\n.main\n{\n//height:400px;\n}\n</style>\n<div class=\"main\">\n    <table class=\"table\">  \n        <tr>\n        <th style=\"text-decoration: underline;\">Index</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Name</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Enabled</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Hold</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Setpoint (°F)</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Ramp (deg/h)</th>\n        <th class=\"data\" style=\"text-decoration: underline;\">Soak (min)</th>\n        </tr>\n        <tr ng-repeat = \"payload in msg.payload\"><td>{{$index}}</td><td ng-repeat =\"(key,value) in payload\">{{value}}</td></tr>\n    </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 500,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "22fd3eb6907ee40d",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete Segment",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 600,
        "wires": [
            [
                "d815b4776bb0f1aa"
            ]
        ]
    },
    {
        "id": "d815b4776bb0f1aa",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var schedule_index = flow.get('schedule_index', 'memoryOnly');\nvar segment_index = flow.get('segment_index', 'memoryOnly');\nvar segment = 'kiln_01.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']'\n\nglobal.set(segment, undefined);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 600,
        "wires": [
            [
                "6b534a21adf47fbc"
            ]
        ]
    },
    {
        "id": "8f21d66b67ab4695",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "set schedule names",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"schedule 1\":\"0\"},{\"schedule 2\":\"1\"},{\"schedule 3\":\"2\"},{\"schedule 4\":\"3\"},{\"schedule 5\":\"4\"},{\"schedule 6\":\"5\"},{\"schedule 7\":\"6\"},{\"schedule 8\":\"7\"},{\"schedule 9\":\"8\"},{\"schedule 10\":\"9\"},{\"schedule 11\":\"10\"},{\"schedule 12\":\"11\"},{\"schedule 13\":\"12\"},{\"schedule 14\":\"13\"},{\"schedule 15\":\"14\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 440,
        "wires": [
            [
                "f7a42259283f2fc9",
                "a898206a716472e9"
            ]
        ]
    },
    {
        "id": "e0f89df2c8e81cd9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "3fda2bd34a7c89b2"
        ],
        "x": 395,
        "y": 520,
        "wires": [
            [
                "018ef11ba74cb510"
            ]
        ]
    },
    {
        "id": "ae2b5be430abc93f",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "338980eff32a3206"
        ],
        "x": 395,
        "y": 560,
        "wires": [
            [
                "89090e12b153c6a4"
            ]
        ]
    },
    {
        "id": "3fda2bd34a7c89b2",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "e0f89df2c8e81cd9"
        ],
        "x": 615,
        "y": 640,
        "wires": []
    },
    {
        "id": "338980eff32a3206",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "ae2b5be430abc93f"
        ],
        "x": 615,
        "y": 680,
        "wires": []
    },
    {
        "id": "006321a7d5098eed",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "6b534a21adf47fbc",
            "bbb665c4fceb800d"
        ],
        "x": 335,
        "y": 680,
        "wires": [
            [
                "5192f533b0238631"
            ]
        ]
    },
    {
        "id": "6b534a21adf47fbc",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "006321a7d5098eed"
        ],
        "x": 815,
        "y": 580,
        "wires": []
    },
    {
        "id": "bbb665c4fceb800d",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "006321a7d5098eed"
        ],
        "x": 675,
        "y": 360,
        "wires": []
    },
    {
        "id": "63be7f287f0bdc31",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "set segment names",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"segment 1\":\"0\"},{\"segment 2\":\"1\"},{\"segment 3\":\"2\"},{\"segment 4\":\"3\"},{\"segment 5\":\"4\"},{\"segment 6\":\"5\"},{\"segment 7\":\"6\"},{\"segment 8\":\"7\"},{\"segment 9\":\"8\"},{\"segment 10\":\"9\"},{\"segment 11\":\"10\"},{\"segment 12\":\"11\"},{\"segment 13\":\"12\"},{\"segment 14\":\"13\"},{\"segment 15\":\"14\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 480,
        "wires": [
            [
                "9256680a1dd25943"
            ]
        ]
    },
    {
        "id": "7bfd8d56a8dba80e",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Advance",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "skip_next",
        "payload": "Advance",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "8058b979887ff4eb",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Hold",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "pause",
        "payload": "Hold",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 1080,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "87ef55ffe3ea2883",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - hold button",
        "links": [],
        "x": 155,
        "y": 1080,
        "wires": [
            [
                "8058b979887ff4eb"
            ]
        ]
    },
    {
        "id": "f03679a3e4397812",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "https://klarsys.github.io/angular-material-icons/",
        "info": "",
        "x": 300,
        "y": 880,
        "wires": []
    },
    {
        "id": "ae4c90c0ed49a0c2",
        "type": "ui_ui_control",
        "z": "592b686edd11b813",
        "name": "",
        "events": "all",
        "x": 420,
        "y": 1480,
        "wires": [
            [
                "cf385be5a48bd527"
            ]
        ]
    },
    {
        "id": "cf385be5a48bd527",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "2f728d5ae34b85ed"
            ],
            [
                "ce863fe5718c88a5"
            ],
            []
        ]
    },
    {
        "id": "2f728d5ae34b85ed",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "Clear Auto Refresh",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.dashboard.auto_refresh",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "ce863fe5718c88a5",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "Set Auto Refresh",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.dashboard.auto_refresh",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "2b7d853b4ddd2588",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ramp Rate",
        "format": "<font color='green'>{{msg.payload}} deg/h</font>",
        "layout": "row-spread",
        "x": 770,
        "y": 1080,
        "wires": []
    },
    {
        "id": "899c85f172cb1839",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - status ramp rate",
        "links": [
            "233d081ef7b67749"
        ],
        "x": 635,
        "y": 1080,
        "wires": [
            [
                "2b7d853b4ddd2588"
            ]
        ]
    },
    {
        "id": "fe5eba49bd6ec407",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "\n\n// enable \"raw output\" from the influxdb node\n// use this query: select * from Kiln_01_UpperTemperature, Kiln_01_LowerTemperature WHERE time > now() - 12h LIMIT 1000\nvar msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n\n// series 1\nvar series_data0 = [];\nfor(i = 0; i < msg.payload.results[0].series[0].values.length-1; i++){\n    series_data0.push({\n        x: msg.payload.results[0].series[0].values[i][0],\n        y: msg.payload.results[0].series[0].values[i][1],\n    })\n}\nmsg_out.payload[0].series[0] = msg.payload.results[0].series[0].name\nmsg_out.payload[0].labels[0] = \"Upper Temp Label\"\n\n// series 2\nvar series_data1 = [];\nfor(i = 0; i < msg.payload.results[0].series[1].values.length-1; i++){\n    series_data1.push({\n        x: msg.payload.results[0].series[1].values[i][0],\n        y: msg.payload.results[0].series[1].values[i][1],\n    })\n}\nmsg_out.payload[0].series[1] = msg.payload.results[0].series[1].name\nmsg_out.payload[0].labels[1] = \"Lower Temp Label\"\n\n// add all series to the data array\nvar data_array = [];\ndata_array[0] = series_data0\ndata_array[1] = series_data1\n\n// \nmsg_out.payload[0].data = data_array\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 120,
        "wires": [
            [
                "c046e58693cda480"
            ]
        ]
    },
    {
        "id": "03352599cb88060e",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "20098afb1eb3b578"
            ]
        ]
    },
    {
        "id": "c046e58693cda480",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 120,
        "wires": []
    },
    {
        "id": "2882f7e30e663921",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "downsampled data",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "SELECT * FROM downsampled_temps LIMIT 1000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "d34470a9082d1d2b"
            ]
        ]
    },
    {
        "id": "298be23ac3138047",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "2882f7e30e663921"
            ]
        ]
    },
    {
        "id": "d2a1f5087f7e1ded",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 220,
        "wires": []
    },
    {
        "id": "231c417032f6e1d5",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "\n\n// enable \"raw output\" from the influxdb node\n// use this query: select * from kiln_upper_temperature_01, kiln_lower_temperature_01 WHERE time > now() - 1h;\nvar msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n\n// series 1\nvar series_data0 = [];\nfor(i = 0; i < msg.payload.length-1; i++){\n    series_data0.push({\n        x: msg.payload[i].TIMESTAMP,\n        y: msg.payload[i].VALUE,\n    })\n}\nmsg_out.payload[0].series[0] = msg.payload[0].DEVICE\nmsg_out.payload[0].labels[0] = \"Upper Temp Label\"\n\n// series 2\n/*var series_data1 = [];\nfor(i = 0; i < msg.payload.results[0].series[1].values.length-1; i++){\n    series_data1.push({\n        x: msg.payload.results[0].series[1].values[i][0],\n        y: msg.payload.results[0].series[1].values[i][1],\n    })\n}\nmsg_out.payload[0].series[1] = msg.payload.results[0].series[1].name\nmsg_out.payload[0].labels[1] = \"Lower Temp Label\"*/\n\n// add all series to the data array\nvar data_array = [];\ndata_array[0] = series_data0\n//data_array[1] = series_data1\n\n// \nmsg_out.payload[0].data = data_array\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 380,
        "wires": [
            [
                "c0240b58df242afe"
            ]
        ]
    },
    {
        "id": "e90eada40cfeaa9c",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SELECT * FROM temperature WHERE TIMESTAMP >= strftime('%s','now', '-12 hours')*1000 LIMIT 2000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c0240b58df242afe",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 380,
        "wires": []
    },
    {
        "id": "fa51981d0ffeaaa3",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1120,
        "y": 380,
        "wires": [
            [
                "e90eada40cfeaa9c"
            ]
        ]
    },
    {
        "id": "fb07d106257c09b8",
        "type": "influxdb in",
        "z": "592b686edd11b813",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "query": "",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 560,
        "y": 1400,
        "wires": [
            [
                "566ce4114146f76d"
            ]
        ]
    },
    {
        "id": "a65357c5f5e0b6d3",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "select kiln temps",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "select * from Kiln_01_UpperTemperature, Kiln_01_LowerTemperature WHERE time > now() - 12h;",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1400,
        "wires": [
            [
                "fb07d106257c09b8"
            ]
        ]
    },
    {
        "id": "566ce4114146f76d",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "parse query results",
        "func": "if (msg.payload.results[0].series !== undefined){\n    // enable \"raw output\" from the influxdb node\n    // use this query: select * from kiln_upper_temperature_01, kiln_lower_temperature_01 WHERE time > now() - 1h;\n    var msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n    \n    // series 1\n    var series_data0 = [];\n    for(i = 0; i < msg.payload.results[0].series[0].values.length-1; i++){\n        series_data0.push({\n            x: msg.payload.results[0].series[0].values[i][0],\n            y: msg.payload.results[0].series[0].values[i][1],\n        })\n    }\n    msg_out.payload[0].series[0] = msg.payload.results[0].series[0].name\n    msg_out.payload[0].labels[0] = \"Upper Temp Label\"\n    \n    // series 2\n    var series_data1 = [];\n    for(i = 0; i < msg.payload.results[0].series[1].values.length-1; i++){\n        series_data1.push({\n            x: msg.payload.results[0].series[1].values[i][0],\n            y: msg.payload.results[0].series[1].values[i][1],\n        })\n    }\n    msg_out.payload[0].series[1] = msg.payload.results[0].series[1].name\n    msg_out.payload[0].labels[1] = \"Lower Temp Label\"\n    \n    // add all series to the data array\n    var data_array = [];\n    data_array[0] = series_data0\n    data_array[1] = series_data1\n    \n    // \n    msg_out.payload[0].data = data_array\n    \n    return msg_out;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 1400,
        "wires": [
            [
                "0ced5c373a61386b"
            ]
        ],
        "l": false
    },
    {
        "id": "2aef5c2b2b4a8586",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "https://docs.influxdata.com/influxdb/v1.7/guides/downsampling_and_retention/",
        "info": "",
        "x": 1320,
        "y": 180,
        "wires": []
    },
    {
        "id": "d34470a9082d1d2b",
        "type": "influxdb in",
        "z": "592b686edd11b813",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "query": "",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1520,
        "y": 220,
        "wires": [
            [
                "7afdb6d5377e9abc",
                "c65e63dccc35ee06"
            ]
        ]
    },
    {
        "id": "7afdb6d5377e9abc",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "\n\n// enable \"raw output\" from the influxdb node\n// use this query: SELECT * FROM downsampled_temps LIMIT 1000\nvar msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n\n// series 1\nvar series_data0 = [];\nvar series_data1 = [];\nfor(i = 0; i < msg.payload.results[0].series[0].values.length-1; i++){\n    series_data0.push({\n        x: msg.payload.results[0].series[0].values[i][0],\n        y: msg.payload.results[0].series[0].values[i][1],\n    })\n    series_data1.push({\n        x: msg.payload.results[0].series[0].values[i][0],\n        y: msg.payload.results[0].series[0].values[i][2],\n    })\n}\nmsg_out.payload[0].series[0] = msg.payload.results[0].series[0].columns[1]\n//msg_out.payload[0].labels[0] = \"Upper Temp Label\"\nmsg_out.payload[0].series[1] = msg.payload.results[0].series[0].columns[2]\n//msg_out.payload[0].labels[1] = \"Lower Temp Label\"\n\n// add all series to the data array\nvar data_array = [];\ndata_array[0] = series_data0\ndata_array[1] = series_data1\n\n// \nmsg_out.payload[0].data = data_array\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 220,
        "wires": [
            [
                "d2a1f5087f7e1ded"
            ]
        ]
    },
    {
        "id": "2a1f183bb4e05864",
        "type": "ui_chart",
        "z": "592b686edd11b813",
        "name": "",
        "group": "b96e65c991e4f663",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "Y-M-D",
        "interpolate": "linear",
        "nodata": "Refresh to see data",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d640cbec48042332",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "downsampled data",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "SELECT * FROM downsampled_temps WHERE time > now() - 48h",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "a5b1ee57491885ff"
            ]
        ]
    },
    {
        "id": "9dbd945c8b6f4bd5",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 155,
        "y": 140,
        "wires": [
            [
                "d640cbec48042332"
            ]
        ],
        "l": false
    },
    {
        "id": "a5b1ee57491885ff",
        "type": "influxdb in",
        "z": "592b686edd11b813",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "query": "",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "0c676b6e43885baa"
            ]
        ]
    },
    {
        "id": "0c676b6e43885baa",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "\n\n// enable \"raw output\" from the influxdb node\n// use this query: SELECT * FROM downsampled_temps LIMIT 1000\nvar msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n\n// series 1\nvar series_data0 = [];\nvar series_data1 = [];\nfor(i = 0; i < msg.payload.results[0].series[0].values.length-1; i++){\n    series_data0.push({\n        x: msg.payload.results[0].series[0].values[i][0],\n        y: msg.payload.results[0].series[0].values[i][1],\n    })\n    series_data1.push({\n        x: msg.payload.results[0].series[0].values[i][0],\n        y: msg.payload.results[0].series[0].values[i][2],\n    })\n}\nmsg_out.payload[0].series[0] = msg.payload.results[0].series[0].columns[1]\n//msg_out.payload[0].labels[0] = \"Upper Temp Label\"\nmsg_out.payload[0].series[1] = msg.payload.results[0].series[0].columns[2]\n//msg_out.payload[0].labels[1] = \"Lower Temp Label\"\n\n// add all series to the data array\nvar data_array = [];\ndata_array[0] = series_data0\ndata_array[1] = series_data1\n\n// \nmsg_out.payload[0].data = data_array\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 695,
        "y": 140,
        "wires": [
            [
                "2a1f183bb4e05864"
            ]
        ],
        "l": false
    },
    {
        "id": "33d03b8549555671",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Historical dashboard",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "0c9d08cd9424255c",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Recipe Dashboard",
        "info": "",
        "x": 110,
        "y": 360,
        "wires": []
    },
    {
        "id": "a898206a716472e9",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "85642d7408d49cd8"
        ],
        "x": 475,
        "y": 400,
        "wires": []
    },
    {
        "id": "92026a952d5a807a",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Test area",
        "info": "",
        "x": 1100,
        "y": 40,
        "wires": []
    },
    {
        "id": "f14cba79aa9d3c56",
        "type": "ui_date_picker",
        "z": "592b686edd11b813",
        "name": "",
        "label": "From",
        "group": "b96e65c991e4f663",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "081cd5a0f31c258c"
            ]
        ]
    },
    {
        "id": "8909036cd50a1331",
        "type": "ui_date_picker",
        "z": "592b686edd11b813",
        "name": "",
        "label": "To",
        "group": "b96e65c991e4f663",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "550ca7227c50c4c1"
            ]
        ]
    },
    {
        "id": "6a85377603e9249c",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "downsampled data",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "SELECT * FROM downsampled_temps WHERE time >= 1641945600000000 and time <= now()",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 280,
        "wires": [
            [
                "d34470a9082d1d2b"
            ]
        ]
    },
    {
        "id": "610f4d3f8b61c249",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "6a85377603e9249c"
            ]
        ]
    },
    {
        "id": "c65e63dccc35ee06",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 260,
        "wires": []
    },
    {
        "id": "081cd5a0f31c258c",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "set from",
        "func": "global.set('kiln_01.dashboard.history_from',msg.payload*1000)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 220,
        "wires": [
            [
                "0874c32ca8bcb2e3"
            ]
        ]
    },
    {
        "id": "550ca7227c50c4c1",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "set to",
        "func": "global.set('kiln_01.dashboard.history_to',msg.payload*1000)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 260,
        "wires": [
            [
                "0874c32ca8bcb2e3"
            ]
        ]
    },
    {
        "id": "0874c32ca8bcb2e3",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "create query",
        "func": "// SELECT * FROM downsampled_temps WHERE time >= 1641945600000000 and time <= now()\n// note: timestamp should be in microseconds format. multiply node-red timestamp by 1000\n\nvar history_from = global.get('kiln_01.dashboard.history_from')\nvar history_to = global.get('kiln_01.dashboard.history_to')\n\nmsg.query = \"SELECT * FROM downsampled_temps WHERE time >= \"+ history_from + \" and time <= \"+ history_to + \" LIMIT 2000\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "a5b1ee57491885ff",
                "f03ea226c20560aa"
            ]
        ]
    },
    {
        "id": "f03ea226c20560aa",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "255d64aa75db5203",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "clear chart",
        "func": "var msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n\nvar series_data0 = [];\nvar series_data1 = [];\n\nvar data_array = [];\ndata_array[0] = series_data0\ndata_array[1] = series_data1\n\n// \nmsg_out.payload[0].data = data_array\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 180,
        "wires": [
            [
                "2a1f183bb4e05864"
            ]
        ]
    },
    {
        "id": "77121f3416ca897f",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 555,
        "y": 180,
        "wires": [
            [
                "255d64aa75db5203"
            ]
        ],
        "l": false
    },
    {
        "id": "74140b605a6c3c6b",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "TODO: this isnt working well",
        "info": "",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "c8796bffe6a96967",
        "type": "ui_audio",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "voice": "com.apple.speech.synthesis.voice.Alex",
        "always": true,
        "x": 320,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5aac6d66af0d0e21",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "The Kiln is on fire.",
        "payloadType": "str",
        "x": 150,
        "y": 1640,
        "wires": [
            [
                "c8796bffe6a96967"
            ]
        ]
    },
    {
        "id": "be787bb7f9bb0c5c",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "announcements",
        "info": "",
        "x": 100,
        "y": 1580,
        "wires": []
    },
    {
        "id": "0f56f86bd83c9233",
        "type": "finite-state-machine",
        "z": "e9cef8706a9cf7f6",
        "name": "Schedule",
        "fsmDefinition": "{\"state\":{\"status\":\"IDLE\",\"data\":{\"x\":99}},\"transitions\":{\"IDLE\":{\"run\":{\"status\":\"RUNNING\"}},\"STOPPING\":{\"end\":{\"status\":\"IDLE\"}},\"RUNNING\":{\"stop\":{\"status\":\"STOPPING\"}}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": true,
        "showTransitionErrors": true,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "ea6829365bead858",
                "2fc3804edce15c2a",
                "626dec0a807f2c02"
            ]
        ]
    },
    {
        "id": "04a3129b472d39fb",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "https://github.com/lutzer/node-red-contrib-finite-statemachine/blob/master/MANUAL.md",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "9001b19272cdde7c",
        "type": "catch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "82c478cdd58a5695"
            ]
        ]
    },
    {
        "id": "82c478cdd58a5695",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "fd8e3125439d8507",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "https://www.npmjs.com/package/javascript-state-machine",
        "info": "",
        "x": 250,
        "y": 560,
        "wires": []
    },
    {
        "id": "6f7c5ec76b48cc9b",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "https://flows.nodered.org/node/node-red-contrib-finite-statemachine",
        "info": "",
        "x": 290,
        "y": 520,
        "wires": []
    },
    {
        "id": "ea6829365bead858",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "b92a5a9283774411",
        "type": "finite-state-machine",
        "z": "e9cef8706a9cf7f6",
        "name": "Segment",
        "fsmDefinition": "{\"state\":{\"status\":\"IDLE\",\"data\":{\"segment_data\":{\"elapsed_time\":0,\"max_temperature\":0},\"segment_settings\":{\"name\":\"\",\"enabled\":true,\"hold\":false,\"setpoint\":0,\"ramp_rate\":0,\"soak_time\":0}}},\"transitions\":{\"IDLE\":{\"end\":\"IDLE\",\"init\":\"INITIALIZING\",\"set\":\"IDLE\"},\"INITIALIZING\":{\"ramp\":\"RAMPING\",\"end\":\"IDLE\",\"set\":\"INITIALIZING\"},\"RAMPING\":{\"soak\":\"SOAKING\",\"hold\":\"HOLDING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"RAMPING\"},\"SOAKING\":{\"hold\":\"HOLDING\",\"ramp\":\"RAMPING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"SOAKING\"},\"HOLDING\":{\"ramp\":\"RAMPING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"HOLDING\"}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": true,
        "showTransitionErrors": true,
        "x": 400,
        "y": 700,
        "wires": [
            [
                "a90b597b09e70489",
                "4df2a1d5facc0bfb",
                "f3bfd11d3b3fad40",
                "2eb008bbf30d2804",
                "c214fb80818d8c8f",
                "b8c6547f97853f37"
            ]
        ]
    },
    {
        "id": "a90b597b09e70489",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 700,
        "wires": []
    },
    {
        "id": "defcc28b265151c2",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Input - Control Buttons",
        "links": [
            "c03c7fb7458a9e9f"
        ],
        "x": 315,
        "y": 380,
        "wires": [
            [
                "334e3822e1c7c5ac"
            ]
        ]
    },
    {
        "id": "fb11495e37bdb84b",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Current Segment State",
        "mode": "link",
        "links": [
            "8095bbd934bc130c"
        ],
        "x": 715,
        "y": 740,
        "wires": []
    },
    {
        "id": "b33e0726c17b668b",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Current Schedule State",
        "mode": "link",
        "links": [
            "44901a155449dc95"
        ],
        "x": 715,
        "y": 260,
        "wires": []
    },
    {
        "id": "4df2a1d5facc0bfb",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "segment_settings",
                "pt": "msg",
                "to": "payload.data.segment_settings",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 740,
        "wires": [
            [
                "fb11495e37bdb84b"
            ]
        ]
    },
    {
        "id": "2fc3804edce15c2a",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 260,
        "wires": [
            [
                "b33e0726c17b668b",
                "84a2b0552ff4b157"
            ]
        ]
    },
    {
        "id": "334e3822e1c7c5ac",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Release",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Advance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Hold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "1ed2d6a8bc75d663"
            ],
            [
                "0d25f4bbb98a1706"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "1ed2d6a8bc75d663",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "run",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "run",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 360,
        "wires": [
            [
                "819aacf3762935b7"
            ]
        ]
    },
    {
        "id": "0d25f4bbb98a1706",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "stop",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "819aacf3762935b7"
            ]
        ]
    },
    {
        "id": "6a57983382d3490e",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "819aacf3762935b7",
            "c96334b38e278286",
            "af8f2e69ea9f27c2"
        ],
        "x": 295,
        "y": 220,
        "wires": [
            [
                "0f56f86bd83c9233"
            ]
        ]
    },
    {
        "id": "819aacf3762935b7",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "6a57983382d3490e"
        ],
        "x": 715,
        "y": 360,
        "wires": []
    },
    {
        "id": "81fb9a528731184e",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Input - Control Buttons",
        "links": [
            "c03c7fb7458a9e9f"
        ],
        "x": 315,
        "y": 960,
        "wires": [
            [
                "5b4645244b57514e"
            ]
        ]
    },
    {
        "id": "5b4645244b57514e",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Release",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Advance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Hold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 960,
        "wires": [
            [
                "353a7d3caf38cf78"
            ],
            [],
            [
                "12bfd2f54cfcaae9"
            ],
            [
                "12bfd2f54cfcaae9"
            ],
            [
                "e5d4e9ed610e164f"
            ]
        ]
    },
    {
        "id": "353a7d3caf38cf78",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "run",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "run",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "338986178aea2e9e",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 715,
        "y": 940,
        "wires": []
    },
    {
        "id": "fdfa744fcee6a3dd",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "338986178aea2e9e",
            "2e45cc4d57a385c0",
            "edb935f4183746b0",
            "7ab1dfdba11abf46",
            "5b05096dea13f2c2",
            "94a351c8d74cd63c"
        ],
        "x": 295,
        "y": 700,
        "wires": [
            [
                "b92a5a9283774411"
            ]
        ]
    },
    {
        "id": "84a2b0552ff4b157",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOPPING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STARTING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RUNNING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 750,
        "y": 220,
        "wires": [
            [
                "04cf21296804ae19",
                "6348c0ed609dce8b"
            ],
            [
                "6348c0ed609dce8b"
            ],
            [],
            [
                "0c385503f68c2897",
                "2d50278b266fca54"
            ]
        ]
    },
    {
        "id": "c214fb80818d8c8f",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "INITIALIZING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "INITIALIZING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMPING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "RAMPING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "HOLDING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "HOLDING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SOAKING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SOAKING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 710,
        "y": 600,
        "wires": [
            [
                "26a5dc0ca7be4550"
            ],
            [],
            [
                "d73d6c1dd682f172"
            ],
            [],
            [
                "f1169a5a0d122c16"
            ],
            [
                "2293ffac501997ba"
            ],
            [
                "717c700de0abd324"
            ],
            [
                "73d963005cc1351a"
            ],
            [
                "0afd5835b34c3f7e"
            ],
            [
                "b79bc4ea4760e612"
            ]
        ]
    },
    {
        "id": "edb935f4183746b0",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd",
            "c70cd7dd26e8bb29"
        ],
        "x": 1395,
        "y": 200,
        "wires": []
    },
    {
        "id": "0c385503f68c2897",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "set segment settings and start segment ramp",
        "func": "\nvar active_schedule_index = global.get('kiln_01.active_schedule_index');\nvar active_schedule = global.get('kiln_01.schedules['+ active_schedule_index + ']')\nglobal.set('kiln_01.active_schedule', active_schedule);\n\nvar topic = \"init\"\nvar segment_settings = global.get('kiln_01.active_schedule.segments[0]')\nvar data = {segment_settings}\n\nvar msg_out = {topic,data}\n\nglobal.set('kiln_01.active_segment_index', 0)\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 220,
        "wires": [
            [
                "edb935f4183746b0"
            ]
        ]
    },
    {
        "id": "f3bfd11d3b3fad40",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.segment_settings.setpoint",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.Setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 760,
        "wires": [
            [
                "edf985d2d969c4b4"
            ]
        ]
    },
    {
        "id": "edf985d2d969c4b4",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "a8bc30bb3ce76d5e"
        ],
        "x": 715,
        "y": 760,
        "wires": []
    },
    {
        "id": "b209d1c9da6cb3c2",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "end and clear segment settings",
        "func": "global.set('kiln_01.UpperSetpoint', 0, 'memoryOnly')\nglobal.set('kiln_01.LowerSetpoint', 0, 'memoryOnly')\n\nvar topic = \"end\"\nvar segment_settings = {\"name\":\"\",\"enabled\":false,\"hold\":false,\"setpoint\":0,\"ramp_rate\":0,\"soak_time\":0}\nvar data = {segment_settings}\n\nvar msg_out = {topic,data}\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "edb935f4183746b0"
            ]
        ]
    },
    {
        "id": "2d50278b266fca54",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "disable the schedule selection when running",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kiln_01.active_schedule_index",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "7b896f97e70ee242"
            ]
        ]
    },
    {
        "id": "04cf21296804ae19",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "enable the schedule selection when idle",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kiln_01.active_schedule_index",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "7b896f97e70ee242"
            ]
        ]
    },
    {
        "id": "7b896f97e70ee242",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - enable/disable schedule selection",
        "mode": "link",
        "links": [
            "85642d7408d49cd8"
        ],
        "x": 1235,
        "y": 260,
        "wires": []
    },
    {
        "id": "585e8b1656cbef91",
        "type": "trigger",
        "z": "e9cef8706a9cf7f6",
        "name": "Monitor temperature",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1000",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1355,
        "y": 520,
        "wires": [
            [
                "6cfcbd486aa01dca",
                "0f8e38076da240d0"
            ]
        ],
        "l": false
    },
    {
        "id": "2293ffac501997ba",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "Reset trigger",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "585e8b1656cbef91"
            ]
        ]
    },
    {
        "id": "7ab1dfdba11abf46",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 1815,
        "y": 640,
        "wires": []
    },
    {
        "id": "ec192310dbd48cdd",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "stop or advance",
        "links": [
            "12bfd2f54cfcaae9"
        ],
        "x": 1295,
        "y": 640,
        "wires": [
            [
                "b17e75bc51a86d9f"
            ]
        ]
    },
    {
        "id": "12bfd2f54cfcaae9",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "ec192310dbd48cdd"
        ],
        "x": 535,
        "y": 980,
        "wires": []
    },
    {
        "id": "c96334b38e278286",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "6a57983382d3490e"
        ],
        "x": 1675,
        "y": 600,
        "wires": []
    },
    {
        "id": "73d963005cc1351a",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "disable the release button",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 640,
        "wires": [
            [
                "f59050e178b63b1a"
            ]
        ]
    },
    {
        "id": "717c700de0abd324",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "enable the release button",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 620,
        "wires": [
            [
                "f59050e178b63b1a"
            ]
        ]
    },
    {
        "id": "f59050e178b63b1a",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - enable/disable release button",
        "mode": "link",
        "links": [
            "87d7118f46499bc1"
        ],
        "x": 1135,
        "y": 620,
        "wires": []
    },
    {
        "id": "b17e75bc51a86d9f",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "stop schedule or advance",
        "func": "var UpperTemperature = global.get('kiln_01.UpperTemperature', 'memoryOnly')\nvar LowerTemperature = global.get('kiln_01.LowerTemperature', 'memoryOnly')\nvar Setpoint = global.get('kiln_01.Setpoint', 'memoryOnly')\nvar UpperSetpoint = global.get('kiln_01.UpperSetpoint', 'memoryOnly')\nvar LowerSetpoint = global.get('kiln_01.LowerSetpoint', 'memoryOnly')\nvar RampDirection = global.get('kiln_01.RampDirection', 'memoryOnly')\nvar active_schedule = global.get('kiln_01.active_schedule')\nvar segment_count = active_schedule.segments.length\nvar active_segment_index = global.get('kiln_01.active_segment_index')\nvar topic\nvar segment_settings\nvar data\nvar msg_out\nvar Temperature_Tolerance = 3 // degrees\n\n\n// check if temps have been reached or advance is commanded\nif ((RampDirection == 'Increasing' && UpperTemperature >= (Setpoint - Temperature_Tolerance) && LowerTemperature >= (Setpoint - Temperature_Tolerance)) || \n    (RampDirection == 'Decreasing' && UpperTemperature <= (Setpoint + Temperature_Tolerance) && LowerTemperature <= (Setpoint + Temperature_Tolerance)) ||\n    msg.payload == 'Advance' ||\n    msg.payload == 'Release'){\n\n    if (segment_count - 1 > active_segment_index) {\n        // advance to next segment\n        active_segment_index = active_segment_index + 1\n        global.set('kiln_01.active_segment_index', active_segment_index)\n        segment_settings = active_schedule.segments[active_segment_index]\n        data = {segment_settings}\n        topic = \"init\"\n        msg_out = {topic,data}\n        return [null,msg_out]\n    } else {\n        // end the schedule\n        topic = \"stop\"\n        msg_out = {topic}\n        return [msg_out,null]\n    }\n\n\n} else { // continue and try to reach temps\n    topic = \"ramp\"\n    msg_out = {topic}\n    return [null,msg_out]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 620,
        "wires": [
            [
                "c96334b38e278286"
            ],
            [
                "7ab1dfdba11abf46"
            ]
        ]
    },
    {
        "id": "f1169a5a0d122c16",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "check segment enabled",
        "property": "payload.data.segment_settings.enabled",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "024377df3ae20b3c"
            ],
            [
                "b17e75bc51a86d9f"
            ]
        ]
    },
    {
        "id": "3ab377921817af3f",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - active segment",
        "mode": "link",
        "links": [
            "1d2a7e1b14ed985d"
        ],
        "x": 715,
        "y": 780,
        "wires": []
    },
    {
        "id": "09fb86f278b3d8bb",
        "type": "delay",
        "z": "e9cef8706a9cf7f6",
        "name": "Soak Timer",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2310,
        "y": 820,
        "wires": [
            [
                "e3d6a327375e4f52"
            ]
        ]
    },
    {
        "id": "e3d6a327375e4f52",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "done",
        "property": "remaining_milliseconds",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2450,
        "y": 820,
        "wires": [
            [
                "fa143e9381f1e1bd",
                "08c074c12dcb6141"
            ],
            [
                "09b4d93def762a30"
            ]
        ]
    },
    {
        "id": "09b4d93def762a30",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "status",
        "func": "var time\n\nif (!msg.reset){\n    msg.remaining_milliseconds = msg.remaining_milliseconds - 1000\n    if (msg.remaining_milliseconds <= 0) {\n        msg.delay = 0;\n        msg.flush = true;\n    }\n} else {\n    msg.remaining_milliseconds = 0\n}\n\ntime = { minutes: msg.remaining_milliseconds / 1000.0 / 60.0, seconds: msg.remaining_milliseconds / 1000.0, milliseconds: msg.remaining_milliseconds };\ntime.minutes = time.minutes.toFixed(2);\ntime.seconds = time.seconds.toFixed(2);\ntime.milliseconds = time.milliseconds.toFixed(2);\n\nif (time.milliseconds >= 0){\n    return [msg,time];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 880,
        "wires": [
            [
                "09fb86f278b3d8bb"
            ],
            [
                "b67b488fb3853a42",
                "b90c962fa16f8039"
            ]
        ]
    },
    {
        "id": "b67b488fb3853a42",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Remaining soak time",
        "mode": "link",
        "links": [],
        "x": 2395,
        "y": 880,
        "wires": []
    },
    {
        "id": "2eb008bbf30d2804",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "show active segment",
        "func": "var active_schedule = global.get('kiln_01.active_schedule')\nvar segment_count = active_schedule.segments.length\nvar active_segment_index = global.get('kiln_01.active_segment_index')\nactive_segment_index++\n\nif (msg.payload.status === 'IDLE') {\n    msg.payload = '0 of ' + segment_count.toString()\n} else {\n    msg.payload = active_segment_index.toString() + ' of ' + segment_count.toString()\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 780,
        "wires": [
            [
                "3ab377921817af3f"
            ]
        ]
    },
    {
        "id": "6b27feab56b1402a",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 880,
        "wires": [
            [
                "09b4d93def762a30"
            ]
        ]
    },
    {
        "id": "26a5dc0ca7be4550",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "end",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "end",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 480,
        "wires": [
            [
                "af8f2e69ea9f27c2"
            ]
        ]
    },
    {
        "id": "6348c0ed609dce8b",
        "type": "trigger",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "IDLE",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 960,
        "y": 180,
        "wires": [
            [
                "b209d1c9da6cb3c2"
            ]
        ]
    },
    {
        "id": "af8f2e69ea9f27c2",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "6a57983382d3490e"
        ],
        "x": 995,
        "y": 480,
        "wires": []
    },
    {
        "id": "0afd5835b34c3f7e",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check soak",
        "func": "var SoakTime = msg.payload.data.segment_settings.soak_time\n\nif (SoakTime > 0) {\n    msg.delay = SoakTime * 1000 * 60 // convert min to milliseconds\n    msg.topic = \"soak\"\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 680,
        "wires": [
            [
                "93a841c73beae51f"
            ],
            [
                "5e52028c66e776b3"
            ]
        ],
        "outputLabels": [
            "advance",
            "soak"
        ]
    },
    {
        "id": "fa143e9381f1e1bd",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "done",
        "mode": "link",
        "links": [],
        "x": 2555,
        "y": 820,
        "wires": []
    },
    {
        "id": "6cfcbd486aa01dca",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check temps and start soak",
        "func": "var UpperTemperature = global.get('kiln_01.UpperTemperature', 'memoryOnly')\nvar LowerTemperature = global.get('kiln_01.LowerTemperature', 'memoryOnly')\nvar Setpoint = global.get('kiln_01.Setpoint', 'memoryOnly')\nvar UpperSetpoint = global.get('kiln_01.UpperSetpoint', 'memoryOnly')\nvar LowerSetpoint = global.get('kiln_01.LowerSetpoint', 'memoryOnly')\nvar RampDirection = global.get('kiln_01.RampDirection', 'memoryOnly')\nvar RampRate = msg.payload.data.segment_settings.ramp_rate // per hour\nvar DeltaTime = 1000.0 / (1000.0 * 60.0 * 60.0) // the pulse timer is set for 1000ms. how many 1000 ms in 1 hour?\nvar DeltaTemp = DeltaTime * RampRate\nvar Temperature_Tolerance = 3 // degrees\n\n// ramp the setpoints\nif (RampDirection == 'Increasing') {\n    if (UpperSetpoint < Setpoint) UpperSetpoint = UpperSetpoint + DeltaTemp;\n    if (LowerSetpoint < Setpoint) LowerSetpoint = LowerSetpoint + DeltaTemp;\n} else if (RampDirection == 'Decreasing') {\n    if (UpperSetpoint > Setpoint) UpperSetpoint = UpperSetpoint - DeltaTemp;\n    if (LowerSetpoint > Setpoint) LowerSetpoint = LowerSetpoint - DeltaTemp;\n} else {\n    // uh oh...\n}\nglobal.set('kiln_01.UpperSetpoint',UpperSetpoint, 'memoryOnly')\nglobal.set('kiln_01.LowerSetpoint',LowerSetpoint, 'memoryOnly')\n\n// check if temps have been reached\n// TODO: add a confidence timer here to filter out spikes in temp\nif ((RampDirection == 'Increasing' \n    && UpperTemperature >= (Setpoint - Temperature_Tolerance) \n    && LowerTemperature >= (Setpoint - Temperature_Tolerance)) || \n    (RampDirection == 'Decreasing' \n    && UpperTemperature <= (Setpoint + Temperature_Tolerance) \n    && LowerTemperature <= (Setpoint) + Temperature_Tolerance)){\n        msg.topic = 'soak'\n        return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 520,
        "wires": [
            [
                "7ab1dfdba11abf46",
                "a12285de2cf6f69a"
            ]
        ]
    },
    {
        "id": "024377df3ae20b3c",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "set ramp direction",
        "func": "var UpperTemperature = global.get('kiln_01.UpperTemperature', 'memoryOnly')\nvar LowerTemperature = global.get('kiln_01.LowerTemperature', 'memoryOnly')\nvar AverageTemperature = (UpperTemperature + LowerTemperature) / 2.0\nvar Setpoint = global.get('kiln_01.Setpoint', 'memoryOnly')\n//var UpperSetpoint = global.get('kiln_01.UpperSetpoint', 'memoryOnly')\n//var LowerSetpoint = global.get('kiln_01.LowerSetpoint', 'memoryOnly')\n\n// determine ramping direction\nif (AverageTemperature > Setpoint) {\n    global.set('kiln_01.RampDirection', 'Decreasing', 'memoryOnly')\n} else {\n    global.set('kiln_01.RampDirection', 'Increasing', 'memoryOnly')\n}\n\n// seed the starting temperature\nglobal.set('kiln_01.UpperSetpoint',UpperTemperature, 'memoryOnly')\nglobal.set('kiln_01.LowerSetpoint',LowerTemperature, 'memoryOnly')\n\nmsg.delay = 1000 // set duration between ramp calculations\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 480,
        "wires": [
            [
                "585e8b1656cbef91"
            ]
        ]
    },
    {
        "id": "cc0f47bb7c2fcf67",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "oneshot on startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "6202fbcb0c1e1b73"
            ]
        ]
    },
    {
        "id": "6202fbcb0c1e1b73",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "set active schedule",
        "rules": [
            {
                "t": "set",
                "p": "kiln_01.active_schedule",
                "pt": "global",
                "to": "kiln_01.schedules[0]",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "93a841c73beae51f",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check hold",
        "func": "var HoldEnabled = msg.payload.data.segment_settings.hold\n\nif (HoldEnabled) {\n    msg.topic = 'hold';\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 680,
        "wires": [
            [
                "b17e75bc51a86d9f"
            ],
            [
                "7ab1dfdba11abf46"
            ]
        ],
        "outputLabels": [
            "advance",
            "hold"
        ]
    },
    {
        "id": "788e9bd3efaa96d1",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Lower Setpoint",
        "mode": "link",
        "links": [
            "f0b946251521a686"
        ],
        "x": 1995,
        "y": 360,
        "wires": []
    },
    {
        "id": "1a062e18a18563e6",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Upper Setpoint",
        "mode": "link",
        "links": [
            "82e6c4e0fa7da46d"
        ],
        "x": 1995,
        "y": 320,
        "wires": []
    },
    {
        "id": "ca0c49d02da79d4b",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "get upper setpoint",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::kiln_01.UpperSetpoint",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 320,
        "wires": [
            [
                "5a6f965c5b8dbf4b"
            ]
        ]
    },
    {
        "id": "27efc666717154eb",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "get lower setpoint",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::kiln_01.LowerSetpoint",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 360,
        "wires": [
            [
                "1bfc8a02fea4f2a5"
            ]
        ]
    },
    {
        "id": "5a6f965c5b8dbf4b",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 320,
        "wires": [
            [
                "1a062e18a18563e6"
            ]
        ]
    },
    {
        "id": "1bfc8a02fea4f2a5",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 360,
        "wires": [
            [
                "788e9bd3efaa96d1"
            ]
        ]
    },
    {
        "id": "d73d6c1dd682f172",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "ramp",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ramp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "5b05096dea13f2c2"
            ]
        ]
    },
    {
        "id": "5b05096dea13f2c2",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 995,
        "y": 520,
        "wires": []
    },
    {
        "id": "e5d4e9ed610e164f",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "hold",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "hold",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "94a351c8d74cd63c"
            ]
        ]
    },
    {
        "id": "94a351c8d74cd63c",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 655,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c70cd7dd26e8bb29",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "edb935f4183746b0",
            "0f8e38076da240d0"
        ],
        "x": 1515,
        "y": 340,
        "wires": [
            [
                "ca0c49d02da79d4b",
                "27efc666717154eb",
                "dc2c386dedaeed7e"
            ]
        ]
    },
    {
        "id": "626dec0a807f2c02",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "if topic == \"state\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "state",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "ec1c06cf9954a2a9"
            ]
        ]
    },
    {
        "id": "ec1c06cf9954a2a9",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "set FSM status",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.FsmStatus_Schedule",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c6547f97853f37",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "if topic == \"state\"",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "state",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 820,
        "wires": [
            [
                "526b0be082290739"
            ]
        ]
    },
    {
        "id": "526b0be082290739",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "set FSM status",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.FsmStatus_Segment",
                "pt": "global",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "dc2c386dedaeed7e",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "get ramp rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.segment_settings.ramp_rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 400,
        "wires": [
            [
                "233d081ef7b67749"
            ]
        ]
    },
    {
        "id": "233d081ef7b67749",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - ramp rate",
        "mode": "link",
        "links": [
            "899c85f172cb1839"
        ],
        "x": 1995,
        "y": 400,
        "wires": []
    },
    {
        "id": "0f8e38076da240d0",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "c70cd7dd26e8bb29"
        ],
        "x": 1435,
        "y": 480,
        "wires": []
    },
    {
        "id": "e2406de38b14e0d9",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "custom timer with status output",
        "info": "",
        "x": 2310,
        "y": 920,
        "wires": []
    },
    {
        "id": "a4e1c63f7192b11c",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "soak",
        "payload": "10000",
        "payloadType": "num",
        "x": 1990,
        "y": 820,
        "wires": [
            [
                "6580da1466ddcdf1"
            ]
        ]
    },
    {
        "id": "968607645a8d7068",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2035,
        "y": 880,
        "wires": [
            [
                "6b27feab56b1402a"
            ]
        ],
        "l": false
    },
    {
        "id": "08c074c12dcb6141",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2560,
        "y": 740,
        "wires": []
    },
    {
        "id": "b90c962fa16f8039",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2510,
        "y": 900,
        "wires": []
    },
    {
        "id": "cf4a3d91ef7eb56e",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ramp",
        "payload": "5000",
        "payloadType": "num",
        "x": 1980,
        "y": 780,
        "wires": [
            [
                "6580da1466ddcdf1"
            ]
        ]
    },
    {
        "id": "be296861cf96f889",
        "type": "delay",
        "z": "e9cef8706a9cf7f6",
        "name": "Soak Timer",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1270,
        "y": 780,
        "wires": [
            [
                "b2be957b0b8f3b28"
            ]
        ]
    },
    {
        "id": "b2be957b0b8f3b28",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "done",
        "property": "remaining_milliseconds",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 780,
        "wires": [
            [
                "ebc3b9a998cbb305",
                "93a841c73beae51f"
            ],
            [
                "57da66cbb8664644"
            ]
        ]
    },
    {
        "id": "57da66cbb8664644",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "status",
        "func": "var time\n\nif (!msg.reset){\n    msg.remaining_milliseconds = msg.remaining_milliseconds - 1000\n    if (msg.remaining_milliseconds <= 0) {\n        msg.delay = 0;\n        msg.flush = true;\n    }\n} else {\n    msg.remaining_milliseconds = 0\n}\n\ntime = { minutes: msg.remaining_milliseconds / 1000.0 / 60.0, seconds: msg.remaining_milliseconds / 1000.0, milliseconds: msg.remaining_milliseconds };\ntime.minutes = time.minutes.toFixed(2);\ntime.seconds = time.seconds.toFixed(2);\ntime.milliseconds = time.milliseconds.toFixed(2);\n\nif (time.milliseconds >= 0){\n    return [msg,time];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 840,
        "wires": [
            [
                "be296861cf96f889"
            ],
            [
                "dbbb8ea68ee4121f"
            ]
        ]
    },
    {
        "id": "5e52028c66e776b3",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "delay",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "be296861cf96f889"
            ]
        ]
    },
    {
        "id": "b79bc4ea4760e612",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "57da66cbb8664644"
            ]
        ]
    },
    {
        "id": "cb32bc877d76c6f3",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "custom timer with status output",
        "info": "",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "dbbb8ea68ee4121f",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "minutes",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 920,
        "wires": [
            [
                "f1d4774590c51f3d"
            ]
        ]
    },
    {
        "id": "ebc3b9a998cbb305",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "done",
        "mode": "link",
        "links": [],
        "x": 1535,
        "y": 760,
        "wires": []
    },
    {
        "id": "f1d4774590c51f3d",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "status",
        "mode": "link",
        "links": [
            "bc808949af0e238a"
        ],
        "x": 1675,
        "y": 920,
        "wires": []
    },
    {
        "id": "6580da1466ddcdf1",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "delay",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 820,
        "wires": [
            [
                "09fb86f278b3d8bb"
            ]
        ]
    },
    {
        "id": "a12285de2cf6f69a",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 500,
        "wires": []
    },
    {
        "id": "c96f9cb61b158baf",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 135,
        "y": 360,
        "wires": [
            [
                "f45e246dbf521446"
            ]
        ],
        "l": false
    },
    {
        "id": "35573d9f8cb557cc",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "get upper temp",
        "func": "// https://github.com/maugdog/max31855\n\n/**\n * Node.js module for driving the Adafruit MAX31855 thermocouple temperature amplifier on Raspberry Pi.\n *\n * Currently supports only hardware SPI configuration (as opposed to software SPI using GPIO pins).\n * Note: May require running under sudo for SPI permissions.\n * Note: The SPI master driver is disabled by default on Raspian Linux and must be enabled. see here:\n * https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md\n */\n\n//var SPI = require('pi-spi');\n\nfunction MAX31855() {\n  // Initialize the SPI settings\n  this._spi = SPI.initialize(\"/dev/spidev0.1\");\n  this._spi.clockSpeed(5000000);\n  this._spi.dataMode(0);\n  this._spi.bitOrder(SPI.order.MSB_FIRST);\n}\n\n/** Read 32 bits from the SPI bus. */\nMAX31855.prototype._read32 = function(callback) {\n  this._spi.read(4, function(error, bytes) {\n    if(error) {\n      console.error(error);\n    } else {\n      if(!bytes || bytes.length != 4) {\n        throw new Error('MAX31855: Did not read expected number of bytes from device!');\n      } else {\n        value = bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3];\n        //console.log('Raw value: ', value);\n        callback(value);\n      }\n    }\n  });\n};\n\n/** Returns the internal temperature value in degrees Celsius. */\nMAX31855.prototype.readInternalC = function(callback) {\n  if(callback) {\n    this._read32(function(value) {\n      // Ignore bottom 4 bits of thermocouple data.\n  \t\tvalue >>= 4;\n  \t\t// Grab bottom 11 bits as internal temperature data.\n  \t\tvar internal = value & 0x7FF;\n  \t\tif(value & 0x800) {\n        // Negative value, take 2's compliment.\n        internal = ~internal + 1;\n      }\n      // Scale by 0.0625 degrees C per bit and return value.\n      callback(internal * 0.0625);\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n/** Return the thermocouple temperature value. Value is returned in degrees celsius */\nMAX31855.prototype.readTempC = function(callback) {\n  if(callback) {\n    var self = this; // Scope closure\n    this._read32(function(value) {\n      // Check for error reading value.\n      if(value & 0x7) {\n        callback(NaN);\n      } else {\n        if(value & 0x80000000) { // Check if signed bit is set.\n          // Negative value, shift the bits and take 2's compliment.\n          value >>= 18;\n          value = ~value + 1;\n        } else { // Positive value, just shift the bits to get the value.\n          value >>= 18;\n        }\n        // Scale by 0.25 degrees C per bit\n        callback(value * 0.25);\n      }\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n//module.exports = MAX31855;\n\nvar thermoSensor = new MAX31855();\nthermoSensor.readTempC(function(temp) {\n    //console.log('Temp in degrees celsius: ', temp);\n    //node.warn(temp);\n    \n    temp = temp*9/5+32\n    global.set('kiln_01.UpperTemperature', temp, 'memoryOnly');\n    \n    var id = 1;\n    var newMsg = {\n     \"topic\": \"INSERT INTO temperatures values(\" + temp + \", date('now'), time('now'), Kiln_01_UpperTemperature)\",\n     //\"topic\": \"INSERT INTO TEMPERATURE VALUES ( \" + msg.payload + \", \" + temp + \", \" + id + \")\",\n     \"temperature\" : temp,\n     \"payload\": msg.payload\n    }\n    node.send(newMsg); // node.send() is needed for async\n    node.done();\n});\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "SPI",
                "module": "pi-spi"
            }
        ],
        "x": 295,
        "y": 340,
        "wires": [
            [
                "0d670f61e6fde01c"
            ]
        ],
        "l": false
    },
    {
        "id": "90d2df249ed5559d",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "get lower temp",
        "func": "// https://github.com/maugdog/max31855\n\n/**\n * Node.js module for driving the Adafruit MAX31855 thermocouple temperature amplifier on Raspberry Pi.\n *\n * Currently supports only hardware SPI configuration (as opposed to software SPI using GPIO pins).\n * Note: May require running under sudo for SPI permissions.\n * Note: The SPI master driver is disabled by default on Raspian Linux and must be enabled. see here:\n * https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md\n */\n\n//var SPI = require('pi-spi');\n\nfunction MAX31855() {\n  // Initialize the SPI settings\n  this._spi = SPI.initialize(\"/dev/spidev0.0\");\n  this._spi.clockSpeed(5000000);\n  this._spi.dataMode(0);\n  this._spi.bitOrder(SPI.order.MSB_FIRST);\n}\n\n/** Read 32 bits from the SPI bus. */\nMAX31855.prototype._read32 = function(callback) {\n  this._spi.read(4, function(error, bytes) {\n    if(error) {\n      console.error(error);\n    } else {\n      if(!bytes || bytes.length != 4) {\n        throw new Error('MAX31855: Did not read expected number of bytes from device!');\n      } else {\n        value = bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3];\n        //console.log('Raw value: ', value);\n        callback(value);\n      }\n    }\n  });\n};\n\n/** Returns the internal temperature value in degrees Celsius. */\nMAX31855.prototype.readInternalC = function(callback) {\n  if(callback) {\n    this._read32(function(value) {\n      // Ignore bottom 4 bits of thermocouple data.\n  \t\tvalue >>= 4;\n  \t\t// Grab bottom 11 bits as internal temperature data.\n  \t\tvar internal = value & 0x7FF;\n  \t\tif(value & 0x800) {\n        // Negative value, take 2's compliment.\n        internal = ~internal + 1;\n      }\n      // Scale by 0.0625 degrees C per bit and return value.\n      callback(internal * 0.0625);\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n/** Return the thermocouple temperature value. Value is returned in degrees celsius */\nMAX31855.prototype.readTempC = function(callback) {\n  if(callback) {\n    var self = this; // Scope closure\n    this._read32(function(value) {\n      // Check for error reading value.\n      if(value & 0x7) {\n        callback(NaN);\n      } else {\n        if(value & 0x80000000) { // Check if signed bit is set.\n          // Negative value, shift the bits and take 2's compliment.\n          value >>= 18;\n          value = ~value + 1;\n        } else { // Positive value, just shift the bits to get the value.\n          value >>= 18;\n        }\n        // Scale by 0.25 degrees C per bit\n        callback(value * 0.25);\n      }\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n//module.exports = MAX31855;\n\nvar thermoSensor = new MAX31855();\nthermoSensor.readTempC(function(temp) {\n    //console.log('Temp in degrees celsius: ', temp);\n    //node.warn(temp);\n    \n    temp = temp*9/5+32\n    global.set('kiln_01.LowerTemperature', temp, 'memoryOnly');\n    \n    var id = 2;\n    var newMsg = {\n     \"topic\": \"INSERT INTO temperatures values(\" + temp + \", date('now'), time('now'), Kiln_01_LowerTemperature)\",\n     //\"topic\": \"INSERT INTO TEMPERATURE VALUES ( \" + msg.payload + \", \" + temp + \", \" + id + \")\",\n     \"temperature\" : temp,\n     \"payload\": msg.payload\n    }\n    node.send(newMsg); // node.send() is needed for async\n    node.done();\n});\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "SPI",
                "module": "pi-spi"
            }
        ],
        "x": 295,
        "y": 380,
        "wires": [
            [
                "8c970109233d3f07"
            ]
        ],
        "l": false
    },
    {
        "id": "774be46b1df4202c",
        "type": "catch",
        "z": "3154c44d1a91de38",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "08d3626ca47817b7"
            ]
        ]
    },
    {
        "id": "08d3626ca47817b7",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "6c490df17d1de881",
        "type": "rbe",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "deadbandEq",
        "gap": "1",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "temperature",
        "topi": "topic",
        "x": 515,
        "y": 220,
        "wires": [
            [
                "dbaab26e980063a4"
            ]
        ],
        "l": false
    },
    {
        "id": "bd45525a6924a5c5",
        "type": "rbe",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "deadbandEq",
        "gap": "1",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "temperature",
        "topi": "topic",
        "x": 515,
        "y": 180,
        "wires": [
            [
                "5cdb1e903b180a71"
            ]
        ],
        "l": false
    },
    {
        "id": "aa4ddf8613c60dce",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 515,
        "y": 280,
        "wires": [
            [
                "d1a65eb3c343781d"
            ]
        ],
        "l": false
    },
    {
        "id": "d89f8dde7ffe2c9d",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 515,
        "y": 320,
        "wires": [
            [
                "23a36d0bd1c7574b"
            ]
        ],
        "l": false
    },
    {
        "id": "dcbc073ea7b777ee",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "Output - Upper Temperature",
        "mode": "link",
        "links": [
            "9b6b7f2249d013ba"
        ],
        "x": 635,
        "y": 280,
        "wires": []
    },
    {
        "id": "e65201e766b76bfd",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "Output - Lower Temperature",
        "mode": "link",
        "links": [
            "4ea9f6ce194f1281"
        ],
        "x": 635,
        "y": 320,
        "wires": []
    },
    {
        "id": "ea802ed93ceeae42",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "sim temps",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.UpperTemperature",
                "pt": "global",
                "to": "#:(memoryOnly)::kiln_01.UpperSetpoint",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "#:(memoryOnly)::kiln_01.UpperSetpoint",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "aa4ddf8613c60dce",
                "bd45525a6924a5c5"
            ]
        ]
    },
    {
        "id": "1235c1dcd4711779",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "build measurement",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "Kiln_01_UpperTemperature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "temperature",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 635,
        "y": 180,
        "wires": [
            [
                "2f036bde9aaff376"
            ]
        ],
        "l": false
    },
    {
        "id": "9468a3b6de1782db",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "build measurement",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "Kiln_01_LowerTemperature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "temperature",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 635,
        "y": 220,
        "wires": [
            [
                "2f036bde9aaff376"
            ]
        ],
        "l": false
    },
    {
        "id": "23a36d0bd1c7574b",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "set precision",
        "func": "msg.payload = msg.payload.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 320,
        "wires": [
            [
                "e65201e766b76bfd"
            ]
        ],
        "l": false
    },
    {
        "id": "d1a65eb3c343781d",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "set precision",
        "func": "msg.payload = msg.payload.toFixed(2);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 280,
        "wires": [
            [
                "dcbc073ea7b777ee"
            ]
        ],
        "l": false
    },
    {
        "id": "819eacdd5b2d931c",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "-1000",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 175,
        "y": 240,
        "wires": [
            [
                "ea802ed93ceeae42",
                "79016fc241d79289"
            ]
        ],
        "l": false
    },
    {
        "id": "bc3e2212fd11e206",
        "type": "ui_switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Simulation",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 490,
        "y": 500,
        "wires": [
            [
                "d76c7ce673b280af"
            ]
        ]
    },
    {
        "id": "79016fc241d79289",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "sim temps",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.LowerTemperature",
                "pt": "global",
                "to": "#:(memoryOnly)::kiln_01.LowerSetpoint",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "#:(memoryOnly)::kiln_01.LowerSetpoint",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "d89f8dde7ffe2c9d",
                "6c490df17d1de881"
            ]
        ]
    },
    {
        "id": "d76c7ce673b280af",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "set sim temp",
        "rules": [
            {
                "t": "set",
                "p": "kiln_01.SimulateTemperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 500,
        "wires": [
            [
                "a3ad47349ae89c29"
            ]
        ],
        "l": false
    },
    {
        "id": "f45e246dbf521446",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check sim temp",
        "property": "kiln_01.SimulateTemperature",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 195,
        "y": 360,
        "wires": [
            [
                "90d2df249ed5559d",
                "35573d9f8cb557cc"
            ]
        ],
        "l": false
    },
    {
        "id": "2f036bde9aaff376",
        "type": "influxdb out",
        "z": "3154c44d1a91de38",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "home",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "52w",
        "org": "organisation",
        "bucket": "bucket",
        "x": 820,
        "y": 200,
        "wires": []
    },
    {
        "id": "dbaab26e980063a4",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "temp cutoff",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 575,
        "y": 220,
        "wires": [
            [
                "9468a3b6de1782db"
            ]
        ],
        "l": false
    },
    {
        "id": "5cdb1e903b180a71",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "temp cutoff",
        "property": "temperature",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 575,
        "y": 180,
        "wires": [
            [
                "1235c1dcd4711779"
            ]
        ],
        "l": false
    },
    {
        "id": "5689c5638cfebacb",
        "type": "ui_ui_control",
        "z": "3154c44d1a91de38",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "85cd714804063e2b"
            ]
        ]
    },
    {
        "id": "85cd714804063e2b",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 500,
        "wires": [
            [],
            [
                "477ed7158a34c5bf"
            ],
            []
        ]
    },
    {
        "id": "477ed7158a34c5bf",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "get sim temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kiln_01.SimulateTemperature",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 375,
        "y": 500,
        "wires": [
            [
                "bc3e2212fd11e206"
            ]
        ],
        "l": false
    },
    {
        "id": "218ba5aacd9d564e",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "a3ad47349ae89c29"
        ],
        "x": 115,
        "y": 240,
        "wires": [
            [
                "819eacdd5b2d931c"
            ]
        ]
    },
    {
        "id": "a3ad47349ae89c29",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "218ba5aacd9d564e"
        ],
        "x": 655,
        "y": 500,
        "wires": []
    },
    {
        "id": "16e8124d59e7fb62",
        "type": "rpi-gpio out",
        "z": "3154c44d1a91de38",
        "name": "Upper_Heater",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "708a944b9506b9a4",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 575,
        "y": 700,
        "wires": [
            [
                "16e8124d59e7fb62"
            ]
        ],
        "l": false
    },
    {
        "id": "2a324207803267c0",
        "type": "PID",
        "z": "3154c44d1a91de38",
        "name": "Upper_PID",
        "setpoint": "0",
        "pb": 1,
        "ti": 9999,
        "td": 0,
        "integral_default": 0.5,
        "smooth_factor": 3,
        "max_interval": 600,
        "enable": 1,
        "disabled_op": 0,
        "x": 290,
        "y": 720,
        "wires": [
            [
                "9cd105f7bbe1e048"
            ]
        ]
    },
    {
        "id": "115006a07baec10a",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "Upper PID",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "setpoint",
                "v": "#:(memoryOnly)::kiln_01.UpperSetpoint",
                "vt": "global"
            },
            {
                "p": "prop_band",
                "v": "10",
                "vt": "num"
            },
            {
                "p": "t_integral",
                "v": "50",
                "vt": "num"
            },
            {
                "p": "t_derivative",
                "v": "15",
                "vt": "num"
            },
            {
                "p": "integral_default",
                "v": "0.5",
                "vt": "num"
            },
            {
                "p": "max_interval",
                "v": "600",
                "vt": "num"
            },
            {
                "p": "smooth_factor",
                "v": "3",
                "vt": "num"
            },
            {
                "p": "disabled_op",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "process",
        "payload": "#:(memoryOnly)::kiln_01.UpperTemperature",
        "payloadType": "global",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "2a324207803267c0"
            ]
        ]
    },
    {
        "id": "ee6259aabb77fcdf",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "11d1503b33735b7a"
            ]
        ]
    },
    {
        "id": "11d1503b33735b7a",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "initialize setpoints",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.Setpoint",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.UpperSetpoint",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::kiln_01.LowerSetpoint",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "12681729a71ef662",
        "type": "rpi-gpio out",
        "z": "3154c44d1a91de38",
        "name": "Lower_Heater",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 700,
        "y": 820,
        "wires": []
    },
    {
        "id": "26dcb58ffb63fae4",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 575,
        "y": 780,
        "wires": [
            [
                "12681729a71ef662"
            ]
        ],
        "l": false
    },
    {
        "id": "7b954dbf854f3ea0",
        "type": "PID",
        "z": "3154c44d1a91de38",
        "name": "Lower_PID",
        "setpoint": "0",
        "pb": 1,
        "ti": 9999,
        "td": 0,
        "integral_default": 0.5,
        "smooth_factor": 3,
        "max_interval": 600,
        "enable": 1,
        "disabled_op": 0,
        "x": 290,
        "y": 800,
        "wires": [
            [
                "a7b88091f8fc6bef"
            ]
        ]
    },
    {
        "id": "88e2bcb4fac2146f",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "Lower PID",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "setpoint",
                "v": "#:(memoryOnly)::kiln_01.LowerSetpoint",
                "vt": "global"
            },
            {
                "p": "prop_band",
                "v": "10",
                "vt": "num"
            },
            {
                "p": "t_integral",
                "v": "50",
                "vt": "num"
            },
            {
                "p": "t_derivative",
                "v": "15",
                "vt": "num"
            },
            {
                "p": "integral_default",
                "v": "0.5",
                "vt": "num"
            },
            {
                "p": "max_interval",
                "v": "600",
                "vt": "num"
            },
            {
                "p": "smooth_factor",
                "v": "3",
                "vt": "num"
            },
            {
                "p": "disabled_op",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "process",
        "payload": "#:(memoryOnly)::kiln_01.LowerTemperature",
        "payloadType": "global",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "7b954dbf854f3ea0"
            ]
        ]
    },
    {
        "id": "a9bb39e013a1c8f9",
        "type": "range",
        "z": "3154c44d1a91de38",
        "minin": "0",
        "maxin": "1000",
        "minout": "1",
        "maxout": "100",
        "action": "clamp",
        "round": false,
        "property": "delay",
        "name": "",
        "x": 575,
        "y": 660,
        "wires": [
            [
                "ba418671e4996002"
            ]
        ],
        "l": false
    },
    {
        "id": "b6d260258241c4b6",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "ba418671e4996002",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "set precision",
        "func": "msg.delay = parseFloat(msg.delay.toFixed(2))\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 635,
        "y": 660,
        "wires": [
            [
                "b6d260258241c4b6"
            ]
        ],
        "l": false
    },
    {
        "id": "e4a7e7415279dc26",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "PID controller and ssr output",
        "info": "",
        "x": 140,
        "y": 620,
        "wires": []
    },
    {
        "id": "4411f03fad54a3bf",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "thermocouples input and data collection",
        "info": "",
        "x": 180,
        "y": 80,
        "wires": []
    },
    {
        "id": "a4ed4631090d7be2",
        "type": "pid-autotune",
        "z": "3154c44d1a91de38",
        "name": "",
        "outstep": 100,
        "maxout": 100,
        "lookback": 30,
        "setpoint": "setpoint",
        "setpointType": "msg",
        "tempVariable": "payload",
        "tempVariableType": "msg",
        "tempVariableMsgTopic": "temp-BK",
        "x": 315,
        "y": 1200,
        "wires": [
            [
                "f7c8ab15770ed72f",
                "3886b5d7020cc41f",
                "0e680bb2e911d87b"
            ],
            [
                "c198e708a2491f1a",
                "109d7cd0791b90b2",
                "27b2200cbc2f1d3c",
                "d9e27549c8bf7484"
            ],
            [
                "5d01b26eed86d05e",
                "41c76b447e5a7f49"
            ]
        ],
        "l": false
    },
    {
        "id": "28e1f7a2fafcbdcf",
        "type": "kettle-sim",
        "z": "3154c44d1a91de38",
        "name": "Upper",
        "diam": 35,
        "volume": 40,
        "temp": 20,
        "power": 2.5,
        "ambientTemp": "20",
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "d079ec0d021c5c4d"
            ]
        ]
    },
    {
        "id": "f7c8ab15770ed72f",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 415,
        "y": 1140,
        "wires": [],
        "l": false
    },
    {
        "id": "c198e708a2491f1a",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 475,
        "y": 1280,
        "wires": [],
        "l": false
    },
    {
        "id": "5d01b26eed86d05e",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 475,
        "y": 1300,
        "wires": [],
        "l": false
    },
    {
        "id": "11293ac4da1998cb",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 615,
        "y": 1260,
        "wires": [],
        "l": false
    },
    {
        "id": "9df9b441c4df9fd5",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 1100,
        "wires": [
            [
                "c43b8ffc7bdfb6c8"
            ]
        ]
    },
    {
        "id": "5e70924266c70db2",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "stop",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 1140,
        "wires": [
            [
                "8ddc4dc27ddde942"
            ]
        ]
    },
    {
        "id": "cc1e13993bb79842",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "add topic and setpoint",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp-BK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 155,
        "y": 1200,
        "wires": [
            [
                "a4ed4631090d7be2",
                "2a71e74aed4aed71"
            ]
        ],
        "l": false
    },
    {
        "id": "0faa8155477cbf83",
        "type": "ui_chart",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "PV",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Process Value vs Control Value",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 615,
        "y": 1260,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "41c76b447e5a7f49",
        "type": "ui_text",
        "z": "3154c44d1a91de38",
        "group": "a91f3f1520863187",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "State:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 475,
        "y": 1300,
        "wires": [],
        "l": false
    },
    {
        "id": "3886b5d7020cc41f",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check state",
        "property": "state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "succeeded",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 415,
        "y": 1140,
        "wires": [
            [
                "bf2846eb95078201"
            ]
        ],
        "l": false
    },
    {
        "id": "109d7cd0791b90b2",
        "type": "ui_chart",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 4,
        "width": 8,
        "height": 4,
        "label": "CV",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 475,
        "y": 1280,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "afda973a8b37ccbd",
        "type": "ui_button",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1100,
        "wires": [
            [
                "c43b8ffc7bdfb6c8"
            ]
        ]
    },
    {
        "id": "f9814317fd20db6a",
        "type": "ui_button",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 90,
        "y": 1140,
        "wires": [
            [
                "8ddc4dc27ddde942"
            ]
        ]
    },
    {
        "id": "6fe3006534165e7e",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Kp Tuned",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 2,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 780,
        "y": 1060,
        "wires": [
            [
                "2749cd7e983db696"
            ]
        ]
    },
    {
        "id": "13310be9dc639076",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Ki Tuned",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 7,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 780,
        "y": 1080,
        "wires": [
            [
                "3d8ec176c7828a74"
            ]
        ]
    },
    {
        "id": "7f963fa9b4f1ed1e",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Kd Tuned",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 780,
        "y": 1100,
        "wires": [
            [
                "e12d84d2b53c7d1b"
            ]
        ]
    },
    {
        "id": "9110a3bf96f501b4",
        "type": "ui_ui_control",
        "z": "3154c44d1a91de38",
        "name": "dashboard events",
        "events": "all",
        "x": 475,
        "y": 1100,
        "wires": [
            [
                "6f2137875b9431ac"
            ]
        ],
        "l": false
    },
    {
        "id": "6f2137875b9431ac",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check dashboard event",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 575,
        "y": 1140,
        "wires": [
            [],
            [
                "c6876f04ccfce4bc",
                "cc7258ccb2dbf18a",
                "095700da478605aa",
                "8f59a7bd5ca2b3d0",
                "0943b38e9d03cb59",
                "3bfe8a0b1fd883f8"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "dbc67405d2302217",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "SP",
        "tooltip": "",
        "group": "a91f3f1520863187",
        "order": 11,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "5000",
        "step": "1",
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "cbf3ac7c18d7903f"
            ]
        ]
    },
    {
        "id": "43b8e4fd60478d53",
        "type": "ui_gauge",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "PV",
        "label": "",
        "format": "{{value | number:1}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 675,
        "y": 1240,
        "wires": [],
        "l": false
    },
    {
        "id": "d9e27549c8bf7484",
        "type": "ui_gauge",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 5,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "CV",
        "label": "",
        "format": "{{value | number:1}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 475,
        "y": 1260,
        "wires": [],
        "l": false
    },
    {
        "id": "15feced3d7945692",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "process in",
        "links": [
            "ea34eeb27fad76bd"
        ],
        "x": 475,
        "y": 1200,
        "wires": [
            [
                "cc1e13993bb79842",
                "11293ac4da1998cb",
                "1d22dbe917aa03e5",
                "0faa8155477cbf83"
            ]
        ]
    },
    {
        "id": "27b2200cbc2f1d3c",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "process out",
        "mode": "link",
        "links": [
            "68010d0503505d41"
        ],
        "x": 415,
        "y": 1200,
        "wires": []
    },
    {
        "id": "68010d0503505d41",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "27b2200cbc2f1d3c"
        ],
        "x": 75,
        "y": 1540,
        "wires": [
            [
                "088e631515f7976d"
            ]
        ]
    },
    {
        "id": "ea34eeb27fad76bd",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "15feced3d7945692"
        ],
        "x": 735,
        "y": 1440,
        "wires": []
    },
    {
        "id": "e28599a5b66d5219",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "sim equipment",
        "info": "",
        "x": 100,
        "y": 1400,
        "wires": []
    },
    {
        "id": "421d37ca2d37105c",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "PID auto-tuner",
        "info": "",
        "x": 100,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2a71e74aed4aed71",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 215,
        "y": 1200,
        "wires": [],
        "l": false
    },
    {
        "id": "1d22dbe917aa03e5",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "adjust max",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nvar setpoint = parseFloat(global.get('kiln_01.pid['+selected_zone+'].setpoint'))\nsetpoint = setpoint*1.3 // 130% of SP\nmsg = {payload: msg.payload, ui_control:{max:setpoint}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 615,
        "y": 1240,
        "wires": [
            [
                "43b8e4fd60478d53"
            ]
        ],
        "l": false
    },
    {
        "id": "eaecabd33a0a39a6",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "clear chart",
        "func": "/*msg.ui_control = {options: {\n        scales: {\n            yAxes: [{\n               \n                id: 'left-y-axis',\n                type: 'linear',\n                position: 'left',\n                ticks: {\n                    suggestedMin: 0,\n                    suggestedMax: 500\n                }\n            }            , {\n                id: 'right-y-axis',\n                type: 'linear',\n                position: 'right',\n                ticks: {\n                    suggestedMin: 0,\n                    suggestedMax: 100\n                }\n            }]\n        }\n    }\n    \n}*/\n//delete msg.payload\n\nvar data_array = [];\nmsg.payload = data_array\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 275,
        "y": 1100,
        "wires": [
            [
                "bc12ac433344b867"
            ]
        ],
        "l": false
    },
    {
        "id": "bc12ac433344b867",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "e76f50ed7101e619",
            "d90bb7ac841f2aa7"
        ],
        "x": 335,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d90bb7ac841f2aa7",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "bc12ac433344b867"
        ],
        "x": 375,
        "y": 1280,
        "wires": [
            [
                "109d7cd0791b90b2"
            ]
        ]
    },
    {
        "id": "e76f50ed7101e619",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "bc12ac433344b867"
        ],
        "x": 535,
        "y": 1260,
        "wires": [
            [
                "0faa8155477cbf83"
            ]
        ]
    },
    {
        "id": "b4acd03bd048e0e8",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 275,
        "y": 1480,
        "wires": [
            [
                "28e1f7a2fafcbdcf",
                "fa1eae53355dc45e"
            ]
        ],
        "l": false
    },
    {
        "id": "e714fc090a220458",
        "type": "ui_dropdown",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Zone",
        "tooltip": "",
        "place": "Select zone to tune",
        "group": "a91f3f1520863187",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Upper",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Lower",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 1140,
        "wires": [
            [
                "67b2506251ffccb4"
            ]
        ]
    },
    {
        "id": "67b2506251ffccb4",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "set zone",
        "rules": [
            {
                "t": "set",
                "p": "kiln_01.pid_selected_zone",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 875,
        "y": 1140,
        "wires": [
            [
                "6f2137875b9431ac"
            ]
        ],
        "l": false
    },
    {
        "id": "c6876f04ccfce4bc",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "get zone",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kiln_01.pid_selected_zone",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 675,
        "y": 1140,
        "wires": [
            [
                "e714fc090a220458"
            ]
        ],
        "l": false
    },
    {
        "id": "0943b38e9d03cb59",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].tuned.Kp') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 675,
        "y": 1060,
        "wires": [
            [
                "6fe3006534165e7e"
            ]
        ],
        "l": false
    },
    {
        "id": "8f59a7bd5ca2b3d0",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].tuned.Ki') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 675,
        "y": 1080,
        "wires": [
            [
                "13310be9dc639076"
            ]
        ],
        "l": false
    },
    {
        "id": "095700da478605aa",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].tuned.Kd') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 675,
        "y": 1100,
        "wires": [
            [
                "7f963fa9b4f1ed1e"
            ]
        ],
        "l": false
    },
    {
        "id": "cc7258ccb2dbf18a",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].setpoint') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 675,
        "y": 1120,
        "wires": [
            [
                "dbc67405d2302217"
            ]
        ],
        "l": false
    },
    {
        "id": "2749cd7e983db696",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Kp', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 1060,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "3d8ec176c7828a74",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Ki', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 1080,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "e12d84d2b53c7d1b",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Kd', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 1100,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "cbf3ac7c18d7903f",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].setpoint', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 1120,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "c43b8ffc7bdfb6c8",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].auto_tune',true)\nmsg.setpoint = global.get('kiln_01.pid['+selected_zone+'].setpoint') || 0\nmsg.topic = 'temp-BK'\nmsg.cmd = 'start'\nmsg.payload = 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 195,
        "y": 1100,
        "wires": [
            [
                "eaecabd33a0a39a6",
                "a4ed4631090d7be2"
            ]
        ],
        "l": false
    },
    {
        "id": "8ddc4dc27ddde942",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].auto_tune',false)\nmsg.cmd = 'stop'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 195,
        "y": 1140,
        "wires": [
            [
                "a4ed4631090d7be2"
            ]
        ],
        "l": false
    },
    {
        "id": "bf2846eb95078201",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone')\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Kp',msg.payload.Kp)\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Ki',msg.payload.Ki)\nglobal.set('kiln_01.pid['+selected_zone+'].tuned.Kd',msg.payload.Kd)\nmsg.payload = 'connect' // simulate user connecting to dashboard\nmsg.enabled = true // enable the zone selection dropdown\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 495,
        "y": 1140,
        "wires": [
            [
                "6f2137875b9431ac"
            ]
        ],
        "l": false
    },
    {
        "id": "0f39fcf52fbe57e7",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "on startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 415,
        "y": 1060,
        "wires": [
            [
                "14eaeb40b4aaaf08"
            ]
        ],
        "l": false
    },
    {
        "id": "14eaeb40b4aaaf08",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "init",
        "rules": [
            {
                "t": "set",
                "p": "kiln_01.pid_selected_zone",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "kiln_01.pid[0].auto_tune",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "kiln_01.pid[1].auto_tune",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 475,
        "y": 1060,
        "wires": [
            [
                "6f2137875b9431ac"
            ]
        ],
        "l": false
    },
    {
        "id": "fa1eae53355dc45e",
        "type": "kettle-sim",
        "z": "3154c44d1a91de38",
        "name": "Lower",
        "diam": 35,
        "volume": 40,
        "temp": 20,
        "power": 2.5,
        "ambientTemp": "20",
        "x": 390,
        "y": 1480,
        "wires": [
            [
                "96fcc0b1d662e4d3"
            ]
        ]
    },
    {
        "id": "44bca493ba4027c1",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 275,
        "y": 1440,
        "wires": [
            [
                "28e1f7a2fafcbdcf"
            ],
            [
                "fa1eae53355dc45e"
            ]
        ],
        "l": false
    },
    {
        "id": "96fcc0b1d662e4d3",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 495,
        "y": 1480,
        "wires": [
            [
                "bfb2efaba16708bb"
            ]
        ],
        "l": false
    },
    {
        "id": "d079ec0d021c5c4d",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 495,
        "y": 1440,
        "wires": [
            [
                "bfb2efaba16708bb"
            ]
        ],
        "l": false
    },
    {
        "id": "088e631515f7976d",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check simulation",
        "property": "kiln_01.SimulateTemperature",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 135,
        "y": 1540,
        "wires": [
            [
                "44bca493ba4027c1"
            ],
            [
                "249cc50f2d8e51f2"
            ]
        ],
        "l": false
    },
    {
        "id": "bfb2efaba16708bb",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check simulation",
        "property": "kiln_01.SimulateTemperature",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 575,
        "y": 1440,
        "wires": [
            [
                "ea34eeb27fad76bd"
            ]
        ],
        "l": false
    },
    {
        "id": "06bde8214be3037f",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check simulation",
        "property": "kiln_01.SimulateTemperature",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 555,
        "y": 1580,
        "wires": [
            [
                "ea34eeb27fad76bd"
            ]
        ],
        "l": false
    },
    {
        "id": "249cc50f2d8e51f2",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 275,
        "y": 1600,
        "wires": [
            [
                "d5be35f05e994888"
            ],
            [
                "431877d7412baca5"
            ]
        ],
        "l": false
    },
    {
        "id": "9cd105f7bbe1e048",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "is upper auto-tuning",
        "property": "kiln_01.pid[0].auto_tune",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 395,
        "y": 720,
        "wires": [
            [
                "d4cb1a52a4fe0d75"
            ]
        ],
        "l": false
    },
    {
        "id": "a7b88091f8fc6bef",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "is lower auto-tuning",
        "property": "kiln_01.pid[1].auto_tune",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 395,
        "y": 800,
        "wires": [
            [
                "5bb8a83cadcb2ba3"
            ]
        ],
        "l": false
    },
    {
        "id": "55db840a42d1c307",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "upper heater in",
        "links": [
            "d5be35f05e994888"
        ],
        "x": 395,
        "y": 740,
        "wires": [
            [
                "d4cb1a52a4fe0d75"
            ]
        ]
    },
    {
        "id": "2e9f7e8eed4fe956",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "lower heater in",
        "links": [
            "431877d7412baca5"
        ],
        "x": 395,
        "y": 820,
        "wires": [
            [
                "5bb8a83cadcb2ba3"
            ]
        ]
    },
    {
        "id": "d5be35f05e994888",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "55db840a42d1c307"
        ],
        "x": 335,
        "y": 1580,
        "wires": []
    },
    {
        "id": "431877d7412baca5",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "2e9f7e8eed4fe956"
        ],
        "x": 335,
        "y": 1620,
        "wires": []
    },
    {
        "id": "c9874287110179be",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "e091d89060e936b3"
        ],
        "x": 655,
        "y": 420,
        "wires": []
    },
    {
        "id": "c4c04a40bcd2b9a9",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temperature",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "temperature",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 420,
        "wires": [
            [
                "c9874287110179be"
            ]
        ],
        "l": false
    },
    {
        "id": "e091d89060e936b3",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "auto tune temp in",
        "links": [
            "c9874287110179be"
        ],
        "x": 495,
        "y": 1580,
        "wires": [
            [
                "06bde8214be3037f",
                "fcb6b0ab0d74b295"
            ]
        ]
    },
    {
        "id": "51e9a32e9cfe0fc0",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 515,
        "y": 380,
        "wires": [
            [
                "c4c04a40bcd2b9a9"
            ]
        ],
        "l": false
    },
    {
        "id": "9136a429c48c2758",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check zone",
        "property": "kiln_01.pid_selected_zone",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 515,
        "y": 420,
        "wires": [
            [
                "c4c04a40bcd2b9a9"
            ]
        ],
        "l": false
    },
    {
        "id": "fcb6b0ab0d74b295",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 1620,
        "wires": [],
        "l": false
    },
    {
        "id": "314b5c36b04a6fe5",
        "type": "ui_button",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "92429f8f445aacdf",
        "order": 17,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Accept",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1120,
        "y": 1060,
        "wires": [
            [
                "2a1239eb1382a3f1"
            ]
        ]
    },
    {
        "id": "2a1239eb1382a3f1",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nvar Kp = global.get('kiln_01.pid['+selected_zone+'].tuned.Kp')\nvar Ki = global.get('kiln_01.pid['+selected_zone+'].tuned.Ki')\nvar Kd = global.get('kiln_01.pid['+selected_zone+'].tuned.Kd')\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Kp', Kp)\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Ki', Ki)\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Kd', Kd)\nmsg.payload = 'connect' // simulate connect to dashboard\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1215,
        "y": 1060,
        "wires": [
            [
                "ab711bdeb68a3d2c"
            ]
        ],
        "l": false
    },
    {
        "id": "af32e9401426b102",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Kp Accepted",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 4,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 1110,
        "y": 1080,
        "wires": [
            [
                "0d18e5d55a771b28"
            ]
        ]
    },
    {
        "id": "9534b45782a1223d",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Ki Accepted",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 9,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 1110,
        "y": 1100,
        "wires": [
            [
                "5613bdfa7f1c272f"
            ]
        ]
    },
    {
        "id": "e561db1d61662ff9",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Kd Accepted",
        "tooltip": "",
        "group": "92429f8f445aacdf",
        "order": 14,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "100",
        "step": "0.001",
        "x": 1110,
        "y": 1120,
        "wires": [
            [
                "57fb0b6712136194"
            ]
        ]
    },
    {
        "id": "1da299db932510d2",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].accepted.Kp') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 995,
        "y": 1080,
        "wires": [
            [
                "af32e9401426b102"
            ]
        ],
        "l": false
    },
    {
        "id": "332636841b6a8353",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].accepted.Ki') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 995,
        "y": 1100,
        "wires": [
            [
                "9534b45782a1223d"
            ]
        ],
        "l": false
    },
    {
        "id": "30872bb0d76ee5ec",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nmsg.payload = global.get('kiln_01.pid['+selected_zone+'].accepted.Kd') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 995,
        "y": 1120,
        "wires": [
            [
                "e561db1d61662ff9"
            ]
        ],
        "l": false
    },
    {
        "id": "0d18e5d55a771b28",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Kp', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1215,
        "y": 1080,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "5613bdfa7f1c272f",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Ki', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1215,
        "y": 1100,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "57fb0b6712136194",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone') || 0\nglobal.set('kiln_01.pid['+selected_zone+'].accepted.Kd', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1215,
        "y": 1120,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "74e3e32b505706f9",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "e120014ae7100ef0"
        ],
        "x": 735,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e120014ae7100ef0",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "74e3e32b505706f9"
        ],
        "x": 935,
        "y": 1080,
        "wires": [
            [
                "30872bb0d76ee5ec",
                "332636841b6a8353",
                "1da299db932510d2"
            ]
        ]
    },
    {
        "id": "ab711bdeb68a3d2c",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "598a311988e79e25"
        ],
        "x": 1275,
        "y": 1060,
        "wires": []
    },
    {
        "id": "598a311988e79e25",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "ab711bdeb68a3d2c"
        ],
        "x": 475,
        "y": 1020,
        "wires": [
            [
                "6f2137875b9431ac"
            ]
        ]
    },
    {
        "id": "3bfe8a0b1fd883f8",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 675,
        "y": 1020,
        "wires": [
            [
                "74e3e32b505706f9"
            ]
        ],
        "l": false
    },
    {
        "id": "04a582644303c840",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "TODO: zone selected needs to not be selectable when running auto tune",
        "info": "",
        "x": 500,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f149b69a489b3e6f",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "TODO: fault when thermocouple is removed",
        "info": "",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "1e743148a5de6976",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "TODO: calibration routine",
        "info": "",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "0d670f61e6fde01c",
        "type": "smooth",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "temperature",
        "action": "low",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 355,
        "y": 340,
        "wires": [
            [
                "bd45525a6924a5c5",
                "aa4ddf8613c60dce",
                "51e9a32e9cfe0fc0"
            ]
        ],
        "l": false
    },
    {
        "id": "8c970109233d3f07",
        "type": "smooth",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "temperature",
        "action": "low",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 355,
        "y": 380,
        "wires": [
            [
                "9136a429c48c2758",
                "d89f8dde7ffe2c9d",
                "6c490df17d1de881"
            ]
        ],
        "l": false
    },
    {
        "id": "0e680bb2e911d87b",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_zone = global.get('kiln_01.pid_selected_zone')\nglobal.set('kiln_01.pid['+selected_zone+'].auto_tune',false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 1160,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "7c349b468f131a31",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "TODO: verify kiln_01.pid[].auto_tune is set to false when complete",
        "info": "",
        "x": 480,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d4cb1a52a4fe0d75",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "// create a new message object to clean it up\nvar msg_out = { delay: msg.payload * 1000 };\nvar FsmStatus_Schedule = global.get('kiln_01.FsmStatus_Schedule','memoryOnly')\n//var FsmStatus_Segment = global.get('kiln_01.FsmStatus_Segment','memoryOnly')\nvar auto_tune_upper = global.get('kiln_01.pid[0].auto_tune_upper')\nvar auto_tune_lower = global.get('kiln_01.pid[0].auto_tune_lower')\nvar UpperSetpoint = global.get('kiln_01.UpperSetpoint','memoryOnly')\nvar LowerSetpoint = global.get('kiln_01.LowerSetpoint','memoryOnly')\nvar UpperTemperature = global.get('kiln_01.UpperTemperature','memoryOnly')\nvar LowerTemperature = global.get('kiln_01.LowerTemperature','memoryOnly')\n\nif (Math.abs(UpperSetpoint - UpperTemperature) < 100 && Math.abs(LowerSetpoint - LowerTemperature) < 100) {\n    // temps a setpoints are within tolerance\n    node.status({fill:\"green\",shape:\"dot\",text:\"All good!\"});\n    // the trigger function locks up if you send it a zero\n    // similarly, we dont want to send it a value over\n    // the trigger time (1000 ms)\n    if (msg_out.delay > 0 && msg_out.delay < 1000 && (FsmStatus_Schedule != 'IDLE' && !auto_tune_upper && !auto_tune_lower)) {\n        return [ msg_out, null ];\n    } else if (msg_out.delay <= 0 || (FsmStatus_Schedule == 'IDLE' && !auto_tune_upper && !auto_tune_lower)) {\n        // send an \"off\" directly to the output node\n        msg_out.payload = \"0\"\n        return [ null, msg_out ];\n    } else if (msg_out.delay >= 1000){\n        // send an \"on\" directly to the output node\n        msg_out.payload = \"1\"\n        return [ null, msg_out ];\n    } else {\n        // send an \"off\" directly to the output node\n        msg_out.payload = \"0\"\n        return [ null, msg_out ];\n    }\n} else {\n    // temp is too far away from setpoint. something is wrong.\n    // send an \"off\" directly to the output node\n    node.warn(\"temp is too far away from setpoint. something is wrong.\")\n    node.status({fill:\"red\",shape:\"dot\",text:\"Something is wrong!\"});\n    msg_out.payload = \"0\"\n    return [ null, msg_out ];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 475,
        "y": 720,
        "wires": [
            [
                "a9bb39e013a1c8f9",
                "708a944b9506b9a4"
            ],
            [
                "16e8124d59e7fb62"
            ]
        ],
        "l": false
    },
    {
        "id": "5bb8a83cadcb2ba3",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "// create a new message object to clean it up\nvar msg_out = { delay: msg.payload * 1000 };\nvar FsmStatus_Schedule = global.get('kiln_01.FsmStatus_Schedule','memoryOnly')\n//var FsmStatus_Segment = global.get('kiln_01.FsmStatus_Segment','memoryOnly')\nvar auto_tune_upper = global.get('kiln_01.pid[0].auto_tune_upper')\nvar auto_tune_lower = global.get('kiln_01.pid[0].auto_tune_lower')\nvar UpperSetpoint = global.get('kiln_01.UpperSetpoint','memoryOnly')\nvar LowerSetpoint = global.get('kiln_01.LowerSetpoint','memoryOnly')\nvar UpperTemperature = global.get('kiln_01.UpperTemperature','memoryOnly')\nvar LowerTemperature = global.get('kiln_01.LowerTemperature','memoryOnly')\n\nif (Math.abs(UpperSetpoint - UpperTemperature) < 100 && Math.abs(LowerSetpoint - LowerTemperature) < 100) {\n    // temps a setpoints are within tolerance\n    node.status({fill:\"green\",shape:\"dot\",text:\"All good!\"});\n    // the trigger function locks up if you send it a zero\n    // similarly, we dont want to send it a value over\n    // the trigger time (1000 ms)\n    if (msg_out.delay > 0 && msg_out.delay < 1000 && (FsmStatus_Schedule != 'IDLE' && !auto_tune_upper && !auto_tune_lower)) {\n        return [ msg_out, null ];\n    } else if (msg_out.delay <= 0 || (FsmStatus_Schedule == 'IDLE' && !auto_tune_upper && !auto_tune_lower)) {\n        // send an \"off\" directly to the output node\n        msg_out.payload = \"0\"\n        return [ null, msg_out ];\n    } else if (msg_out.delay >= 1000){\n        // send an \"on\" directly to the output node\n        msg_out.payload = \"1\"\n        return [ null, msg_out ];\n    } else {\n        // send an \"off\" directly to the output node\n        msg_out.payload = \"0\"\n        return [ null, msg_out ];\n    }\n} else {\n    // temp is too far away from setpoint. something is wrong.\n    // send an \"off\" directly to the output node\n    node.warn(\"temp is too far away from setpoint. something is wrong.\")\n    node.status({fill:\"red\",shape:\"dot\",text:\"Something is wrong!\"});\n    msg_out.payload = \"0\"\n    return [ null, msg_out ];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 475,
        "y": 800,
        "wires": [
            [
                "26dcb58ffb63fae4"
            ],
            [
                "12681729a71ef662"
            ]
        ],
        "l": false
    },
    {
        "id": "1c9e79b136a623e2",
        "type": "catch",
        "z": "98e4246c87add39e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "d3aa01638e9fef28"
            ]
        ]
    },
    {
        "id": "d3aa01638e9fef28",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 20,
        "wires": []
    },
    {
        "id": "0f5d38dea1f9fdf8",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "f14af351da1b05c1"
            ]
        ]
    },
    {
        "id": "f14af351da1b05c1",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "node-red-restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "680c5276908a542b",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "3b38d7ad7142ae99"
            ]
        ]
    },
    {
        "id": "3b38d7ad7142ae99",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 400,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "300160ca9486c7ff",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "5bb9693f827a8916"
            ]
        ]
    },
    {
        "id": "5bb9693f827a8916",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "596909473c6a4408",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "PiSugar: https://github.com/PiSugar/pisugar-power-manager-rs",
        "info": "",
        "x": 370,
        "y": 480,
        "wires": []
    },
    {
        "id": "8de289bdc5fd2ca4",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "PiSugar user:admin pass:admin",
        "info": "",
        "x": 270,
        "y": 500,
        "wires": []
    },
    {
        "id": "136ed4e4c080a681",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "5e1d74212376e4f3"
            ]
        ]
    },
    {
        "id": "5e1d74212376e4f3",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "hostname",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "f619121c08077343"
            ],
            [],
            []
        ]
    },
    {
        "id": "f619121c08077343",
        "type": "change",
        "z": "98e4246c87add39e",
        "name": "set hostname",
        "rules": [
            {
                "t": "set",
                "p": "hostname",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1097eb74c1ce2240",
        "type": "http in",
        "z": "98e4246c87add39e",
        "name": "",
        "url": "/ui/PiSugar",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "af3ca29e3470f492"
            ]
        ]
    },
    {
        "id": "cdb3dcc1721e5831",
        "type": "http response",
        "z": "98e4246c87add39e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 400,
        "wires": []
    },
    {
        "id": "af3ca29e3470f492",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "var hostname = global.get('hostname')\nvar Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":8421\"\n\nmsg.statusCode = 303;\nmsg.headers = {Location}\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 400,
        "wires": [
            [
                "cdb3dcc1721e5831"
            ]
        ]
    },
    {
        "id": "ca9e41f3290507c6",
        "type": "http in",
        "z": "98e4246c87add39e",
        "name": "",
        "url": "/ui/NodeRed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "852ffc368267fec4"
            ]
        ]
    },
    {
        "id": "c3144365fd84c245",
        "type": "http response",
        "z": "98e4246c87add39e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 420,
        "wires": []
    },
    {
        "id": "852ffc368267fec4",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "var hostname = global.get('hostname')\nvar Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":1880\"\n\nmsg.statusCode = 303;\nmsg.headers = {Location}\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 420,
        "wires": [
            [
                "c3144365fd84c245"
            ]
        ]
    },
    {
        "id": "f6f7fc1d1ca591cd",
        "type": "http in",
        "z": "98e4246c87add39e",
        "name": "",
        "url": "/ui/Grafana",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "e1079bfffd705742"
            ]
        ]
    },
    {
        "id": "ca1a6fb8733136ea",
        "type": "http response",
        "z": "98e4246c87add39e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 440,
        "wires": []
    },
    {
        "id": "e1079bfffd705742",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "var hostname = global.get('hostname')\nvar Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":3000/d/_6ZBVeRgk/historical-temperatures?orgId=1&from=now-7d&to=now&fullscreen&panelId=4\"\n\nmsg.statusCode = 303;\nmsg.headers = {Location}\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 440,
        "wires": [
            [
                "ca1a6fb8733136ea"
            ]
        ]
    },
    {
        "id": "f9460b8af28fe098",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "system commands",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "d50ee496a66536be",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "web redirection",
        "info": "",
        "x": 100,
        "y": 360,
        "wires": []
    }
]