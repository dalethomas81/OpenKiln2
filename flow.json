[
    {
        "id": "3154c44d1a91de38",
        "type": "tab",
        "label": "i/o",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b83fb43068cdf48f",
        "type": "tab",
        "label": "pid",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e9cef8706a9cf7f6",
        "type": "tab",
        "label": "logic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "592b686edd11b813",
        "type": "tab",
        "label": "dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "98e4246c87add39e",
        "type": "tab",
        "label": "utility",
        "disabled": false,
        "info": ""
    },
    {
        "id": "443a1fa760cb1696",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "OpenKiln Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "MMM-DD-YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1a7d214ba0ada216",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "home",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "afede006ffb47acb",
        "type": "ui_link",
        "name": "Node-Red",
        "link": "NodeRed",
        "icon": "developer_dashboard",
        "target": "newtab",
        "order": 6
    },
    {
        "id": "1f041bb493bd73c1",
        "type": "ui_tab",
        "name": "Schedule",
        "icon": "mode_edit",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "723f1e0d521d5671",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "57fb49920731c540",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b27a47450c3d7a3c",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "739befb0e899ed56",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "32c790dff519b120",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a046a28b2ea5f0be",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "af4a79934426a42a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "2dc617e815eb563a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "c3291b77297c1a32",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "62c47bf35fc1331e",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ddf52b8312f3dcfe",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "ccb56bf9e6cc2677",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6ea6176457413f77",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "8e2e9fc7c1febf99",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "f6d092fb3bd13b06",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "50a6ad9370071ac2",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "0ed7068150cfb65f",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "2595b0b597065044",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "916cddc083aed4b1",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "388c16a271ef1c2d",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a766471096c0346a",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e1bdbab1ef4cbe6",
        "type": "ui_group",
        "name": "Schedules",
        "tab": "1f041bb493bd73c1",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false
    },
    {
        "id": "90879df8d2ee4c5d",
        "type": "ui_group",
        "name": "Control",
        "tab": "6e4426eb24a8676f",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "2201d496820b415d",
        "type": "ui_group",
        "name": "Status",
        "tab": "6e4426eb24a8676f",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "d86c6f681ae35c78",
        "type": "ui_link",
        "name": "PiSugar",
        "link": "PiSugar",
        "icon": "battery_charging_full",
        "target": "iframe",
        "order": 7
    },
    {
        "id": "450b79efd321b8c4",
        "type": "ui_link",
        "name": "Grafana",
        "link": "Grafana",
        "icon": "timeline",
        "target": "iframe",
        "order": 5
    },
    {
        "id": "de5db1c89316833e",
        "type": "ui_tab",
        "name": "Utility",
        "icon": "build",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "112aa19380852c23",
        "type": "ui_group",
        "name": "Analog Inputs",
        "tab": "de5db1c89316833e",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "f86f065176941099",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a35b0f792e9846a",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "f68e02645d7738c1",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3be2f849e8ab7b8",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "37407a3c1ee7bb79",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "4cfc717b29133d4a",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7c99b97c361a432",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "9e570445ee458c7e",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ad31e06a0c424f07",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "e2919be3bfd4465c",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "3bbf9d04d13b2787",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "49c26116852ae508",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "baaca26601c1e496",
        "type": "ui_spacer",
        "z": "3154c44d1a91de38",
        "name": "spacer",
        "group": "",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "6e4426eb24a8676f",
        "type": "ui_tab",
        "name": "Main",
        "icon": "whatshot",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "02cafb3276498790",
        "type": "ui_spacer",
        "z": "b83fb43068cdf48f",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "efcd4096ea60e7d9",
        "type": "ui_spacer",
        "z": "b83fb43068cdf48f",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "60a8bcb74a3c379f",
        "type": "ui_spacer",
        "z": "b83fb43068cdf48f",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "867133fef42b3b35",
        "type": "ui_spacer",
        "z": "b83fb43068cdf48f",
        "name": "spacer",
        "group": "",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "89e70d732b86427b",
        "type": "ui_spacer",
        "z": "b83fb43068cdf48f",
        "name": "spacer",
        "group": "",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "a91f3f1520863187",
        "type": "ui_group",
        "name": "PID Tuning",
        "tab": "de5db1c89316833e",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "97a4a070263bb997",
        "type": "ui_group",
        "name": "Enable Control",
        "tab": "6e4426eb24a8676f",
        "order": 3,
        "disp": false,
        "width": 7,
        "collapse": false
    },
    {
        "id": "5331d4d4d2257e9c",
        "type": "ui_group",
        "d": true,
        "name": "System",
        "tab": "de5db1c89316833e",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "353b1d92547b4d5b",
        "type": "ui_group",
        "d": true,
        "name": "Enable System",
        "tab": "de5db1c89316833e",
        "order": 4,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4eed5c18f7c6edbe",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "17a568c560a82ddf",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec59bb84706dcc0f",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "62549cdb67777cdd",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "2755d06266bc8867",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d1a30cc456809ef5",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "dac262eaa67829d0",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecc5d37e42fea82e",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "65cb6164919bd651",
        "type": "ui_spacer",
        "z": "592b686edd11b813",
        "name": "spacer",
        "group": "90879df8d2ee4c5d",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "97b95836b00ea98e",
        "type": "ui_group",
        "name": "Backup",
        "tab": "de5db1c89316833e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "345cf5cc073427be",
        "type": "ui_group",
        "name": "Restore",
        "tab": "de5db1c89316833e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2b91c7b61f241a71",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "63f976a1677ea55c",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "50e11f795e564438",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 8,
        "width": 13,
        "height": 1
    },
    {
        "id": "3a90f8d1fe361f6a",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "9142947050efb79f",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 13,
        "width": 5,
        "height": 1
    },
    {
        "id": "d50e0907fe8fe0ce",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 15,
        "width": 5,
        "height": 1
    },
    {
        "id": "e6f4812dbca29637",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "a91f3f1520863187",
        "order": 16,
        "width": 5,
        "height": 1
    },
    {
        "id": "a201b799afd42b76",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "67f7f79f7e074b32",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4ff49305cf7c7087",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "682eddeeba99e64d",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "9ba34b33dc47d889",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "d5f711be0869e6f3",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 16,
        "width": 8,
        "height": 1
    },
    {
        "id": "7062d55dd45ed7ad",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "a30809810bc12760",
        "type": "ui_spacer",
        "z": "98e4246c87add39e",
        "name": "spacer",
        "group": "112aa19380852c23",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "35573d9f8cb557cc",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "get upper temp",
        "func": "// https://github.com/maugdog/max31855\n// https://cdn-shop.adafruit.com/datasheets/MAX31855.pdf#page=10\n\n/**\n * Node.js module for driving the Adafruit MAX31855 thermocouple temperature amplifier on Raspberry Pi.\n *\n * Currently supports only hardware SPI configuration (as opposed to software SPI using GPIO pins).\n * Note: May require running under sudo for SPI permissions.\n * Note: The SPI master driver is disabled by default on Raspian Linux and must be enabled. see here:\n * https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md\n */\n\n//var SPI = require('pi-spi');\n\nfunction MAX31855(spidev) {\n  // Initialize the SPI settings\n  //this._spi = SPI.initialize(\"/dev/spidev0.0\");\n  this._spi = SPI.initialize(spidev);\n  this._spi.clockSpeed(5000000);\n  this._spi.dataMode(0);\n  this._spi.bitOrder(SPI.order.MSB_FIRST);\n}\n\n/** Read 32 bits from the SPI bus. */\nMAX31855.prototype._read32 = function (callback) {\n  this._spi.read(4, function (error, bytes) {\n    if (error) {\n      console.error(error);\n    } else {\n      if (!bytes || bytes.length != 4) {\n        throw new Error('MAX31855: Did not read expected number of bytes from device!');\n      } else {\n        var value\n        value = bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3];\n        callback(value);\n      }\n    }\n  });\n};\n\n/** Returns the internal temperature value in degrees Celsius. */\nMAX31855.prototype.readInternalC = function (callback) {\n  if (callback) {\n    this._read32(function (value) {\n      // Ignore bottom 4 bits of thermocouple data.\n      value >>= 4;\n      // Grab bottom 11 bits as internal temperature data.\n      var internal = value & 0x7FF;\n      if (value & 0x800) {\n        // Negative value, take 2's compliment.\n        internal = ~internal + 1;\n      }\n      // Scale by 0.0625 degrees C per bit and return value.\n      callback(internal * 0.0625);\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n/** Return the thermocouple temperature value. Value is returned in degrees celsius */\nMAX31855.prototype.readTempC = function (callback) {\n  if (callback) {\n    var self = this; // Scope closure\n    this._read32(function (value) {\n      // Check for error reading value.\n      //if (value & 0x7) { // 2=short to vcc, 1=short to gnd, 0=open circuit\n      if (value & 0x1) { // 2=short to vcc, 1=short to gnd, 0=open circuit\n        callback(NaN);\n      } else {\n        if (value & 0x80000000) { // Check if signed bit is set.\n          // Negative value, shift the bits and take 2's compliment.\n          value >>= 18;\n          value = ~value + 1;\n        } else { // Positive value, just shift the bits to get the value.\n          value >>= 18;\n        }\n        // Scale by 0.25 degrees C per bit\n        callback(value * 0.25);\n      }\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\nvar thermoSensor = new MAX31855(msg.spidev);\nthermoSensor.readTempC(function (temp) {\n  temp = temp * 9 / 5 + 32\n  node.status({ fill: \"green\", shape: \"dot\", text: temp + '°F' });\n  var newMsg = { \"payload\": temp }\n  node.send(newMsg); // node.send() is needed for async\n  node.done();\n});",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "SPI",
                "module": "pi-spi"
            }
        ],
        "x": 315,
        "y": 260,
        "wires": [
            [
                "ee0291f3aba6669c",
                "9d81b4469ecf17ea"
            ]
        ],
        "l": false
    },
    {
        "id": "90d2df249ed5559d",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "get lower temp",
        "func": "// https://github.com/maugdog/max31855\n// https://cdn-shop.adafruit.com/datasheets/MAX31855.pdf#page=10\n\n/**\n * Node.js module for driving the Adafruit MAX31855 thermocouple temperature amplifier on Raspberry Pi.\n *\n * Currently supports only hardware SPI configuration (as opposed to software SPI using GPIO pins).\n * Note: May require running under sudo for SPI permissions.\n * Note: The SPI master driver is disabled by default on Raspian Linux and must be enabled. see here:\n * https://www.raspberrypi.org/documentation/hardware/raspberrypi/spi/README.md\n */\n\n//var SPI = require('pi-spi');\n\nfunction MAX31855(spidev) {\n  // Initialize the SPI settings\n  //this._spi = SPI.initialize(\"/dev/spidev0.0\");\n  this._spi = SPI.initialize(spidev);\n  this._spi.clockSpeed(5000000);\n  this._spi.dataMode(0);\n  this._spi.bitOrder(SPI.order.MSB_FIRST);\n}\n\n/** Read 32 bits from the SPI bus. */\nMAX31855.prototype._read32 = function(callback) {\n  this._spi.read(4, function(error, bytes) {\n    if(error) {\n      console.error(error);\n    } else {\n      if(!bytes || bytes.length != 4) {\n        throw new Error('MAX31855: Did not read expected number of bytes from device!');\n      } else {\n        var value\n        value = bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3];\n        //console.log('Raw value: ', value);\n        callback(value);\n      }\n    }\n  });\n};\n\n/** Returns the internal temperature value in degrees Celsius. */\nMAX31855.prototype.readInternalC = function(callback) {\n  if(callback) {\n    this._read32(function(value) {\n      // Ignore bottom 4 bits of thermocouple data.\n  \t\tvalue >>= 4;\n  \t\t// Grab bottom 11 bits as internal temperature data.\n  \t\tvar internal = value & 0x7FF;\n  \t\tif(value & 0x800) {\n        // Negative value, take 2's compliment.\n        internal = ~internal + 1;\n      }\n      // Scale by 0.0625 degrees C per bit and return value.\n      callback(internal * 0.0625);\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\n/** Return the thermocouple temperature value. Value is returned in degrees celsius */\nMAX31855.prototype.readTempC = function(callback) {\n  if(callback) {\n    var self = this; // Scope closure\n    this._read32(function(value) {\n      // Check for error reading value.\n      //if (value & 0x7) { // 2=short to vcc, 1=short to gnd, 0=open circuit\n      if (value & 0x1) { // 2=short to vcc, 1=short to gnd, 0=open circuit\n        callback(NaN);\n      } else {\n        if(value & 0x80000000) { // Check if signed bit is set.\n          // Negative value, shift the bits and take 2's compliment.\n          value >>= 18;\n          value = ~value + 1;\n        } else { // Positive value, just shift the bits to get the value.\n          value >>= 18;\n        }\n        // Scale by 0.25 degrees C per bit\n        callback(value * 0.25);\n      }\n    });\n  } else {\n    console.log('MAX31855: Read request issued with no callback.');\n  }\n};\n\nvar thermoSensor = new MAX31855(msg.spidev);\nthermoSensor.readTempC(function (temp) {\n  temp = temp * 9 / 5 + 32\n  node.status({ fill: \"green\", shape: \"dot\", text: temp + '°F' });\n  var newMsg = { \"payload\": temp}\n  node.send(newMsg); // node.send() is needed for async\n  node.done();\n});",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "SPI",
                "module": "pi-spi"
            }
        ],
        "x": 315,
        "y": 460,
        "wires": [
            [
                "b439be6284f42bd5",
                "b512718ada88364f"
            ]
        ],
        "l": false
    },
    {
        "id": "774be46b1df4202c",
        "type": "catch",
        "z": "3154c44d1a91de38",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "08d3626ca47817b7"
            ]
        ]
    },
    {
        "id": "08d3626ca47817b7",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 155,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "6c490df17d1de881",
        "type": "rbe",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "deadbandEq",
        "gap": "1",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 575,
        "y": 380,
        "wires": [
            [
                "dbaab26e980063a4"
            ]
        ],
        "l": false
    },
    {
        "id": "bd45525a6924a5c5",
        "type": "rbe",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "deadbandEq",
        "gap": "1",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 575,
        "y": 340,
        "wires": [
            [
                "5cdb1e903b180a71"
            ]
        ],
        "l": false
    },
    {
        "id": "dcbc073ea7b777ee",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "Output - Upper Temperature",
        "mode": "link",
        "links": [
            "9b6b7f2249d013ba"
        ],
        "x": 695,
        "y": 260,
        "wires": []
    },
    {
        "id": "e65201e766b76bfd",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "Output - Lower Temperature",
        "mode": "link",
        "links": [
            "4ea9f6ce194f1281",
            "1ac212aefe7428f8"
        ],
        "x": 695,
        "y": 460,
        "wires": []
    },
    {
        "id": "1235c1dcd4711779",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "build measurement",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "Kiln_01_UpperTemperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 695,
        "y": 340,
        "wires": [
            [
                "2f036bde9aaff376"
            ]
        ],
        "l": false
    },
    {
        "id": "9468a3b6de1782db",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "build measurement",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "measurement",
                "pt": "msg",
                "to": "Kiln_01_LowerTemperature",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 695,
        "y": 380,
        "wires": [
            [
                "2f036bde9aaff376"
            ]
        ],
        "l": false
    },
    {
        "id": "bc3e2212fd11e206",
        "type": "ui_switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "label": "Simulation",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 410,
        "y": 920,
        "wires": [
            [
                "d76c7ce673b280af"
            ]
        ]
    },
    {
        "id": "d76c7ce673b280af",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "set sim temp",
        "rules": [
            {
                "t": "set",
                "p": "logic.simulate_temperature",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 515,
        "y": 920,
        "wires": [
            [
                "a3ad47349ae89c29"
            ]
        ],
        "l": false
    },
    {
        "id": "f45e246dbf521446",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "check sim temp",
        "property": "logic.simulate_temperature",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 135,
        "y": 360,
        "wires": [
            [
                "159e09add5a1e1ed",
                "0402b15e862a2745"
            ],
            [
                "48381e08644719f0"
            ]
        ],
        "l": false
    },
    {
        "id": "2f036bde9aaff376",
        "type": "influxdb out",
        "z": "3154c44d1a91de38",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "home",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "52w",
        "org": "organisation",
        "bucket": "bucket",
        "x": 775,
        "y": 360,
        "wires": [],
        "l": false
    },
    {
        "id": "dbaab26e980063a4",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "temp cutoff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 635,
        "y": 380,
        "wires": [
            [
                "9468a3b6de1782db"
            ]
        ],
        "l": false
    },
    {
        "id": "5cdb1e903b180a71",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "temp cutoff",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "50",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 635,
        "y": 340,
        "wires": [
            [
                "1235c1dcd4711779"
            ]
        ],
        "l": false
    },
    {
        "id": "477ed7158a34c5bf",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "get sim temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "logic.simulate_temperature",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 295,
        "y": 920,
        "wires": [
            [
                "bc3e2212fd11e206"
            ]
        ],
        "l": false
    },
    {
        "id": "a3ad47349ae89c29",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "218ba5aacd9d564e"
        ],
        "x": 575,
        "y": 920,
        "wires": []
    },
    {
        "id": "16e8124d59e7fb62",
        "type": "rpi-gpio out",
        "z": "3154c44d1a91de38",
        "name": "upper element",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 460,
        "y": 680,
        "wires": []
    },
    {
        "id": "708a944b9506b9a4",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "200",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 295,
        "y": 660,
        "wires": [
            [
                "16e8124d59e7fb62",
                "12681729a71ef662"
            ]
        ],
        "l": false
    },
    {
        "id": "11d1503b33735b7a",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "initialize",
        "rules": [
            {
                "t": "set",
                "p": "logic.simulate_temperature",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "upper_thermocouple_bad",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "lower_thermocouple_bad",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "analoginput",
                "pt": "global",
                "to": "#:(disk)::analoginput",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 20,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "12681729a71ef662",
        "type": "rpi-gpio out",
        "z": "3154c44d1a91de38",
        "name": "lower element",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 460,
        "y": 720,
        "wires": []
    },
    {
        "id": "e4a7e7415279dc26",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "ssr output",
        "info": "",
        "x": 80,
        "y": 620,
        "wires": []
    },
    {
        "id": "4411f03fad54a3bf",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "thermocouple input",
        "info": "",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "d4cb1a52a4fe0d75",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var msg_out = { delay: msg.payload * 10 }; // should come in as 0 - 100%\nvar sch_state = global.get('logic.sch_state')\nvar upper_thermocouple_bad = flow.get('upper_thermocouple_bad')\nvar lower_thermocouple_bad = flow.get('lower_thermocouple_bad')\nvar simulate_temperature = global.get('logic.simulate_temperature')\n\nif (!upper_thermocouple_bad && !lower_thermocouple_bad \n    && sch_state != 'IDLE'\n    && !simulate_temperature) {\n    // the trigger function locks up if you send it a zero\n    // similarly, we dont want to send it a value over the trigger time (1000 ms)\n    if ( msg_out.delay > 0 && msg_out.delay < 1000 ) {\n        node.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(1) + '%' });\n        return [msg_out, null];\n    } else if ( msg_out.delay <= 0 ) {\n        // send an \"off\" directly to the output node\n        node.status({ fill: \"green\", shape: \"ring\", text: '0%' });\n        msg_out.payload = \"0\"\n        return [null, msg_out];\n    } else if ( msg_out.delay >= 1000 ) {\n        // send an \"on\" directly to the output node\n        node.status({ fill: \"green\", shape: \"dot\", text: '100%' });\n        msg_out.payload = \"1\"\n        return [null, msg_out];\n    }\n} else {\n    // send an \"off\" directly to the output node\n    node.status({fill:\"blue\",shape:\"ring\",text:\"disabled\"});\n    msg_out.payload = \"0\"\n    return [ null, msg_out ];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 195,
        "y": 680,
        "wires": [
            [
                "708a944b9506b9a4"
            ],
            [
                "16e8124d59e7fb62",
                "12681729a71ef662"
            ]
        ],
        "l": false
    },
    {
        "id": "0cfeb2a7be515599",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "input - upper heater",
        "links": [
            "094e9b28f33ff867"
        ],
        "x": 135,
        "y": 680,
        "wires": [
            [
                "d4cb1a52a4fe0d75"
            ]
        ]
    },
    {
        "id": "159e09add5a1e1ed",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "spidev",
                "pt": "msg",
                "to": "/dev/spidev0.1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 255,
        "y": 260,
        "wires": [
            [
                "35573d9f8cb557cc"
            ]
        ],
        "l": false
    },
    {
        "id": "0402b15e862a2745",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "spidev",
                "pt": "msg",
                "to": "/dev/spidev0.0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 255,
        "y": 460,
        "wires": [
            [
                "90d2df249ed5559d"
            ]
        ],
        "l": false
    },
    {
        "id": "ba263ec1075b0897",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "initialize variables",
        "func": "var input_ver = 1\n// check if variables initialized\nif (context.get('input_ver') != input_ver) {\n    // set to version so we don't run again\n    context.set('input_ver', input_ver)\n\n    var input = []\n    var inputcount = 2\n    for (let index = 0; index < inputcount; index++) {\n        var x = { min: 0.0, max: 0.0 };\n        var y = { min: 0.0, max: 0.0 };\n        var calibration = { x, y, span: 0.0, offset: 0.0 }\n        calibration.x.min = 0.0; calibration.x.max = 0.0; calibration.y.min = 0.0; calibration.y.max = 0.0;\n        calibration.span = 0.0; calibration.offset = 0.0;\n        var obj2 = { HiHi: 0.0, Hi: 0.0, Lo: 0.0, LoLo: 0.0 }\n        var limits = Object.create(obj2)\n        limits.HiHi = 0.0; limits.Hi = 0.0; limits.Lo = 0.0; limits.LoLo = 0.0;\n        var obj3 = { HiHi: false, Hi: false, Lo: false, LoLo: false }\n        var alarms = Object.create(obj3)\n        alarms.HiHi = false; alarms.Hi = false; alarms.Lo = false; alarms.LoLo = false;\n        input.push({ id: '', raw: 0.0, scaled: 0.0, calibration, limits, alarms })\n    }\n\n    var analoginput = { selected_input: 0, input }\n\n    // set defaults\n    for (let index = 0; index < inputcount; index++) {\n        analoginput.input[index].id = ''\n        analoginput.input[index].raw = 0\n        analoginput.input[index].scaled = 0\n        analoginput.input[index].calibration.x.min = 100\n        analoginput.input[index].calibration.x.max = 1000\n        analoginput.input[index].calibration.y.min = 100\n        analoginput.input[index].calibration.y.max = 1000\n        analoginput.input[index].calibration.span = 1\n        analoginput.input[index].calibration.offset = 0\n        analoginput.input[index].limits.HiHi = 2500\n        analoginput.input[index].limits.Hi = 2300\n        analoginput.input[index].limits.Lo = 32\n        analoginput.input[index].limits.LoLo = 0\n        analoginput.input[index].alarms.HiHi = false\n        analoginput.input[index].alarms.Hi = false\n        analoginput.input[index].alarms.Lo = false\n        analoginput.input[index].alarms.LoLo = false\n    }\n\n    global.set('analoginput', undefined) // clear old structure if present\n    global.set('analoginput', analoginput)\n    global.set('analoginput', undefined, 'disk') // clear old structure if present\n    global.set('analoginput', analoginput, 'disk')\n    \n    msg.payload = { analoginput }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 20,
        "wires": [
            [
                "decc9c1ce74df275"
            ]
        ],
        "l": false
    },
    {
        "id": "de189d290a2ccfe0",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 475,
        "y": 20,
        "wires": [
            [
                "ba263ec1075b0897"
            ]
        ],
        "l": false
    },
    {
        "id": "44fc0716fdc686dc",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "handle analog input",
        "func": "var analoginput = global.get('analoginput')\n\ntry {\n    if (!isNaN(msg.payload)){\n        analoginput.input[msg.inputnumber].raw = msg.payload\n        analoginput.input[msg.inputnumber].scaled = msg.payload * analoginput.input[msg.inputnumber].calibration.span + analoginput.input[msg.inputnumber].calibration.offset;\n        if (analoginput.input[msg.inputnumber].scaled >= analoginput.input[msg.inputnumber].limits.HiHi) { analoginput.input[msg.inputnumber].alarms.HiHi = true } else { analoginput.input[msg.inputnumber].alarms.HiHi = false };\n        if (analoginput.input[msg.inputnumber].scaled >= analoginput.input[msg.inputnumber].limits.Hi) { analoginput.input[msg.inputnumber].alarms.Hi = true } else { analoginput.input[msg.inputnumber].alarms.Hi = false };\n        if (analoginput.input[msg.inputnumber].scaled <= analoginput.input[msg.inputnumber].limits.Lo) { analoginput.input[msg.inputnumber].alarms.Lo = true } else { analoginput.input[msg.inputnumber].alarms.Lo = false };\n        if (analoginput.input[msg.inputnumber].scaled <= analoginput.input[msg.inputnumber].limits.LoLo) { analoginput.input[msg.inputnumber].alarms.LoLo = true } else { analoginput.input[msg.inputnumber].alarms.LoLo = false };\n    }\n} catch (error) {\n    node.warn(error)\n};\n\nglobal.set('analoginput', analoginput)\n\nmsg.payload = analoginput.input[msg.inputnumber].scaled\nnode.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(2) + '°F' });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 615,
        "y": 260,
        "wires": [
            [
                "dcbc073ea7b777ee",
                "bd45525a6924a5c5"
            ]
        ],
        "l": false
    },
    {
        "id": "88697b6b43b4084e",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "inputnumber",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 260,
        "wires": [
            [
                "44fc0716fdc686dc"
            ]
        ],
        "l": false
    },
    {
        "id": "10d4807e18c79f6f",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "handle analog input",
        "func": "var analoginput = global.get('analoginput')\n\ntry {\n    if (!isNaN(msg.payload)){\n        analoginput.input[msg.inputnumber].raw = msg.payload\n        analoginput.input[msg.inputnumber].scaled = msg.payload * analoginput.input[msg.inputnumber].calibration.span + analoginput.input[msg.inputnumber].calibration.offset;\n        if (analoginput.input[msg.inputnumber].scaled >= analoginput.input[msg.inputnumber].limits.HiHi) { analoginput.input[msg.inputnumber].alarms.HiHi = true } else { analoginput.input[msg.inputnumber].alarms.HiHi = false };\n        if (analoginput.input[msg.inputnumber].scaled >= analoginput.input[msg.inputnumber].limits.Hi) { analoginput.input[msg.inputnumber].alarms.Hi = true } else { analoginput.input[msg.inputnumber].alarms.Hi = false };\n        if (analoginput.input[msg.inputnumber].scaled <= analoginput.input[msg.inputnumber].limits.Lo) { analoginput.input[msg.inputnumber].alarms.Lo = true } else { analoginput.input[msg.inputnumber].alarms.Lo = false };\n        if (analoginput.input[msg.inputnumber].scaled <= analoginput.input[msg.inputnumber].limits.LoLo) { analoginput.input[msg.inputnumber].alarms.LoLo = true } else { analoginput.input[msg.inputnumber].alarms.LoLo = false };\n    }\n} catch (error) {\n    node.warn(error)\n};\n\nglobal.set('analoginput', analoginput)\n\nmsg.payload = analoginput.input[msg.inputnumber].scaled\nnode.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(2) + '°F' });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 615,
        "y": 460,
        "wires": [
            [
                "e65201e766b76bfd",
                "6c490df17d1de881"
            ]
        ],
        "l": false
    },
    {
        "id": "409049cb84c39312",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "inputnumber",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 460,
        "wires": [
            [
                "10d4807e18c79f6f"
            ]
        ],
        "l": false
    },
    {
        "id": "dd5fa1a2a7edec40",
        "type": "ui_text",
        "z": "3154c44d1a91de38",
        "group": "112aa19380852c23",
        "order": 5,
        "width": 8,
        "height": 2,
        "name": "",
        "label": "Raw",
        "format": "<font color=\"green\" size=\"+3\">{{msg.payload}}</font>",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9d1d6fc5b853b597",
        "type": "ui_text",
        "z": "3154c44d1a91de38",
        "group": "112aa19380852c23",
        "order": 6,
        "width": 8,
        "height": 2,
        "name": "",
        "label": "Scaled",
        "format": "<font color=\"green\" size=\"+3\">{{msg.payload}}</font>",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b537b846c99d5ba0",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nvar input = global.get('analoginput.input['+selected_input+']')\nmsg.input = input\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 515,
        "y": 1060,
        "wires": [
            [
                "ba082e8df156fb74",
                "3e1be7f50ea50baf"
            ]
        ],
        "l": false
    },
    {
        "id": "e5017d61ae5c7809",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "select input",
        "label": "Input",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 2,
        "width": 3,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "step": 1,
        "x": 410,
        "y": 960,
        "wires": [
            [
                "c84c7544fd660421"
            ]
        ]
    },
    {
        "id": "d9fcdb3e4f6fe46a",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "get sim temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "analoginput.selected_input",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 295,
        "y": 960,
        "wires": [
            [
                "e5017d61ae5c7809"
            ]
        ],
        "l": false
    },
    {
        "id": "c84c7544fd660421",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "get sim temp",
        "rules": [
            {
                "t": "set",
                "p": "analoginput.selected_input",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 515,
        "y": 960,
        "wires": [
            [
                "23106acb85b27ca6"
            ]
        ],
        "l": false
    },
    {
        "id": "4aa0d55a58d20193",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "xmin",
        "label": "xmin",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 11,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.01",
        "className": "",
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "b985d102fbee08b0"
            ]
        ]
    },
    {
        "id": "e62882e76d5a3ed0",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "xmax",
        "label": "xmax",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.01",
        "className": "",
        "x": 490,
        "y": 1180,
        "wires": [
            [
                "effc4b19720ccea9"
            ]
        ]
    },
    {
        "id": "f840ee76882f8428",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "ymin",
        "label": "ymin",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 8,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.01",
        "className": "",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "aa4ea636d07ed467"
            ]
        ]
    },
    {
        "id": "69a195c61a15f1ff",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "ymax",
        "label": "ymax",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 9,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.01",
        "className": "",
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "98fe73aa5a255e16"
            ]
        ]
    },
    {
        "id": "32539e809a4ab257",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "span",
        "label": "span",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 14,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.0001",
        "className": "",
        "x": 490,
        "y": 1240,
        "wires": [
            [
                "9edae096c12a993e"
            ]
        ]
    },
    {
        "id": "f78df4f546d5323b",
        "type": "ui_numeric",
        "z": "3154c44d1a91de38",
        "name": "offset",
        "label": "offset",
        "tooltip": "",
        "group": "112aa19380852c23",
        "order": 15,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "3000",
        "step": "0.0001",
        "className": "",
        "x": 490,
        "y": 1260,
        "wires": [
            [
                "6eba4c323a68d274"
            ]
        ]
    },
    {
        "id": "59e10ec9698b12e7",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nvar input = global.get('analoginput.input['+selected_input+']')\nmsg.input = input\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 295,
        "y": 1160,
        "wires": [
            [
                "eb5f0cccbdddec17",
                "40253492d076eefe",
                "473527177fd9918f",
                "4ec6890d736cceb7",
                "024a786b0d40ab92",
                "c9be4acf1148863b"
            ]
        ],
        "l": false
    },
    {
        "id": "eb5f0cccbdddec17",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.x.min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1160,
        "wires": [
            [
                "4aa0d55a58d20193"
            ]
        ],
        "l": false
    },
    {
        "id": "40253492d076eefe",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.x.max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1180,
        "wires": [
            [
                "e62882e76d5a3ed0"
            ]
        ],
        "l": false
    },
    {
        "id": "473527177fd9918f",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.y.min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1200,
        "wires": [
            [
                "f840ee76882f8428"
            ]
        ],
        "l": false
    },
    {
        "id": "4ec6890d736cceb7",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.y.max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1220,
        "wires": [
            [
                "69a195c61a15f1ff"
            ]
        ],
        "l": false
    },
    {
        "id": "024a786b0d40ab92",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.span",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1240,
        "wires": [
            [
                "32539e809a4ab257"
            ]
        ],
        "l": false
    },
    {
        "id": "c9be4acf1148863b",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.calibration.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1260,
        "wires": [
            [
                "f78df4f546d5323b"
            ]
        ],
        "l": false
    },
    {
        "id": "b985d102fbee08b0",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.x.min', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1160,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "effc4b19720ccea9",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.x.max', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1180,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "aa4ea636d07ed467",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.y.min', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "98fe73aa5a255e16",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.y.max', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1220,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "9edae096c12a993e",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.span', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1240,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "6eba4c323a68d274",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nglobal.set('analoginput.input['+selected_input+'].calibration.offset', msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 595,
        "y": 1260,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "193129d955d22371",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 455,
        "y": 1060,
        "wires": [
            [
                "b537b846c99d5ba0"
            ]
        ],
        "l": false
    },
    {
        "id": "06678430389b644d",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 1080,
        "wires": [
            [
                "193129d955d22371"
            ]
        ],
        "l": false
    },
    {
        "id": "57fabf8420eb8b51",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 275,
        "y": 1080,
        "wires": [
            [
                "877974758133d165"
            ],
            [
                "f6ef36916a7aab3d"
            ]
        ],
        "l": false
    },
    {
        "id": "877974758133d165",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 335,
        "y": 1060,
        "wires": [
            [
                "193129d955d22371"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "babdd556d27c32aa",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 715,
        "y": 160,
        "wires": [
            [
                "d7036bba6f2040c6"
            ]
        ],
        "l": false
    },
    {
        "id": "1219bcc4367384ed",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 200,
        "wires": [
            [
                "babdd556d27c32aa"
            ]
        ],
        "l": false
    },
    {
        "id": "f484e601c7a47daa",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 545,
        "y": 180,
        "wires": [
            [
                "6404ddd0204a1536",
                "e2173a2b70e6db18"
            ],
            [
                "1219bcc4367384ed",
                "a8b1edd17a18f4ac"
            ]
        ],
        "l": false
    },
    {
        "id": "ee0291f3aba6669c",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "temp is bad",
        "func": "if (isNaN(msg.payload) || msg.payload == 32) {\n    node.status({ fill: \"red\", shape: \"ring\", text: 'bad' });\n    msg.payload = true\n    msg.delay = 10000\n} else {\n    node.status({ fill: \"green\", shape: \"dot\", text: 'good' });\n    msg.payload = false\n    msg.delay = 5000\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 485,
        "y": 180,
        "wires": [
            [
                "f484e601c7a47daa"
            ]
        ],
        "l": false
    },
    {
        "id": "d7036bba6f2040c6",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "upper_thermocouple_bad",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 775,
        "y": 160,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "be6db2014d2266f4",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 715,
        "y": 200,
        "wires": [
            [
                "1baf34e0f140c835"
            ]
        ],
        "l": false
    },
    {
        "id": "6404ddd0204a1536",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 160,
        "wires": [
            [
                "be6db2014d2266f4"
            ]
        ],
        "l": false
    },
    {
        "id": "1baf34e0f140c835",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "upper_thermocouple_bad",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 775,
        "y": 200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "e2173a2b70e6db18",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "upper_thermocouple_bad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 655,
        "y": 160,
        "wires": [
            [
                "babdd556d27c32aa"
            ]
        ],
        "l": false
    },
    {
        "id": "a8b1edd17a18f4ac",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "upper_thermocouple_bad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 655,
        "y": 200,
        "wires": [
            [
                "be6db2014d2266f4"
            ]
        ],
        "l": false
    },
    {
        "id": "e4959970166cb7b8",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 715,
        "y": 520,
        "wires": [
            [
                "7da29b2e3863d1aa"
            ]
        ],
        "l": false
    },
    {
        "id": "4c8ebe9638c55c70",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 560,
        "wires": [
            [
                "e4959970166cb7b8"
            ]
        ],
        "l": false
    },
    {
        "id": "dc3a71b261563fe2",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 545,
        "y": 540,
        "wires": [
            [
                "dae562d71b9ae21c",
                "d043340fbb846d3b"
            ],
            [
                "4c8ebe9638c55c70",
                "8c3dd26e3857506d"
            ]
        ],
        "l": false
    },
    {
        "id": "b439be6284f42bd5",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "temp is bad",
        "func": "if (isNaN(msg.payload) || msg.payload == 32) {\n    node.status({ fill: \"red\", shape: \"ring\", text: 'bad' });\n    msg.payload = true\n    msg.delay = 10000\n} else {\n    node.status({ fill: \"green\", shape: \"dot\", text: 'good' });\n    msg.payload = false\n    msg.delay = 5000\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 485,
        "y": 540,
        "wires": [
            [
                "dc3a71b261563fe2"
            ]
        ],
        "l": false
    },
    {
        "id": "7da29b2e3863d1aa",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lower_thermocouple_bad",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 775,
        "y": 520,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "ae394a8879fd0b69",
        "type": "trigger",
        "z": "3154c44d1a91de38",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": false,
        "overrideDelay": true,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 715,
        "y": 560,
        "wires": [
            [
                "4bd08057d4fc464e"
            ]
        ],
        "l": false
    },
    {
        "id": "dae562d71b9ae21c",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 595,
        "y": 520,
        "wires": [
            [
                "ae394a8879fd0b69"
            ]
        ],
        "l": false
    },
    {
        "id": "4bd08057d4fc464e",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "lower_thermocouple_bad",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 775,
        "y": 560,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "d043340fbb846d3b",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "lower_thermocouple_bad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 655,
        "y": 520,
        "wires": [
            [
                "e4959970166cb7b8"
            ]
        ],
        "l": false
    },
    {
        "id": "8c3dd26e3857506d",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "lower_thermocouple_bad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 655,
        "y": 560,
        "wires": [
            [
                "ae394a8879fd0b69"
            ]
        ],
        "l": false
    },
    {
        "id": "badbd5684182eea0",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "monitor thermocouple failure",
        "info": "this section of nodes will start a timer when \nthe thermocouple returned data is either\n32 or NaN.\n\nafter the timer has expired the thermocouple\nwill be considered faulty.\n\nwhen the thermocouple begins transmitting \nvalues other than 32 or NaN again another\ntimer will start.\n\nonce this timer expires then the thermocouple\nwill be considered ok again.",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "3aa120f2e22a021e",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "monitor thermocouple failure",
        "info": "this section of nodes will start a timer when \nthe thermocouple returned data is either\n32 or NaN.\n\nafter the timer has expired the thermocouple\nwill be considered faulty.\n\nwhen the thermocouple begins transmitting \nvalues other than 32 or NaN again another\ntimer will start.\n\nonce this timer expires then the thermocouple\nwill be considered ok again.",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "60ed4618490b6af6",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "data collection",
        "info": "",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "0b65910feb0dca3b",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "utility dashboard",
        "info": "",
        "x": 100,
        "y": 880,
        "wires": []
    },
    {
        "id": "480f5fe1d4ea8460",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "detect when connect to dashboard tab",
        "info": "",
        "x": 390,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5807025409385d2f",
        "type": "ui_button",
        "z": "3154c44d1a91de38",
        "name": "",
        "group": "112aa19380852c23",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Calculate",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 480,
        "y": 1340,
        "wires": [
            [
                "39644811da3119d6"
            ]
        ]
    },
    {
        "id": "39644811da3119d6",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var selected_input = global.get('analoginput.selected_input')\nvar input = global.get('analoginput.input['+selected_input+']')\n\ntry {\n    // m = y2*y1/x2*x1\n    input.calibration.span = (input.calibration.y.max - input.calibration.y.min) / (input.calibration.x.max - input.calibration.x.min)\n\n    // b = y-mx\n    input.calibration.offset = input.calibration.y.max - input.calibration.span * input.calibration.x.max\n\n} catch (error) {\n    node.warn(error)\n};\n\nglobal.set('analoginput.input[' + selected_input + ']', input)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 1340,
        "wires": [
            [
                "60667a7d4305efa8"
            ]
        ],
        "l": false
    },
    {
        "id": "60667a7d4305efa8",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "cfd69a7faaed9708"
        ],
        "x": 635,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cfd69a7faaed9708",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "",
        "links": [
            "60667a7d4305efa8",
            "23106acb85b27ca6"
        ],
        "x": 215,
        "y": 1200,
        "wires": [
            [
                "59e10ec9698b12e7"
            ]
        ]
    },
    {
        "id": "23106acb85b27ca6",
        "type": "link out",
        "z": "3154c44d1a91de38",
        "name": "",
        "mode": "link",
        "links": [
            "cfd69a7faaed9708"
        ],
        "x": 575,
        "y": 960,
        "wires": []
    },
    {
        "id": "ba082e8df156fb74",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "msg.payload = parseFloat(msg.input.scaled.toFixed(2))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 615,
        "y": 1100,
        "wires": [
            [
                "9d1d6fc5b853b597"
            ]
        ],
        "l": false
    },
    {
        "id": "6934e6c8ca5ac2db",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 155,
        "y": 1160,
        "wires": [
            [
                "22af8d6fdc6cd5a3"
            ]
        ],
        "l": false
    },
    {
        "id": "22af8d6fdc6cd5a3",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 215,
        "y": 1160,
        "wires": [
            [],
            [
                "59e10ec9698b12e7"
            ],
            [
                "59e10ec9698b12e7"
            ]
        ],
        "l": false
    },
    {
        "id": "c5671e6fa247bedc",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 155,
        "y": 940,
        "wires": [
            [
                "b5f1d5271f421130"
            ]
        ],
        "l": false
    },
    {
        "id": "b5f1d5271f421130",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 215,
        "y": 940,
        "wires": [
            [],
            [
                "477ed7158a34c5bf",
                "d9fcdb3e4f6fe46a"
            ],
            [
                "d9fcdb3e4f6fe46a",
                "477ed7158a34c5bf"
            ]
        ],
        "l": false
    },
    {
        "id": "c0707caf85c10e83",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 110,
        "y": 1060,
        "wires": [
            [
                "6934e6c8ca5ac2db",
                "57fabf8420eb8b51",
                "c5671e6fa247bedc"
            ]
        ],
        "l": true
    },
    {
        "id": "f6ef36916a7aab3d",
        "type": "switch",
        "z": "3154c44d1a91de38",
        "name": "client count 0",
        "property": "host.clients",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 335,
        "y": 1100,
        "wires": [
            [
                "06678430389b644d"
            ]
        ],
        "l": false
    },
    {
        "id": "a7a9eeb897d0ea64",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "f45e246dbf521446"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "faad1abb6ddb40e6",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 335,
        "y": 20,
        "wires": [
            [
                "11d1503b33735b7a",
                "ba263ec1075b0897"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "9d81b4469ecf17ea",
        "type": "smooth",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "action": "low",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 495,
        "y": 260,
        "wires": [
            [
                "88697b6b43b4084e"
            ]
        ],
        "l": false
    },
    {
        "id": "b512718ada88364f",
        "type": "smooth",
        "z": "3154c44d1a91de38",
        "name": "",
        "property": "payload",
        "action": "low",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 495,
        "y": 460,
        "wires": [
            [
                "409049cb84c39312"
            ]
        ],
        "l": false
    },
    {
        "id": "3e1be7f50ea50baf",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "msg.payload = parseFloat(msg.input.raw.toFixed(2))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 615,
        "y": 1060,
        "wires": [
            [
                "dd5fa1a2a7edec40"
            ]
        ],
        "l": false
    },
    {
        "id": "6301f204b9bf6293",
        "type": "kettle-sim",
        "z": "3154c44d1a91de38",
        "name": "",
        "diam": 35,
        "volume": 40,
        "temp": 20,
        "power": "10",
        "ambientTemp": 20,
        "x": 295,
        "y": 320,
        "wires": [
            [
                "5794698bd70d1bfb"
            ]
        ],
        "l": false
    },
    {
        "id": "76068665ad239a83",
        "type": "kettle-sim",
        "z": "3154c44d1a91de38",
        "name": "",
        "diam": 35,
        "volume": 40,
        "temp": 20,
        "power": "10",
        "ambientTemp": 20,
        "x": 295,
        "y": 400,
        "wires": [
            [
                "1fe0499ab7694650"
            ]
        ],
        "l": false
    },
    {
        "id": "48381e08644719f0",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "get cv",
        "func": "msg.payload = global.get('pid.zone[0].parameters.control')\nnode.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(1) + '%' });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 215,
        "y": 360,
        "wires": [
            [
                "6301f204b9bf6293",
                "76068665ad239a83"
            ]
        ],
        "l": false
    },
    {
        "id": "6005d5278907e1eb",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "scale and smooth",
        "info": "",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "cfb3bf9c5adf407a",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "scale and smooth",
        "info": "",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "5794698bd70d1bfb",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "convert c to f",
        "func": "msg.payload = msg.payload * 9 / 5 + 32\nnode.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(1) + '°F' });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 320,
        "wires": [
            [
                "9d81b4469ecf17ea",
                "ee0291f3aba6669c"
            ]
        ],
        "l": false
    },
    {
        "id": "1fe0499ab7694650",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "convert c to f",
        "func": "msg.payload = msg.payload * 9 / 5 + 32\nnode.status({ fill: \"green\", shape: \"dot\", text: msg.payload.toFixed(1) + '°F' });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 400,
        "wires": [
            [
                "b512718ada88364f",
                "b439be6284f42bd5"
            ]
        ],
        "l": false
    },
    {
        "id": "9e92d7c40ff4483a",
        "type": "comment",
        "z": "3154c44d1a91de38",
        "name": "simulate temps",
        "info": "",
        "x": 340,
        "y": 380,
        "wires": []
    },
    {
        "id": "decc9c1ce74df275",
        "type": "debug",
        "z": "3154c44d1a91de38",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 595,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "f7bd5176dea5a20b",
        "type": "link in",
        "z": "3154c44d1a91de38",
        "name": "Oneshot Inject at Startup",
        "links": [
            "0023bda6c99b9785"
        ],
        "x": 335,
        "y": 60,
        "wires": [
            [
                "5720ba78630262da"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "516a2703b8b0c217",
        "type": "change",
        "z": "3154c44d1a91de38",
        "name": "write data to disk",
        "rules": [
            {
                "t": "set",
                "p": "#:(disk)::analoginput",
                "pt": "global",
                "to": "analoginput",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455,
        "y": 60,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "5720ba78630262da",
        "type": "delay",
        "z": "3154c44d1a91de38",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 395,
        "y": 60,
        "wires": [
            [
                "516a2703b8b0c217"
            ]
        ],
        "l": false
    },
    {
        "id": "0da4ad77c5123b5b",
        "type": "function",
        "z": "3154c44d1a91de38",
        "name": "",
        "func": "var last_time = context.get('last_time') || 0\nvar this_time = Date.now()\nvar last_value = context.get('last_value') || 0\nvar this_value = msg.payload\n\nvar span = (this_value-last_value)/(this_time-last_time)\nvar offset = this_value - span*this_time\n\nif (msg.reset){\n    context.set('sum', 0)\n}\n\nvar sum_count = this_time - last_time\nvar sum = context.get('sum') || 0\nfor ( let i = 0; i < sum_count; i++ ){\n    sum = sum + span*(last_time+i)+offset\n}\n\ncontext.set('sum', sum)\n\nnode.status({ fill: \"green\", shape: \"dot\", text: sum });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c8bf12c83f3856e5",
        "type": "inject",
        "z": "3154c44d1a91de38",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 850,
        "y": 280,
        "wires": [
            [
                "0da4ad77c5123b5b"
            ]
        ]
    },
    {
        "id": "0d21e53eb5db0544",
        "type": "catch",
        "z": "b83fb43068cdf48f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "3e7097f5bd1c065c"
            ]
        ]
    },
    {
        "id": "3e7097f5bd1c065c",
        "type": "debug",
        "z": "b83fb43068cdf48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 155,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "9f8f243cf0171822",
        "type": "PID",
        "z": "b83fb43068cdf48f",
        "name": "",
        "setpoint": "0",
        "pb": 1,
        "ti": 9999,
        "td": 0,
        "integral_default": 0.5,
        "smooth_factor": 3,
        "max_interval": 600,
        "enable": 1,
        "disabled_op": 0,
        "x": 695,
        "y": 180,
        "wires": [
            [
                "79e8d734b498031e"
            ]
        ],
        "l": false
    },
    {
        "id": "b0cf339b6f16ca16",
        "type": "change",
        "z": "b83fb43068cdf48f",
        "name": "init",
        "rules": [
            {
                "t": "set",
                "p": "pid.selected_zone",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "pid",
                "pt": "global",
                "to": "#:(disk)::pid",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 20,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "6f0a2b0420a217c6",
        "type": "ui_numeric",
        "z": "b83fb43068cdf48f",
        "name": "Pb0",
        "label": "Pb",
        "tooltip": "",
        "group": "a91f3f1520863187",
        "order": 7,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": "-10000",
        "max": "10000",
        "step": "0.01",
        "className": "",
        "x": 775,
        "y": 400,
        "wires": [
            [
                "16d2b807c8911037"
            ]
        ],
        "l": false
    },
    {
        "id": "2e2d8b482044aceb",
        "type": "ui_numeric",
        "z": "b83fb43068cdf48f",
        "name": "Ti0",
        "label": "Ti",
        "tooltip": "",
        "group": "a91f3f1520863187",
        "order": 9,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": "-1000",
        "max": "1000",
        "step": "0.01",
        "className": "",
        "x": 775,
        "y": 420,
        "wires": [
            [
                "b3278848da3d3187"
            ]
        ],
        "l": false
    },
    {
        "id": "59104e20fbde50f9",
        "type": "ui_numeric",
        "z": "b83fb43068cdf48f",
        "name": "Td0",
        "label": "Td",
        "tooltip": "",
        "group": "a91f3f1520863187",
        "order": 11,
        "width": 5,
        "height": 1,
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": "-1000",
        "max": "1000",
        "step": "0.01",
        "className": "",
        "x": 775,
        "y": 440,
        "wires": [
            [
                "72e5604feb0fec41"
            ]
        ],
        "l": false
    },
    {
        "id": "2e3cae4209b2ada3",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.payload = global.get('pid.zone[' + selected_zone + '].settings.PB') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 400,
        "wires": [
            [
                "6f0a2b0420a217c6"
            ]
        ],
        "l": false
    },
    {
        "id": "421e168f1e21c8eb",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.payload = global.get('pid.zone[' + selected_zone + '].settings.Ti') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 420,
        "wires": [
            [
                "2e2d8b482044aceb"
            ]
        ],
        "l": false
    },
    {
        "id": "89b465e16b59498c",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.payload = global.get('pid.zone[' + selected_zone + '].settings.Td') || 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 715,
        "y": 440,
        "wires": [
            [
                "59104e20fbde50f9"
            ]
        ],
        "l": false
    },
    {
        "id": "16d2b807c8911037",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nglobal.set('pid.zone[' + selected_zone + '].settings.PB', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 835,
        "y": 400,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "b3278848da3d3187",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nglobal.set('pid.zone[' + selected_zone + '].settings.Ti', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 835,
        "y": 420,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "72e5604feb0fec41",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nglobal.set('pid.zone[' + selected_zone + '].settings.Td', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 835,
        "y": 440,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "edf4d60398ebee66",
        "type": "ui_chart",
        "z": "b83fb43068cdf48f",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 1,
        "width": 13,
        "height": 6,
        "label": "Process vs Setpoint",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff9300",
            "#d62728",
            "#2ba02b",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 405,
        "y": 320,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "422b0453aa8d2e2b",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.topic = 'Setpoint'\nmsg.payload = global.get('pid.zone[' + selected_zone + '].parameters.setpoint')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 305,
        "y": 360,
        "wires": [
            [
                "edf4d60398ebee66",
                "4e9b55f75d6721a3"
            ]
        ],
        "l": false
    },
    {
        "id": "4041ed0c8ac3b123",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.topic = 'Process'\nmsg.payload = global.get('pid.zone[' + selected_zone + '].parameters.process')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 305,
        "y": 380,
        "wires": [
            [
                "edf4d60398ebee66",
                "947d7d167f4f877c"
            ]
        ],
        "l": false
    },
    {
        "id": "52a1b5a440697dbd",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var selected_zone = 0//global.get('pid.selected_zone') || 0\nmsg.topic = 'Control'\nmsg.payload = global.get('pid.zone[' + selected_zone + '].parameters.control')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 305,
        "y": 400,
        "wires": [
            [
                "27f81d993ca6d85b",
                "7e3b7476637fac29"
            ]
        ],
        "l": false
    },
    {
        "id": "2ba532e7faaaf05f",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "clear chart",
        "func": "msg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 305,
        "y": 440,
        "wires": [
            [
                "edf4d60398ebee66",
                "7e3b7476637fac29"
            ]
        ],
        "l": false
    },
    {
        "id": "90b25ac716e929c6",
        "type": "inject",
        "z": "b83fb43068cdf48f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 245,
        "y": 440,
        "wires": [
            [
                "2ba532e7faaaf05f"
            ]
        ],
        "l": false
    },
    {
        "id": "79e8d734b498031e",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "set control if auto tune not active",
        "func": "var zone_id = 0\nif (!global.get('pid.zone['+zone_id+'].autotune.active')) {\n    var cv = msg.payload * 100\n    global.set('pid.zone['+zone_id+'].parameters.control', cv)\n    node.status({ fill: \"green\", shape: \"dot\", text: cv.toFixed(2) + '%' });\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 160,
        "wires": [
            [
                "a7d4d1f6e66847a4"
            ]
        ],
        "l": false
    },
    {
        "id": "82f39574ad2ae492",
        "type": "change",
        "z": "b83fb43068cdf48f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pid.zone[0].parameters.control",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 215,
        "y": 140,
        "wires": [
            [
                "094e9b28f33ff867"
            ]
        ],
        "l": false
    },
    {
        "id": "a2cccb12b627c0e7",
        "type": "link out",
        "z": "b83fb43068cdf48f",
        "name": "",
        "mode": "link",
        "links": [
            "3bdb187897a23e15",
            "03c0ca76b29b0190"
        ],
        "x": 895,
        "y": 340,
        "wires": []
    },
    {
        "id": "45a06d0cb15ef15c",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "initialize variables",
        "func": "var pid_ver = 1\n// check if variables initialized\nif (context.get('pid_ver') != pid_ver){\n    // set to version so we don't run again\n    context.set('pid_ver', pid_ver)\n\n    var zone = []\n    var zone_count = 1 // how many pids are we using?\n    for (let index = 0; index < zone_count; index++) {\n        zone.push({\n            id: '',\n            parameters: { setpoint: 0, control: 0, process: 0 },\n            settings: { PB: 0, Ti: 0, Td: 0 }\n        })\n    }\n\n    var pid = { selected_zone: 0, zone }\n\n    // set defaults\n    for (let index = 0; index < zone_count; index++) {\n        pid.zone[index].id = ''\n        pid.zone[index].parameters.setpoint = 0\n        pid.zone[index].parameters.control = 0\n        pid.zone[index].parameters.process = 0\n        pid.zone[index].settings.PB = 20\n        pid.zone[index].settings.Ti = 100\n        pid.zone[index].settings.Td = 2\n    }\n\n    global.set('pid', undefined) // clear old structure if present\n    global.set('pid', pid)\n    global.set('pid', undefined, 'disk') // clear old structure if present\n    global.set('pid', pid, 'disk')\n    \n    msg.payload = { pid }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 20,
        "wires": [
            [
                "246f952ac26911c3"
            ]
        ],
        "l": false
    },
    {
        "id": "385287d0010ada53",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "",
        "func": "var zone_id = 0\nvar zone = global.get('pid.zone[' + zone_id + ']')\n\nmsg.topic = 'process'\nmsg.enable = true\nmsg.payload = zone.parameters.process || 0\nmsg.setpoint = zone.parameters.setpoint || 0\nmsg.prop_band = zone.settings.PB || 0\nmsg.t_integral = zone.settings.Ti || 0\nmsg.t_derivative = zone.settings.Td || 0\nmsg.integral_default = 0.5\nmsg.max_interval = 600\nmsg.smooth_factor = 0\nmsg.disabled_op = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 635,
        "y": 180,
        "wires": [
            [
                "9f8f243cf0171822"
            ]
        ],
        "l": false
    },
    {
        "id": "0354f9fa940fc412",
        "type": "comment",
        "z": "b83fb43068cdf48f",
        "name": "pid",
        "info": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "ebae959ae4626b66",
        "type": "comment",
        "z": "b83fb43068cdf48f",
        "name": "process",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "a7d4d1f6e66847a4",
        "type": "debug",
        "z": "b83fb43068cdf48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 815,
        "y": 160,
        "wires": [],
        "l": false
    },
    {
        "id": "bdfba680ee386998",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "",
        "links": [],
        "x": 245,
        "y": 440,
        "wires": [
            [
                "2ba532e7faaaf05f"
            ]
        ]
    },
    {
        "id": "094e9b28f33ff867",
        "type": "link out",
        "z": "b83fb43068cdf48f",
        "name": "output - zone 0 - out to process (CV 0-100%)",
        "mode": "link",
        "links": [
            "0cfeb2a7be515599"
        ],
        "x": 275,
        "y": 140,
        "wires": []
    },
    {
        "id": "53681c7211103452",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "input - zone 0 - SP",
        "links": [
            "9715dba2fc1ab553",
            "c96334b38e278286",
            "af8f2e69ea9f27c2"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "15a8037dcc3b6a5a"
            ]
        ]
    },
    {
        "id": "15a8037dcc3b6a5a",
        "type": "change",
        "z": "b83fb43068cdf48f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pid.zone[0].parameters.setpoint",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 215,
        "y": 180,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "989fbf5d083c48b4",
        "type": "switch",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 775,
        "y": 340,
        "wires": [
            [
                "b6c91fa96dfbfdb5"
            ]
        ],
        "l": false
    },
    {
        "id": "b6c91fa96dfbfdb5",
        "type": "switch",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 835,
        "y": 340,
        "wires": [
            [],
            [
                "a2cccb12b627c0e7"
            ],
            [
                "a2cccb12b627c0e7"
            ]
        ],
        "l": false
    },
    {
        "id": "ae639127ca4d386d",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 650,
        "y": 340,
        "wires": [
            [
                "989fbf5d083c48b4"
            ]
        ],
        "l": true
    },
    {
        "id": "216bb83c577ca24b",
        "type": "inject",
        "z": "b83fb43068cdf48f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 475,
        "y": 20,
        "wires": [
            [
                "45a06d0cb15ef15c"
            ]
        ],
        "l": false
    },
    {
        "id": "98c5268e979c7dcb",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 575,
        "y": 180,
        "wires": [
            [
                "385287d0010ada53"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "c271444bdafb92be",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "82f39574ad2ae492"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "0f779fd67e9e72b8",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 335,
        "y": 20,
        "wires": [
            [
                "b0cf339b6f16ca16",
                "45a06d0cb15ef15c"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "f5b7bf9f52b6d5d5",
        "type": "ui_text",
        "z": "b83fb43068cdf48f",
        "group": "a91f3f1520863187",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "setpoint0",
        "label": "Setpoint",
        "format": "<font color=\"orange\" size=\"+1\">{{msg.payload}}</font>",
        "layout": "row-spread",
        "className": "",
        "x": 455,
        "y": 360,
        "wires": [],
        "l": false
    },
    {
        "id": "4e9b55f75d6721a3",
        "type": "smooth",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 405,
        "y": 360,
        "wires": [
            [
                "f5b7bf9f52b6d5d5"
            ]
        ],
        "l": false
    },
    {
        "id": "947d7d167f4f877c",
        "type": "smooth",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 405,
        "y": 380,
        "wires": [
            [
                "5c8d96a584897098"
            ]
        ],
        "l": false
    },
    {
        "id": "27f81d993ca6d85b",
        "type": "smooth",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 405,
        "y": 400,
        "wires": [
            [
                "8db3ca485d930835"
            ]
        ],
        "l": false
    },
    {
        "id": "5c8d96a584897098",
        "type": "ui_text",
        "z": "b83fb43068cdf48f",
        "group": "a91f3f1520863187",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "process0",
        "label": "Process",
        "format": "<font color=\"red\" size=\"+1\">{{msg.payload}}</font>",
        "layout": "row-spread",
        "className": "",
        "x": 455,
        "y": 380,
        "wires": [],
        "l": false
    },
    {
        "id": "8db3ca485d930835",
        "type": "ui_text",
        "z": "b83fb43068cdf48f",
        "group": "a91f3f1520863187",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "control0",
        "label": "Control",
        "format": "<font color=\"green\" size=\"+1\">{{msg.payload}}</font>",
        "layout": "row-spread",
        "className": "",
        "x": 455,
        "y": 400,
        "wires": [],
        "l": false
    },
    {
        "id": "df154adfaea23440",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "378ee9c8dcb596d6"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "378ee9c8dcb596d6",
        "type": "switch",
        "z": "b83fb43068cdf48f",
        "name": "",
        "property": "host.clients",
        "propertyType": "global",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 215,
        "y": 360,
        "wires": [
            [
                "422b0453aa8d2e2b",
                "4041ed0c8ac3b123",
                "52a1b5a440697dbd"
            ]
        ],
        "l": false
    },
    {
        "id": "03c0ca76b29b0190",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "",
        "links": [
            "a2cccb12b627c0e7"
        ],
        "x": 615,
        "y": 400,
        "wires": [
            [
                "2e3cae4209b2ada3",
                "421e168f1e21c8eb",
                "89b465e16b59498c"
            ]
        ]
    },
    {
        "id": "545e40d2b936b0ed",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "3a28252912b0e235"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "3a28252912b0e235",
        "type": "function",
        "z": "b83fb43068cdf48f",
        "name": "average inputs",
        "func": "var upper = global.get('analoginput.input[0].scaled')\nvar lower = global.get('analoginput.input[1].scaled')\nvar average = (upper + lower) / 2.0\n\nglobal.set('pid.zone[0].parameters.process', average)\n\nnode.status({ fill: \"green\", shape: \"dot\", text: average.toFixed(1) + '°F' });\n\nmsg.payload = average\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 215,
        "y": 220,
        "wires": [
            [
                "0153bddc21198ced"
            ]
        ],
        "l": false
    },
    {
        "id": "9804a60e5ac59e3e",
        "type": "ui_button",
        "z": "b83fb43068cdf48f",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 245,
        "y": 440,
        "wires": [
            [
                "2ba532e7faaaf05f"
            ]
        ],
        "l": false
    },
    {
        "id": "7e3b7476637fac29",
        "type": "ui_chart",
        "z": "b83fb43068cdf48f",
        "name": "",
        "group": "a91f3f1520863187",
        "order": 10,
        "width": 13,
        "height": 6,
        "label": "Control",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2ba02b",
            "#d62728",
            "#2ba02b",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 405,
        "y": 460,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "103c807d8adfbdd2",
        "type": "comment",
        "z": "b83fb43068cdf48f",
        "name": "dashboard",
        "info": "",
        "x": 150,
        "y": 300,
        "wires": []
    },
    {
        "id": "246f952ac26911c3",
        "type": "debug",
        "z": "b83fb43068cdf48f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 595,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "0153bddc21198ced",
        "type": "debug",
        "z": "b83fb43068cdf48f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 275,
        "y": 220,
        "wires": [],
        "l": false
    },
    {
        "id": "39292a30a8541f2a",
        "type": "link in",
        "z": "b83fb43068cdf48f",
        "name": "Oneshot Inject at Startup",
        "links": [
            "0023bda6c99b9785"
        ],
        "x": 335,
        "y": 60,
        "wires": [
            [
                "1b8c3443eaadce51"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "f360c0ec03a4fdf9",
        "type": "change",
        "z": "b83fb43068cdf48f",
        "name": "write data to disk",
        "rules": [
            {
                "t": "set",
                "p": "#:(disk)::pid",
                "pt": "global",
                "to": "pid",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455,
        "y": 60,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "1b8c3443eaadce51",
        "type": "delay",
        "z": "b83fb43068cdf48f",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 395,
        "y": 60,
        "wires": [
            [
                "f360c0ec03a4fdf9"
            ]
        ],
        "l": false
    },
    {
        "id": "0f56f86bd83c9233",
        "type": "finite-state-machine",
        "z": "e9cef8706a9cf7f6",
        "name": "Schedule",
        "fsmDefinition": "{\"state\":{\"status\":\"IDLE\",\"data\":{\"x\":99}},\"transitions\":{\"IDLE\":{\"run\":{\"status\":\"RUNNING\"},\"end\":{\"status\":\"IDLE\"}},\"STOPPING\":{\"end\":{\"status\":\"IDLE\"}},\"RUNNING\":{\"stop\":{\"status\":\"STOPPING\"}}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": true,
        "showTransitionErrors": true,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "2fc3804edce15c2a",
                "69c087d9cb1a75f4",
                "84a2b0552ff4b157"
            ]
        ]
    },
    {
        "id": "9001b19272cdde7c",
        "type": "catch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "82c478cdd58a5695"
            ]
        ]
    },
    {
        "id": "82c478cdd58a5695",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 155,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "b92a5a9283774411",
        "type": "finite-state-machine",
        "z": "e9cef8706a9cf7f6",
        "name": "Segment",
        "fsmDefinition": "{\"state\":{\"status\":\"IDLE\",\"data\":{\"segment_data\":{\"elapsed_time\":0,\"max_temperature\":0},\"segment_settings\":{\"name\":\"\",\"enabled\":true,\"hold\":false,\"setpoint\":0,\"ramp_rate\":0,\"soak_time\":0}}},\"transitions\":{\"IDLE\":{\"end\":\"IDLE\",\"init\":\"INITIALIZING\",\"set\":\"IDLE\"},\"INITIALIZING\":{\"ramp\":\"RAMPING\",\"end\":\"IDLE\",\"set\":\"INITIALIZING\"},\"RAMPING\":{\"soak\":\"SOAKING\",\"hold\":\"HOLDING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"RAMPING\"},\"SOAKING\":{\"hold\":\"HOLDING\",\"ramp\":\"RAMPING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"SOAKING\"},\"HOLDING\":{\"ramp\":\"RAMPING\",\"init\":\"INITIALIZING\",\"end\":\"IDLE\",\"set\":\"HOLDING\"}}}",
        "sendInitialState": true,
        "sendStateWithoutChange": true,
        "showTransitionErrors": true,
        "x": 260,
        "y": 600,
        "wires": [
            [
                "4df2a1d5facc0bfb",
                "f3bfd11d3b3fad40",
                "2eb008bbf30d2804",
                "c214fb80818d8c8f",
                "6c6e56db4e40ac7d",
                "a846cb12c824f26b"
            ]
        ]
    },
    {
        "id": "defcc28b265151c2",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Input - Control Buttons",
        "links": [
            "084f011204f8cadc",
            "c03c7fb7458a9e9f"
        ],
        "x": 155,
        "y": 380,
        "wires": [
            [
                "334e3822e1c7c5ac"
            ]
        ]
    },
    {
        "id": "fb11495e37bdb84b",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Current Segment State",
        "mode": "link",
        "links": [
            "8095bbd934bc130c"
        ],
        "x": 475,
        "y": 620,
        "wires": []
    },
    {
        "id": "b33e0726c17b668b",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - Current Schedule State",
        "mode": "link",
        "links": [
            "44901a155449dc95"
        ],
        "x": 455,
        "y": 180,
        "wires": []
    },
    {
        "id": "4df2a1d5facc0bfb",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "segment_settings",
                "pt": "msg",
                "to": "payload.data.segment_settings",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 620,
        "wires": [
            [
                "fb11495e37bdb84b"
            ]
        ],
        "l": false
    },
    {
        "id": "2fc3804edce15c2a",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 180,
        "wires": [
            [
                "b33e0726c17b668b"
            ]
        ],
        "l": false
    },
    {
        "id": "334e3822e1c7c5ac",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 215,
        "y": 380,
        "wires": [
            [
                "1ed2d6a8bc75d663"
            ],
            [
                "0d25f4bbb98a1706"
            ]
        ],
        "l": false
    },
    {
        "id": "1ed2d6a8bc75d663",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "run",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "run",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 275,
        "y": 360,
        "wires": [
            [
                "819aacf3762935b7"
            ]
        ],
        "l": false
    },
    {
        "id": "0d25f4bbb98a1706",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "stop",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 275,
        "y": 400,
        "wires": [
            [
                "819aacf3762935b7"
            ]
        ],
        "l": false
    },
    {
        "id": "6a57983382d3490e",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "819aacf3762935b7",
            "c96334b38e278286",
            "af8f2e69ea9f27c2"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "0f56f86bd83c9233"
            ]
        ]
    },
    {
        "id": "819aacf3762935b7",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "6a57983382d3490e"
        ],
        "x": 355,
        "y": 380,
        "wires": []
    },
    {
        "id": "81fb9a528731184e",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Input - Control Buttons",
        "links": [
            "c03c7fb7458a9e9f",
            "084f011204f8cadc"
        ],
        "x": 155,
        "y": 760,
        "wires": [
            [
                "66a35e0ed6e0c321"
            ]
        ]
    },
    {
        "id": "5b4645244b57514e",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Release",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Advance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Hold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 275,
        "y": 760,
        "wires": [
            [
                "12bfd2f54cfcaae9"
            ],
            [
                "12bfd2f54cfcaae9"
            ],
            [
                "e5d4e9ed610e164f"
            ]
        ],
        "l": false
    },
    {
        "id": "fdfa744fcee6a3dd",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "338986178aea2e9e",
            "2e45cc4d57a385c0",
            "edb935f4183746b0",
            "7ab1dfdba11abf46",
            "5b05096dea13f2c2",
            "94a351c8d74cd63c",
            "20db894294ad2264",
            "48e55a20a9c39344"
        ],
        "x": 155,
        "y": 600,
        "wires": [
            [
                "b92a5a9283774411"
            ]
        ]
    },
    {
        "id": "84a2b0552ff4b157",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "STOPPING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STARTING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RUNNING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "IDLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 395,
        "y": 260,
        "wires": [
            [
                "6348c0ed609dce8b"
            ],
            [],
            [
                "0c385503f68c2897",
                "2d50278b266fca54"
            ],
            [
                "04cf21296804ae19",
                "b692ebb29e65c022"
            ]
        ],
        "l": false
    },
    {
        "id": "c214fb80818d8c8f",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "INITIALIZING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "INITIALIZING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 475,
        "y": 560,
        "wires": [
            [
                "26a5dc0ca7be4550"
            ],
            [],
            [
                "d73d6c1dd682f172"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "edb935f4183746b0",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd",
            "c70cd7dd26e8bb29"
        ],
        "x": 715,
        "y": 260,
        "wires": []
    },
    {
        "id": "0c385503f68c2897",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "set segment settings and start segment ramp",
        "func": "\nvar active_schedule_index = global.get('schedule.active_schedule_index');\nvar active_schedule = global.get('schedule.schedules['+ active_schedule_index + ']')\nglobal.set('schedule.active_schedule', active_schedule);\n\nvar topic = \"init\"\nvar segment_settings = global.get('schedule.active_schedule.segments[0]')\nvar data = {segment_settings}\n\nvar msg_out = {topic,data}\n\nglobal.set('schedule.active_segment_index', 0)\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 495,
        "y": 260,
        "wires": [
            [
                "edb935f4183746b0"
            ]
        ],
        "l": false
    },
    {
        "id": "f3bfd11d3b3fad40",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.segment_settings.setpoint",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 640,
        "wires": [
            [
                "edf985d2d969c4b4"
            ]
        ],
        "l": false
    },
    {
        "id": "edf985d2d969c4b4",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "a8bc30bb3ce76d5e"
        ],
        "x": 475,
        "y": 640,
        "wires": []
    },
    {
        "id": "b209d1c9da6cb3c2",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "end and clear segment settings",
        "func": "var topic = \"end\"\nvar segment_settings = {\"name\":\"\",\"enabled\":false,\"hold\":false,\"setpoint\":0,\"ramp_rate\":0,\"soak_time\":0}\nvar data = {segment_settings}\n\nvar msg_out = {topic,data}\n\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 240,
        "wires": [
            [
                "edb935f4183746b0"
            ]
        ],
        "l": false
    },
    {
        "id": "2d50278b266fca54",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "disable the schedule selection when running",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "schedule.active_schedule_index",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 495,
        "y": 280,
        "wires": [
            [
                "7b896f97e70ee242"
            ]
        ],
        "l": false
    },
    {
        "id": "04cf21296804ae19",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "enable the schedule selection when idle",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "schedule.active_schedule_index",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 495,
        "y": 300,
        "wires": [
            [
                "7b896f97e70ee242"
            ]
        ],
        "l": false
    },
    {
        "id": "7b896f97e70ee242",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - enable/disable schedule selection",
        "mode": "link",
        "links": [
            "85642d7408d49cd8"
        ],
        "x": 575,
        "y": 300,
        "wires": []
    },
    {
        "id": "585e8b1656cbef91",
        "type": "trigger",
        "z": "e9cef8706a9cf7f6",
        "name": "Monitor temperature",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1000",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 955,
        "y": 520,
        "wires": [
            [
                "6cfcbd486aa01dca",
                "6621e559cca764ed"
            ]
        ],
        "l": false
    },
    {
        "id": "2293ffac501997ba",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "Reset trigger",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 815,
        "y": 520,
        "wires": [
            [
                "585e8b1656cbef91"
            ]
        ],
        "l": false
    },
    {
        "id": "7ab1dfdba11abf46",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 1135,
        "y": 740,
        "wires": []
    },
    {
        "id": "ec192310dbd48cdd",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "stop or advance",
        "links": [
            "12bfd2f54cfcaae9",
            "d30ec35d1e580d54",
            "4205218abe56d8f3"
        ],
        "x": 1015,
        "y": 720,
        "wires": [
            [
                "b17e75bc51a86d9f"
            ]
        ]
    },
    {
        "id": "12bfd2f54cfcaae9",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "ec192310dbd48cdd"
        ],
        "x": 355,
        "y": 740,
        "wires": []
    },
    {
        "id": "c96334b38e278286",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "4840d3b8dd483cff",
            "53681c7211103452",
            "6a57983382d3490e"
        ],
        "x": 1135,
        "y": 700,
        "wires": []
    },
    {
        "id": "73d963005cc1351a",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "disable the release button",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 815,
        "y": 740,
        "wires": [
            [
                "f59050e178b63b1a"
            ]
        ],
        "l": false
    },
    {
        "id": "717c700de0abd324",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "enable the release button",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 815,
        "y": 700,
        "wires": [
            [
                "f59050e178b63b1a"
            ]
        ],
        "l": false
    },
    {
        "id": "f59050e178b63b1a",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - enable/disable release button",
        "mode": "link",
        "links": [
            "87d7118f46499bc1"
        ],
        "x": 895,
        "y": 720,
        "wires": []
    },
    {
        "id": "b17e75bc51a86d9f",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "stop schedule or advance",
        "func": "var active_schedule = global.get('schedule.active_schedule')\nvar segment_count = active_schedule.segments.length\nvar active_segment_index = global.get('schedule.active_segment_index')\nvar temps_at_setpoint = global.get('logic.at_setpoint')\nvar msg_out\n\n// check if temps have been reached or advance is commanded\nif ((temps_at_setpoint && msg.payload == 'Release') || msg.payload == 'Advance'){\n\n    if (segment_count - 1 > active_segment_index) {\n        // advance to next segment\n        active_segment_index = active_segment_index + 1\n        global.set('schedule.active_segment_index', active_segment_index)\n        msg_out = { topic: 'init', data: { segment_settings: active_schedule.segments[active_segment_index] }}\n        return [null,msg_out]\n    } else {\n        // end the schedule\n        msg_out = {topic: 'stop', payload: 0}\n        return [msg_out,null]\n    }\n    \n} else { // continue and try to reach temps\n    msg_out = {topic: 'ramp'}\n    return [null,msg_out]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1075,
        "y": 720,
        "wires": [
            [
                "c96334b38e278286"
            ],
            [
                "7ab1dfdba11abf46"
            ]
        ],
        "l": false
    },
    {
        "id": "f1169a5a0d122c16",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "check segment enabled",
        "property": "payload.data.segment_settings.enabled",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 815,
        "y": 560,
        "wires": [
            [
                "024377df3ae20b3c"
            ],
            [
                "14cf0c63e8349ec6"
            ]
        ],
        "l": false
    },
    {
        "id": "3ab377921817af3f",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - active segment",
        "mode": "link",
        "links": [
            "1d2a7e1b14ed985d"
        ],
        "x": 475,
        "y": 660,
        "wires": []
    },
    {
        "id": "2eb008bbf30d2804",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "show active segment",
        "func": "var active_schedule = global.get('schedule.active_schedule')\nvar segment_count = 0\n\n// count how many segments are enabled so we can show this on the HMI\nfor (let index = 0; index < active_schedule.segments.length; index++) {\n    if (active_schedule.segments[index].enabled) {\n        segment_count++;\n    }\n}\nvar active_segment_index = global.get('schedule.active_segment_index')\nactive_segment_index++\n\nif (msg.payload.status === 'IDLE') {\n    msg.payload = '0 of ' + segment_count.toString()\n} else {\n    msg.payload = active_segment_index.toString() + ' of ' + segment_count.toString()\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 660,
        "wires": [
            [
                "3ab377921817af3f"
            ]
        ],
        "l": false
    },
    {
        "id": "26a5dc0ca7be4550",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "end",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "end",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 540,
        "wires": [
            [
                "af8f2e69ea9f27c2"
            ]
        ],
        "l": false
    },
    {
        "id": "6348c0ed609dce8b",
        "type": "trigger",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "IDLE",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 595,
        "y": 240,
        "wires": [
            [
                "b209d1c9da6cb3c2"
            ]
        ],
        "l": false
    },
    {
        "id": "af8f2e69ea9f27c2",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "4840d3b8dd483cff",
            "53681c7211103452",
            "6a57983382d3490e"
        ],
        "x": 615,
        "y": 540,
        "wires": []
    },
    {
        "id": "0afd5835b34c3f7e",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check soak",
        "func": "if (msg.payload.data.segment_settings.soak_time > 0) {\n    msg.delay = msg.payload.data.segment_settings.soak_time * 1000 * 60 // convert min to milliseconds\n    msg.topic = \"soak\"\n    return [null,msg];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 815,
        "y": 860,
        "wires": [
            [
                "93a841c73beae51f"
            ],
            [
                "5e52028c66e776b3"
            ]
        ],
        "outputLabels": [
            "advance",
            "soak"
        ],
        "l": false
    },
    {
        "id": "6cfcbd486aa01dca",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check temps and start soak",
        "func": "var upper = global.get('analoginput.input[0].scaled')\nvar lower = global.get('analoginput.input[1].scaled')\nvar average = (upper + lower) / 2.0\nvar pid_setpoint = global.get('pid.zone[0].parameters.setpoint')\n\nvar setpoint = msg.payload.data.segment_settings.setpoint\nvar control_action = global.get('logic.control_action')\nvar ramp_rate = msg.payload.data.segment_settings.ramp_rate // per hour\nvar delta_time = 1000.0 / (1000.0 * 60.0 * 60.0) // the pulse timer is set for 1000ms. how many 1000 ms in 1 hour?\nvar delta_temp = delta_time * ramp_rate\nvar tolerance = setpoint * 0.002\n\n// ramp the setpoints\nif (control_action == 'heating') {\n    if (pid_setpoint < setpoint) {\n        pid_setpoint = pid_setpoint + delta_temp;\n    }\n} else if (control_action == 'cooling') {\n    if (pid_setpoint > setpoint) {\n        pid_setpoint = pid_setpoint - delta_temp;\n    }\n} else {\n    // uh oh...\n}\n\nvar msg1 = { payload: pid_setpoint }\n\n// check if temps have been reached\n// TODO: add a confidence timer here to filter out spikes in temp\nif ((control_action == 'heating' && average >= (setpoint - tolerance))\n    || (control_action == 'cooling' && average <= (setpoint + tolerance))){\n        pid_setpoint = setpoint;\n        global.set('logic.at_setpoint', true)\n        msg.topic = 'soak'\n        msg1 = { payload: pid_setpoint }\n        return [msg1, msg];\n} else {\n    return [msg1, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1035,
        "y": 520,
        "wires": [
            [
                "63016a475eefba9d",
                "9715dba2fc1ab553"
            ],
            [
                "279e29f9c251ed63",
                "20db894294ad2264"
            ]
        ],
        "l": false
    },
    {
        "id": "024377df3ae20b3c",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "set ramp direction",
        "func": "var upper = global.get('analoginput.input[0].scaled')\nvar lower = global.get('analoginput.input[1].scaled')\nvar average = (upper + lower) / 2.0\n\n// determine ramping direction\nif (average > msg.payload.data.segment_settings.setpoint) {\n    global.set('logic.control_action', 'cooling')\n} else {\n    global.set('logic.control_action', 'heating')\n}\n\n// seed the starting temperature\nglobal.set('pid.zone[0].parameters.setpoint',average)\n\n// clear this now so that it can be latched in the monitoring logic\nglobal.set('logic.at_setpoint', false)\n\n// set duration between ramp calculations\nmsg.delay = 1000\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 540,
        "wires": [
            [
                "585e8b1656cbef91"
            ]
        ],
        "l": false
    },
    {
        "id": "6202fbcb0c1e1b73",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "set active schedule",
        "rules": [
            {
                "t": "set",
                "p": "schedule",
                "pt": "global",
                "to": "#:(disk)::schedule",
                "tot": "global",
                "dc": true
            },
            {
                "t": "set",
                "p": "logic",
                "pt": "global",
                "to": "#:(disk)::logic",
                "tot": "global",
                "dc": true
            },
            {
                "t": "set",
                "p": "schedule.active_schedule",
                "pt": "global",
                "to": "schedule.schedules[0]",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 20,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "93a841c73beae51f",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "check hold",
        "func": "if (msg.payload.data.segment_settings.hold) {\n    msg.topic = 'hold';\n    return [null,msg];\n} else {\n    msg.payload = 'Advance'\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1095,
        "y": 860,
        "wires": [
            [
                "4205218abe56d8f3"
            ],
            [
                "48e55a20a9c39344"
            ]
        ],
        "outputLabels": [
            "advance",
            "hold"
        ],
        "l": false
    },
    {
        "id": "d73d6c1dd682f172",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "ramp",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ramp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 580,
        "wires": [
            [
                "5b05096dea13f2c2"
            ]
        ],
        "l": false
    },
    {
        "id": "5b05096dea13f2c2",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 615,
        "y": 580,
        "wires": []
    },
    {
        "id": "e5d4e9ed610e164f",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "hold",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "hold",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 355,
        "y": 780,
        "wires": [
            [
                "94a351c8d74cd63c"
            ]
        ],
        "l": false
    },
    {
        "id": "94a351c8d74cd63c",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 415,
        "y": 780,
        "wires": []
    },
    {
        "id": "c70cd7dd26e8bb29",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "edb935f4183746b0"
        ],
        "x": 675,
        "y": 340,
        "wires": [
            [
                "dc2c386dedaeed7e"
            ]
        ]
    },
    {
        "id": "dc2c386dedaeed7e",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "get ramp rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "data.segment_settings.ramp_rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 735,
        "y": 340,
        "wires": [
            [
                "233d081ef7b67749"
            ]
        ],
        "l": false
    },
    {
        "id": "233d081ef7b67749",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - ramp rate",
        "mode": "link",
        "links": [
            "899c85f172cb1839"
        ],
        "x": 795,
        "y": 340,
        "wires": []
    },
    {
        "id": "be296861cf96f889",
        "type": "delay",
        "z": "e9cef8706a9cf7f6",
        "name": "Soak Timer",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 955,
        "y": 900,
        "wires": [
            [
                "b2be957b0b8f3b28"
            ]
        ],
        "l": false
    },
    {
        "id": "b2be957b0b8f3b28",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "done",
        "property": "remaining_milliseconds",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1015,
        "y": 900,
        "wires": [
            [
                "93a841c73beae51f"
            ],
            [
                "57da66cbb8664644"
            ]
        ],
        "l": false
    },
    {
        "id": "57da66cbb8664644",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "status",
        "func": "var time\n\nif (!msg.reset){\n    msg.remaining_milliseconds = msg.remaining_milliseconds - 1000\n    if (msg.remaining_milliseconds <= 0) {\n        msg.delay = 0;\n        msg.flush = true;\n    }\n} else {\n    msg.remaining_milliseconds = 0\n}\n\ntime = { minutes: msg.remaining_milliseconds / 1000.0 / 60.0, seconds: msg.remaining_milliseconds / 1000.0, milliseconds: msg.remaining_milliseconds };\ntime.minutes = time.minutes.toFixed(2);\ntime.seconds = time.seconds.toFixed(2);\ntime.milliseconds = time.milliseconds.toFixed(2);\n\nif (time.milliseconds >= 0){\n    return [msg,time];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 955,
        "y": 940,
        "wires": [
            [
                "be296861cf96f889"
            ],
            [
                "dbbb8ea68ee4121f"
            ]
        ],
        "l": false
    },
    {
        "id": "5e52028c66e776b3",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "delay",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 875,
        "y": 900,
        "wires": [
            [
                "be296861cf96f889"
            ]
        ],
        "l": false
    },
    {
        "id": "b79bc4ea4760e612",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 875,
        "y": 940,
        "wires": [
            [
                "57da66cbb8664644"
            ]
        ],
        "l": false
    },
    {
        "id": "cb32bc877d76c6f3",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "custom timer with status output",
        "info": "",
        "x": 970,
        "y": 920,
        "wires": []
    },
    {
        "id": "dbbb8ea68ee4121f",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "send minutes",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "minutes",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1035,
        "y": 940,
        "wires": [
            [
                "f1d4774590c51f3d"
            ]
        ],
        "l": false
    },
    {
        "id": "f1d4774590c51f3d",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "status",
        "mode": "link",
        "links": [
            "bc808949af0e238a"
        ],
        "x": 1095,
        "y": 940,
        "wires": []
    },
    {
        "id": "69c087d9cb1a75f4",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "if (msg.topic == 'state') {\n    global.set('logic.sch_state', msg.payload.status)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 395,
        "y": 200,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "6c6e56db4e40ac7d",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "if (msg.topic == 'state') {\n    global.set('logic.seg_state', msg.payload.status)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 680,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "48e55a20a9c39344",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 1155,
        "y": 880,
        "wires": []
    },
    {
        "id": "d30ec35d1e580d54",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "ec192310dbd48cdd"
        ],
        "x": 935,
        "y": 580,
        "wires": []
    },
    {
        "id": "4205218abe56d8f3",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "ec192310dbd48cdd"
        ],
        "x": 1155,
        "y": 840,
        "wires": []
    },
    {
        "id": "a2e12771c467bedb",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SOAKING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "SOAKING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 735,
        "y": 900,
        "wires": [
            [
                "0afd5835b34c3f7e"
            ],
            [
                "b79bc4ea4760e612"
            ]
        ],
        "l": false
    },
    {
        "id": "7debe7ed67a097f5",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "a846cb12c824f26b"
        ],
        "x": 675,
        "y": 900,
        "wires": [
            [
                "a2e12771c467bedb"
            ]
        ]
    },
    {
        "id": "40014b96c9ae727f",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "soaking logic",
        "info": "",
        "x": 730,
        "y": 820,
        "wires": []
    },
    {
        "id": "a846cb12c824f26b",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "7debe7ed67a097f5",
            "57f37c997ce9b505",
            "df378f817d41c61d"
        ],
        "x": 415,
        "y": 560,
        "wires": []
    },
    {
        "id": "57f37c997ce9b505",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "a846cb12c824f26b"
        ],
        "x": 675,
        "y": 720,
        "wires": [
            [
                "5b0d8dc236de50a5"
            ]
        ]
    },
    {
        "id": "5b0d8dc236de50a5",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HOLDING",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "HOLDING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 755,
        "y": 720,
        "wires": [
            [
                "717c700de0abd324",
                "6c4b614fba70c14d"
            ],
            [
                "73d963005cc1351a"
            ]
        ],
        "l": false
    },
    {
        "id": "88d1596c700f5ab1",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "holding logic",
        "info": "",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "df378f817d41c61d",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "links": [
            "a846cb12c824f26b"
        ],
        "x": 675,
        "y": 540,
        "wires": [
            [
                "da94c6de412c0890"
            ]
        ]
    },
    {
        "id": "da94c6de412c0890",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "RAMPING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RAMPING",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 735,
        "y": 540,
        "wires": [
            [
                "2293ffac501997ba"
            ],
            [
                "f1169a5a0d122c16"
            ]
        ],
        "l": false
    },
    {
        "id": "3207fc059e95ca8d",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "ramping logic",
        "info": "",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "ef9ca1c1540d2a09",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "transition logic",
        "info": "",
        "x": 1080,
        "y": 660,
        "wires": []
    },
    {
        "id": "6621e559cca764ed",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "get ramp rate",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data.segment_settings.ramp_rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1035,
        "y": 460,
        "wires": [
            [
                "c5180a0a450ebd11"
            ]
        ],
        "l": false
    },
    {
        "id": "c5180a0a450ebd11",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "Output - ramp rate",
        "mode": "link",
        "links": [
            "899c85f172cb1839"
        ],
        "x": 1095,
        "y": 460,
        "wires": []
    },
    {
        "id": "88183c4473e0f66d",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "buttons",
        "info": "",
        "x": 190,
        "y": 700,
        "wires": []
    },
    {
        "id": "65289c32824bc573",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "buttons",
        "info": "",
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "b692ebb29e65c022",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 495,
        "y": 320,
        "wires": [
            [
                "6348c0ed609dce8b"
            ]
        ],
        "l": false
    },
    {
        "id": "14cf0c63e8349ec6",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "segment is disabled so advance to next",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Advance",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 875,
        "y": 580,
        "wires": [
            [
                "d30ec35d1e580d54"
            ]
        ],
        "l": false
    },
    {
        "id": "6c4b614fba70c14d",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "b7e67964f0dbbbd9"
        ],
        "x": 895,
        "y": 680,
        "wires": []
    },
    {
        "id": "66a35e0ed6e0c321",
        "type": "switch",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "property": "logic.sch_state",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "IDLE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 215,
        "y": 760,
        "wires": [
            [
                "5b4645244b57514e"
            ]
        ],
        "l": false
    },
    {
        "id": "b7093a504612f6ed",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 335,
        "y": 20,
        "wires": [
            [
                "6202fbcb0c1e1b73",
                "373780b5b364ed7b",
                "541c3c5ce7285d53"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "834f8abdb0f8da62",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "schedule state machine",
        "info": "",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "81a6d243dc3cf8d3",
        "type": "comment",
        "z": "e9cef8706a9cf7f6",
        "name": "segment state machine",
        "info": "",
        "x": 140,
        "y": 480,
        "wires": []
    },
    {
        "id": "63016a475eefba9d",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1095,
        "y": 500,
        "wires": [],
        "l": false
    },
    {
        "id": "279e29f9c251ed63",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1095,
        "y": 540,
        "wires": [],
        "l": false
    },
    {
        "id": "20db894294ad2264",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "fdfa744fcee6a3dd"
        ],
        "x": 1095,
        "y": 540,
        "wires": []
    },
    {
        "id": "9715dba2fc1ab553",
        "type": "link out",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "mode": "link",
        "links": [
            "53681c7211103452"
        ],
        "x": 1095,
        "y": 500,
        "wires": []
    },
    {
        "id": "e4bd67f2c20a901f",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "rest",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 775,
        "y": 940,
        "wires": [
            [
                "b79bc4ea4760e612"
            ]
        ],
        "l": false
    },
    {
        "id": "035910fb2c4d2fa7",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 475,
        "y": 20,
        "wires": [
            [
                "373780b5b364ed7b"
            ]
        ],
        "l": false
    },
    {
        "id": "32c174842ffe497b",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 595,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "373780b5b364ed7b",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "var sch_ver = 1\n// check if variables initialized\nif (context.get('sch_ver') != sch_ver) {\n    // set to version so we don't run again\n    context.set('sch_ver', sch_ver)\n\n    var schedules = []\n    var schedulecount = 15\n    var segmentcount = 15\n    for (let index = 0; index < schedulecount; index++) {\n        var segments = []\n        for (let index1 = 0; index1 < segmentcount; index1++) {\n            var seg_obj = { name: '', enabled: false, hold: false, setpoint: 0, ramp_rate: 0, soak_time: 0 }\n            var segment = Object.create(seg_obj)\n            segments.push(segment)\n        }\n        schedules.push({ name: '' + (index + 1), segments })\n    }\n\n    var schedule = { active_schedule_index: 0, active_segment_index: 0, active_schedule: schedules[0],  schedules: schedules}\n\n    // set default values\n    for (let index = 0; index < schedulecount; index++) {\n        schedules[index].name = 'schedule' + (index + 1)\n        for (let index1 = 0; index1 < segmentcount; index1++) {\n            schedules[index].segments[index1].name = 'seg' + (index1 + 1)\n            schedules[index].segments[index1].enabled = false\n            schedules[index].segments[index1].hold = false\n            schedules[index].segments[index1].setpoint = 0\n            schedules[index].segments[index1].ramp_rate = 0\n            schedules[index].segments[index1].soak_time = 0\n        }\n    }\n\n    schedule.active_schedule.name = 'schedule1'\n    for (let index1 = 0; index1 < segmentcount; index1++) {\n        schedule.active_schedule.segments[index1].name = 'seg' + (index1 + 1)\n        schedule.active_schedule.segments[index1].enabled = false\n        schedule.active_schedule.segments[index1].hold = false\n        schedule.active_schedule.segments[index1].setpoint = 0\n        schedule.active_schedule.segments[index1].ramp_rate = 0\n        schedule.active_schedule.segments[index1].soak_time = 0\n    }\n\n    global.set('schedule', undefined)  // clear old structure if present\n    global.set('schedule', schedule)\n    global.set('schedule', undefined, 'disk')  // clear old structure if present\n    global.set('schedule', schedule, 'disk')\n\n    msg.payload = { schedule }\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 20,
        "wires": [
            [
                "32c174842ffe497b"
            ]
        ],
        "l": false
    },
    {
        "id": "541c3c5ce7285d53",
        "type": "function",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "func": "var log_ver = 1\n// check if variables initialized\nif (context.get('log_ver') != log_ver) {\n    // set to version so we don't run again\n    context.set('log_ver', log_ver)\n\n    var logic = { sch_state: \"IDLE\", \n                    seg_state: \"IDLE\", \n                    control_action: \"heating\", \n                    at_setpoint: false, \n                    simulate_temperature: false}\n\n    global.set('logic', undefined)  // clear old structure if present\n    global.set('logic', logic)\n    global.set('logic', undefined, 'disk')  // clear old structure if present\n    global.set('logic', logic, 'disk')\n\n    msg.payload = { logic }\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 20,
        "wires": [
            [
                "5625c14ee3eed5a0"
            ]
        ],
        "l": false
    },
    {
        "id": "20906fc146b2b5ae",
        "type": "inject",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 695,
        "y": 20,
        "wires": [
            [
                "541c3c5ce7285d53"
            ]
        ],
        "l": false
    },
    {
        "id": "5625c14ee3eed5a0",
        "type": "debug",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 815,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "6fd670fffa111a98",
        "type": "link in",
        "z": "e9cef8706a9cf7f6",
        "name": "Oneshot Inject at Startup",
        "links": [
            "0023bda6c99b9785"
        ],
        "x": 335,
        "y": 60,
        "wires": [
            [
                "9435c49f20cbbb71"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "9da20ce8cb886dc4",
        "type": "change",
        "z": "e9cef8706a9cf7f6",
        "name": "write data to disk",
        "rules": [
            {
                "t": "set",
                "p": "#:(disk)::schedule",
                "pt": "global",
                "to": "schedule",
                "tot": "global",
                "dc": true
            },
            {
                "t": "set",
                "p": "#:(disk)::logic",
                "pt": "global",
                "to": "logic",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455,
        "y": 60,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "9435c49f20cbbb71",
        "type": "delay",
        "z": "e9cef8706a9cf7f6",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 395,
        "y": 60,
        "wires": [
            [
                "9da20ce8cb886dc4"
            ]
        ],
        "l": false
    },
    {
        "id": "b9f05874cb2439dc",
        "type": "catch",
        "z": "592b686edd11b813",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "21cec14cfdce048d"
            ]
        ]
    },
    {
        "id": "21cec14cfdce048d",
        "type": "debug",
        "z": "592b686edd11b813",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 155,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "018ef11ba74cb510",
        "type": "ui_form",
        "z": "592b686edd11b813",
        "name": "",
        "label": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 5,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Segment Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Enabled",
                "value": "enabled",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Hold Enabled",
                "value": "hold",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "Setpoint",
                "value": "setpoint",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Ramp Rate",
                "value": "ramp_rate",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Soak Time",
                "value": "soak_time",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "enabled": false,
            "hold": false,
            "setpoint": "",
            "ramp_rate": "",
            "soak_time": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "f5070cef209d87e2"
            ]
        ]
    },
    {
        "id": "f5070cef209d87e2",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "//global.set('logic.selected_schedule', temp);\nvar schedule_index = flow.get('schedule_index');\nvar segment_index = flow.get('segment_index');\nvar segment = 'schedule.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']'\nglobal.set(segment, msg.payload);\nmsg.payload = segment\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 260,
        "wires": [
            [
                "6b534a21adf47fbc"
            ]
        ],
        "l": false
    },
    {
        "id": "5192f533b0238631",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "update form",
        "func": "\nvar schedule_index = flow.get('schedule_index');\nvar segment_index = flow.get('segment_index');\n\nvar segment = global.get('schedule.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']');\nif (segment == undefined) {\n    msg.payload = {name:\"\",enabled:false,hold:false,setpoint:0,ramp_rate:0,soak_time:0}\n} else {\n    msg.payload = segment\n}\n\nvar msg2 = {}\nmsg2.payload = global.get('schedule.schedules['+ schedule_index.toString() + '].segments');\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "3fda2bd34a7c89b2"
            ],
            [
                "338980eff32a3206"
            ]
        ]
    },
    {
        "id": "26aedf9d4f3e92fc",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "set default index",
        "rules": [
            {
                "t": "set",
                "p": "schedule_index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "segment_index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "host.clients",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 395,
        "y": 20,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "782f21bebe74bd1c",
        "type": "ui_dropdown",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Active Schedule",
        "tooltip": "",
        "place": "Select option",
        "group": "90879df8d2ee4c5d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "schedule 1",
                "value": 0,
                "type": "num"
            },
            {
                "label": "schedule 2",
                "value": 1,
                "type": "num"
            },
            {
                "label": "schedule 3",
                "value": 2,
                "type": "num"
            },
            {
                "label": "schedule 4",
                "value": 3,
                "type": "num"
            },
            {
                "label": "schedule 5",
                "value": 4,
                "type": "num"
            },
            {
                "label": "schedule 6",
                "value": 5,
                "type": "num"
            },
            {
                "label": "schedule 7",
                "value": 6,
                "type": "num"
            },
            {
                "label": "schedule 8",
                "value": 7,
                "type": "num"
            },
            {
                "label": "schedule 9",
                "value": 8,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "245aecb0a76e7750"
            ]
        ]
    },
    {
        "id": "245aecb0a76e7750",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "set schedule index",
        "func": "\n//var selected_schedule = global.get('schedule.schedules['+ msg.payload + ']')\n//global.set('schedule.active_schedule', selected_schedule);\nglobal.set('schedule.active_schedule_index', parseFloat(msg.payload));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 775,
        "y": 520,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "b5b651e02428cab0",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Control Dashboard",
        "info": "",
        "x": 110,
        "y": 480,
        "wires": []
    },
    {
        "id": "71b520a30c4deec4",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "play_arrow",
        "payload": "Start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "218ec5179ca4b0eb"
            ]
        ]
    },
    {
        "id": "ae53f4a3aef75fe8",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "stop",
        "payload": "Stop",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 680,
        "wires": [
            [
                "c03c7fb7458a9e9f",
                "09a19e4fb99f4ef4"
            ]
        ]
    },
    {
        "id": "95a54e2f0c9b2382",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Release",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "restore",
        "payload": "Release",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "c03c7fb7458a9e9f",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "Output - Buttons",
        "mode": "link",
        "links": [
            "defcc28b265151c2",
            "81fb9a528731184e"
        ],
        "x": 435,
        "y": 800,
        "wires": []
    },
    {
        "id": "1de58add27ec2baf",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Schedule State",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-center",
        "x": 260,
        "y": 1000,
        "wires": []
    },
    {
        "id": "44901a155449dc95",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Current Schedule State",
        "links": [
            "b33e0726c17b668b"
        ],
        "x": 135,
        "y": 1000,
        "wires": [
            [
                "1de58add27ec2baf"
            ]
        ]
    },
    {
        "id": "85642d7408d49cd8",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - schedule selection dropdown",
        "links": [
            "7b896f97e70ee242",
            "75b14d458cd1e761",
            "a898206a716472e9",
            "7ada905b810b30c6"
        ],
        "x": 475,
        "y": 520,
        "wires": [
            [
                "7dc828597fda8316"
            ]
        ]
    },
    {
        "id": "d1b9dbb996bc65fd",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "update schedule dropdown with selected schedule index",
        "func": "\n\nmsg.payload = global.get('schedule.active_schedule_index');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 255,
        "y": 520,
        "wires": [
            [
                "75b14d458cd1e761"
            ]
        ],
        "l": false
    },
    {
        "id": "75b14d458cd1e761",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "85642d7408d49cd8"
        ],
        "x": 315,
        "y": 520,
        "wires": []
    },
    {
        "id": "52e7c1f8dff102dc",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 475,
        "y": 340,
        "wires": [
            [],
            [
                "5192f533b0238631",
                "c43fe6a6eabba842"
            ],
            [
                "5192f533b0238631",
                "c43fe6a6eabba842"
            ]
        ],
        "l": false
    },
    {
        "id": "87d7118f46499bc1",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - release button",
        "links": [
            "f59050e178b63b1a"
        ],
        "x": 95,
        "y": 760,
        "wires": [
            [
                "95a54e2f0c9b2382"
            ]
        ]
    },
    {
        "id": "bd741c9362f990e9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - advance button",
        "links": [],
        "x": 95,
        "y": 720,
        "wires": [
            [
                "7bfd8d56a8dba80e"
            ]
        ]
    },
    {
        "id": "a585d96564013b99",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - stop button",
        "links": [],
        "x": 95,
        "y": 680,
        "wires": [
            [
                "ae53f4a3aef75fe8"
            ]
        ]
    },
    {
        "id": "0642571f7ecac918",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - start button",
        "links": [],
        "x": 95,
        "y": 640,
        "wires": [
            [
                "71b520a30c4deec4"
            ]
        ]
    },
    {
        "id": "0ced5c373a61386b",
        "type": "ui_chart",
        "z": "592b686edd11b813",
        "name": "",
        "group": "2201d496820b415d",
        "order": 10,
        "width": 7,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "Refresh to see data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff9300",
            "#2ca02c",
            "#ff7f0e",
            "#d62728",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 790,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "89090e12b153c6a4",
        "type": "ui_template",
        "z": "592b686edd11b813",
        "group": "5e1bdbab1ef4cbe6",
        "name": "",
        "order": 4,
        "width": 7,
        "height": 4,
        "format": "<style>\n.header {\n    border-bottom: 1pt solid white;\n    //text-decoration: underline;\n    vertical-align: bottom;\n    //valign=\"bottom\"\n}\n.table {\n    width: 100%;\n    //width:500px;\n    //background:lightblue;\n    //border:1px solid black;\n    //border-collapse: collapse;\n    font-size:10px;\n    text-align: center;\n    vertical-align: center;\n}\n.data {\n    //width: 15%\n    //white-space: nowrap\n    //white-space: normal\n    //vertical-align: bottom;\n}\n.main\n{\n    //height:400px;\n}\n</style>\n<div class=\"main\">\n    <table class=\"table\">  \n        <tr>\n            <th class=\"header\">Segment</th>\n            <th class=\"header\">Name</th>\n            <th class=\"header\">Enabled</th>\n            <th class=\"header\">Hold</th>\n            <th class=\"header\">Setpoint (°F)</th>\n            <th class=\"header\">Ramp (deg/h)</th>\n            <th class=\"header\">Soak (min)</th>\n        </tr>\n        <tr ng-repeat = \"payload in msg.payload\"><td>{{$index+1}}</td><td ng-repeat =\"(key,value) in payload\">{{value}}</td></tr>\n    </table>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 260,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "22fd3eb6907ee40d",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "delete segment",
        "group": "5e1bdbab1ef4cbe6",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete Segment",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "d815b4776bb0f1aa"
            ]
        ]
    },
    {
        "id": "d815b4776bb0f1aa",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "delete segment",
        "func": "var schedule_index = flow.get('schedule_index');\nvar segment_index = flow.get('segment_index');\nvar segment = 'schedule.schedules['+ schedule_index.toString() + '].segments[' + segment_index.toString() + ']'\n\nglobal.set(segment, undefined);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 300,
        "wires": [
            [
                "6b534a21adf47fbc"
            ]
        ],
        "l": false
    },
    {
        "id": "e0f89df2c8e81cd9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "3fda2bd34a7c89b2"
        ],
        "x": 155,
        "y": 260,
        "wires": [
            [
                "018ef11ba74cb510"
            ]
        ]
    },
    {
        "id": "ae2b5be430abc93f",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "338980eff32a3206"
        ],
        "x": 155,
        "y": 340,
        "wires": [
            [
                "89090e12b153c6a4"
            ]
        ]
    },
    {
        "id": "3fda2bd34a7c89b2",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "e0f89df2c8e81cd9"
        ],
        "x": 735,
        "y": 340,
        "wires": []
    },
    {
        "id": "338980eff32a3206",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "ae2b5be430abc93f"
        ],
        "x": 735,
        "y": 380,
        "wires": []
    },
    {
        "id": "006321a7d5098eed",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "6b534a21adf47fbc",
            "bbb665c4fceb800d",
            "beee976f9bb8a5fd"
        ],
        "x": 475,
        "y": 380,
        "wires": [
            [
                "5192f533b0238631"
            ]
        ]
    },
    {
        "id": "6b534a21adf47fbc",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "006321a7d5098eed"
        ],
        "x": 495,
        "y": 260,
        "wires": []
    },
    {
        "id": "bbb665c4fceb800d",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "006321a7d5098eed",
            "223bca47aa31a4da"
        ],
        "x": 495,
        "y": 180,
        "wires": []
    },
    {
        "id": "7bfd8d56a8dba80e",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 17,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Advance",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "skip_next",
        "payload": "Advance",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "8058b979887ff4eb",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "90879df8d2ee4c5d",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Hold",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "pause",
        "payload": "Hold",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "c03c7fb7458a9e9f"
            ]
        ]
    },
    {
        "id": "87ef55ffe3ea2883",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - hold button",
        "links": [],
        "x": 95,
        "y": 800,
        "wires": [
            [
                "8058b979887ff4eb"
            ]
        ]
    },
    {
        "id": "2b7d853b4ddd2588",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ramp Rate",
        "format": "<font color='green'>{{msg.payload}} deg/h</font>",
        "layout": "row-center",
        "x": 610,
        "y": 1000,
        "wires": []
    },
    {
        "id": "899c85f172cb1839",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - status ramp rate",
        "links": [
            "233d081ef7b67749",
            "59ca3789e4efaf36",
            "c5180a0a450ebd11"
        ],
        "x": 495,
        "y": 1000,
        "wires": [
            [
                "2b7d853b4ddd2588"
            ]
        ]
    },
    {
        "id": "fb07d106257c09b8",
        "type": "influxdb in",
        "z": "592b686edd11b813",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "query": "",
        "rawOutput": true,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 635,
        "y": 1160,
        "wires": [
            [
                "566ce4114146f76d"
            ]
        ],
        "l": false
    },
    {
        "id": "a65357c5f5e0b6d3",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "select kiln temps",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "select * from Kiln_01_UpperTemperature, Kiln_01_LowerTemperature WHERE time > now() - 12h",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 575,
        "y": 1120,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "566ce4114146f76d",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "parse query results",
        "func": "if (msg.payload.results[0].series !== undefined){\n    // enable \"raw output\" from the influxdb node\n    // use this query: select * from kiln_upper_temperature_01, kiln_lower_temperature_01 WHERE time > now() - 1h;\n    var msg_out = {\"payload\":[{\"series\":[],\"data\":[],\"labels\":[]}]};\n    \n    // series 1\n    var series_data0 = [];\n    for(var i = 0; i < msg.payload.results[0].series[0].values.length-1; i++){\n        series_data0.push({\n            x: msg.payload.results[0].series[0].values[i][0],\n            y: msg.payload.results[0].series[0].values[i][1],\n        })\n    }\n    msg_out.payload[0].series[0] = msg.payload.results[0].series[0].name\n    msg_out.payload[0].labels[0] = \"Upper Temp Label\"\n    \n    // series 2\n    var series_data1 = [];\n    for(var i = 0; i < msg.payload.results[0].series[1].values.length-1; i++){\n        series_data1.push({\n            x: msg.payload.results[0].series[1].values[i][0],\n            y: msg.payload.results[0].series[1].values[i][1],\n        })\n    }\n    msg_out.payload[0].series[1] = msg.payload.results[0].series[1].name\n    msg_out.payload[0].labels[1] = \"Lower Temp Label\"\n    \n    // add all series to the data array\n    var data_array = [];\n    data_array[0] = series_data0\n    data_array[1] = series_data1\n    \n    // \n    msg_out.payload[0].data = data_array\n    \n    return msg_out;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 695,
        "y": 1160,
        "wires": [
            [
                "0ced5c373a61386b"
            ]
        ],
        "l": false
    },
    {
        "id": "0c9d08cd9424255c",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Schedule Dashboard",
        "info": "",
        "x": 120,
        "y": 100,
        "wires": []
    },
    {
        "id": "c8796bffe6a96967",
        "type": "ui_audio",
        "z": "592b686edd11b813",
        "name": "",
        "group": "2201d496820b415d",
        "voice": "com.apple.speech.synthesis.voice.Alex",
        "always": true,
        "x": 640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5aac6d66af0d0e21",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 135,
        "y": 1300,
        "wires": [
            [
                "dcdb2c44aaed16a4"
            ]
        ],
        "l": false
    },
    {
        "id": "be787bb7f9bb0c5c",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "announcements",
        "info": "",
        "x": 100,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b1abc1b4bcb481ab",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 135,
        "y": 1340,
        "wires": [
            [
                "073493472e3f15af"
            ]
        ],
        "l": false
    },
    {
        "id": "e4bb3457a8359d15",
        "type": "inject",
        "z": "592b686edd11b813",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 135,
        "y": 1380,
        "wires": [
            [
                "154551a7ba429601"
            ]
        ],
        "l": false
    },
    {
        "id": "11c01c157ecfd3ef",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "Status dashboard",
        "info": "",
        "x": 110,
        "y": 960,
        "wires": []
    },
    {
        "id": "c43fe6a6eabba842",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "b5f8918b49462031",
            "223bca47aa31a4da"
        ],
        "x": 555,
        "y": 320,
        "wires": []
    },
    {
        "id": "b5f8918b49462031",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "c43fe6a6eabba842"
        ],
        "x": 75,
        "y": 180,
        "wires": [
            [
                "fc2609866ba68e99",
                "d8c55002e59fcada"
            ]
        ]
    },
    {
        "id": "023f6eeca8781228",
        "type": "ui_text_input",
        "z": "592b686edd11b813",
        "name": "schedule name",
        "label": "",
        "tooltip": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "300",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "7d3f232e7739f144"
            ]
        ]
    },
    {
        "id": "7d3f232e7739f144",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var schedule_index = flow.get('schedule_index');\nvar segment = 'schedule.schedules['+ schedule_index.toString() + '].name'\n\nglobal.set(segment, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 140,
        "wires": [
            [
                "7ada905b810b30c6"
            ]
        ],
        "l": false
    },
    {
        "id": "223bca47aa31a4da",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "",
        "links": [
            "c43fe6a6eabba842",
            "bbb665c4fceb800d",
            "beee976f9bb8a5fd"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "7560c351d622b7c2"
            ]
        ]
    },
    {
        "id": "7560c351d622b7c2",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var schedule_index = flow.get('schedule_index');\nvar name = 'schedule.schedules['+ schedule_index.toString() + '].name'\n\nmsg.payload = global.get(name);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "023f6eeca8781228"
            ]
        ],
        "l": false
    },
    {
        "id": "7ada905b810b30c6",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "",
        "mode": "link",
        "links": [
            "af271e715f494e25",
            "85642d7408d49cd8"
        ],
        "x": 495,
        "y": 140,
        "wires": []
    },
    {
        "id": "7dc828597fda8316",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "get schedule names",
        "func": "var schedules = global.get('schedule.schedules')\nvar schedule_names = []\nfor (let index = 0; index < schedules.length; index++) {\n    var name = {}\n    name[schedules[index].name] = index.toString()\n    schedule_names.push(name)\n}\nmsg.options = schedule_names\nreturn msg;\n\n/*\n[\n    {\n        \"schedule 1\": \"0\"\n    },\n    {\n        \"schedule 2\": \"1\"\n    }\n\n]\n[\n    {\n        \"Cone 04 Bisque\":\"0\"\n    },\n    {\n        \"Cone 6 Glaze\":\"1\"\n    }\n]\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 520,
        "wires": [
            [
                "782f21bebe74bd1c"
            ]
        ],
        "l": false
    },
    {
        "id": "9ac0734e2471a4ae",
        "type": "ui_numeric",
        "z": "592b686edd11b813",
        "name": "schedule index",
        "label": "",
        "tooltip": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 2,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "fee462e7f0afe7fe"
            ]
        ]
    },
    {
        "id": "6de15819559dade9",
        "type": "ui_numeric",
        "z": "592b686edd11b813",
        "name": "segment index",
        "label": "",
        "tooltip": "",
        "group": "5e1bdbab1ef4cbe6",
        "order": 3,
        "width": 2,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "15",
        "step": 1,
        "className": "",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "982ec52ff0e6cfbf"
            ]
        ]
    },
    {
        "id": "fc2609866ba68e99",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var schedule_index = flow.get('schedule_index');\nmsg.payload = schedule_index + 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "9ac0734e2471a4ae"
            ]
        ],
        "l": false
    },
    {
        "id": "d8c55002e59fcada",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var segment_index = flow.get('segment_index');\nmsg.payload = segment_index + 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "6de15819559dade9"
            ]
        ],
        "l": false
    },
    {
        "id": "fee462e7f0afe7fe",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "flow.set('schedule_index', msg.payload - 1);\nflow.set('segment_index', 0); // reset the segment index when switching schedules\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 180,
        "wires": [
            [
                "bbb665c4fceb800d",
                "d8c55002e59fcada"
            ]
        ],
        "l": false
    },
    {
        "id": "982ec52ff0e6cfbf",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "flow.set('segment_index', msg.payload - 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 415,
        "y": 220,
        "wires": [
            [
                "bbb665c4fceb800d"
            ]
        ],
        "l": false
    },
    {
        "id": "c5f9f24aff96d7cb",
        "type": "delay",
        "z": "592b686edd11b813",
        "name": "Soak Timer",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 675,
        "y": 740,
        "wires": [
            [
                "bc38816db3f974c5"
            ]
        ],
        "l": false
    },
    {
        "id": "bc38816db3f974c5",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "done",
        "property": "remaining_milliseconds",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 735,
        "y": 740,
        "wires": [
            [
                "084f011204f8cadc"
            ],
            [
                "06a98691587aad1c"
            ]
        ],
        "l": false
    },
    {
        "id": "06a98691587aad1c",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "status",
        "func": "var time\n\nif (!msg.reset){\n    msg.remaining_milliseconds = msg.remaining_milliseconds - 1000\n    if (msg.remaining_milliseconds <= 0) {\n        msg.delay = 0;\n        msg.flush = true;\n    }\n} else {\n    msg.remaining_milliseconds = 0\n}\n\nfunction msToTime(duration) {\n    var milliseconds = Math.floor((duration % 1000) / 100),\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\n//console.log(msToTime(300000))\n\ntime = { human: msToTime(msg.remaining_milliseconds), hours: msg.remaining_milliseconds / 1000.0 / 60.0 / 60.0, minutes: msg.remaining_milliseconds / 1000.0 / 60.0, seconds: msg.remaining_milliseconds / 1000.0, milliseconds: msg.remaining_milliseconds };\ntime.hours = time.hours.toFixed(2);\ntime.minutes = time.minutes.toFixed(2);\ntime.seconds = time.seconds.toFixed(2);\ntime.milliseconds = time.milliseconds.toFixed(2);\n\n//msg.remaining = msToTime(msg.remaining_milliseconds)\n\nif (time.milliseconds >= 0){\n    return [msg,time];\n} else {\n    return [msg,null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 675,
        "y": 800,
        "wires": [
            [
                "c5f9f24aff96d7cb"
            ],
            [
                "f040abfd68065067"
            ]
        ],
        "l": false
    },
    {
        "id": "5f9c6c60065b8f08",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "delay",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 615,
        "y": 740,
        "wires": [
            [
                "c5f9f24aff96d7cb"
            ]
        ],
        "l": false
    },
    {
        "id": "73d3d8e5967488da",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "remaining_milliseconds",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 615,
        "y": 800,
        "wires": [
            [
                "06a98691587aad1c"
            ]
        ],
        "l": false
    },
    {
        "id": "0f7049822af7ce2d",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "custom timer with status output",
        "info": "",
        "x": 690,
        "y": 820,
        "wires": []
    },
    {
        "id": "f040abfd68065067",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "send minutes",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "human",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 735,
        "y": 800,
        "wires": [
            [
                "3b166a8844e225b5"
            ]
        ],
        "l": false
    },
    {
        "id": "2644df39e84cb1af",
        "type": "ui_switch",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Delay Start",
        "tooltip": "",
        "group": "90879df8d2ee4c5d",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "01324301a21bcd20"
            ]
        ]
    },
    {
        "id": "50762693207ba7b8",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "msg.delay = msg.payload * 60.0 * 60.0 * 1000 // convert hours to milliseconds\nflow.set('delay_start_ms', msg.delay)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 875,
        "y": 680,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "218ec5179ca4b0eb",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "delay_start",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 315,
        "y": 640,
        "wires": [
            [
                "d3643650aa18d173"
            ],
            [
                "c03c7fb7458a9e9f"
            ]
        ],
        "l": false
    },
    {
        "id": "084f011204f8cadc",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "Output - Buttons",
        "mode": "link",
        "links": [
            "defcc28b265151c2",
            "81fb9a528731184e"
        ],
        "x": 815,
        "y": 740,
        "wires": []
    },
    {
        "id": "01324301a21bcd20",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay_start",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 855,
        "y": 640,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "6f1a074c6a1a494f",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "delay_start",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 635,
        "y": 640,
        "wires": [
            [
                "2644df39e84cb1af"
            ]
        ],
        "l": false
    },
    {
        "id": "9be32d3453fc15e7",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay_start",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "delay_start_ms",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "delay_start_running",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 855,
        "y": 600,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "4d90359030b767aa",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "delay_start_ms",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "delay_start_running",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 740,
        "wires": [
            [
                "5f9c6c60065b8f08"
            ]
        ],
        "l": false
    },
    {
        "id": "3b166a8844e225b5",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "90879df8d2ee4c5d",
        "order": 9,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Delay time Remaining",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-spread",
        "x": 795,
        "y": 800,
        "wires": [],
        "l": false
    },
    {
        "id": "5ecdaca58bba18a3",
        "type": "ui_numeric",
        "z": "592b686edd11b813",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "90879df8d2ee4c5d",
        "order": 8,
        "width": 3,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}h",
        "min": 0,
        "max": 10,
        "step": "0.5",
        "x": 780,
        "y": 680,
        "wires": [
            [
                "50762693207ba7b8"
            ]
        ]
    },
    {
        "id": "dd8c493f3d3692df",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var delay_start_ms = flow.get('delay_start_ms')\nmsg.payload = delay_start_ms / 1000.0 / 60.0 / 60.0 // convert milliseconds to hours\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 680,
        "wires": [
            [
                "5ecdaca58bba18a3"
            ]
        ],
        "l": false
    },
    {
        "id": "09a19e4fb99f4ef4",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay_start_running",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 555,
        "y": 800,
        "wires": [
            [
                "73d3d8e5967488da"
            ]
        ],
        "l": false
    },
    {
        "id": "d3643650aa18d173",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "delay_start_running",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 495,
        "y": 740,
        "wires": [
            [
                "4d90359030b767aa"
            ]
        ],
        "l": false
    },
    {
        "id": "6af73a69a0827774",
        "type": "ui_ui_control",
        "z": "592b686edd11b813",
        "name": "",
        "events": "all",
        "x": 480,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "704c9d7362c26e4e",
        "type": "ui_button",
        "z": "592b686edd11b813",
        "name": "",
        "group": "97a4a070263bb997",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show Control",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 295,
        "y": 840,
        "wires": [
            [
                "e8fb2f356c4749fc"
            ]
        ],
        "l": false
    },
    {
        "id": "e8fb2f356c4749fc",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "show",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Main_Enable_Control\"],\"show\":[\"Main_Control\"],\"focus\":true}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 355,
        "y": 840,
        "wires": [
            [
                "6af73a69a0827774"
            ]
        ],
        "l": false
    },
    {
        "id": "4c5cb4d50d6fc7e2",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "hide",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Main_Control\"],\"show\":[\"Main_Enable_Control\"],\"focus\":false}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 355,
        "y": 880,
        "wires": [
            [
                "6af73a69a0827774"
            ]
        ],
        "l": false
    },
    {
        "id": "77d007e0776a393c",
        "type": "trigger",
        "z": "592b686edd11b813",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-10",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 475,
        "y": 1160,
        "wires": [
            [
                "4d9edf60fc1e08d6"
            ]
        ],
        "l": false
    },
    {
        "id": "4bc6a2d8f60ff88a",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 1180,
        "wires": [
            [
                "77d007e0776a393c"
            ]
        ],
        "l": false
    },
    {
        "id": "4ba3b5ace9fff3d0",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 295,
        "y": 1180,
        "wires": [
            [
                "29c5bb56f28f82ea"
            ],
            [
                "c3c6a25a8238c2c5"
            ]
        ],
        "l": false
    },
    {
        "id": "29c5bb56f28f82ea",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 355,
        "y": 1160,
        "wires": [
            [
                "77d007e0776a393c"
            ],
            []
        ],
        "l": false
    },
    {
        "id": "154551a7ba429601",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "The kiln schedule is complete.",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The kiln schedule is complete.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "c8796bffe6a96967"
            ]
        ]
    },
    {
        "id": "073493472e3f15af",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "The kiln has entered a hold.",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The kiln has entered a hold.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1340,
        "wires": [
            [
                "c8796bffe6a96967"
            ]
        ]
    },
    {
        "id": "dcdb2c44aaed16a4",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "The Kiln is on fire.",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "The Kiln is on fire.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 1300,
        "wires": [
            [
                "c8796bffe6a96967"
            ]
        ]
    },
    {
        "id": "1c4a0c29242ea67f",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "The Kiln is on fire.",
        "links": [],
        "x": 195,
        "y": 1300,
        "wires": [
            [
                "dcdb2c44aaed16a4"
            ]
        ]
    },
    {
        "id": "b7e67964f0dbbbd9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "The kiln has entered a hold.",
        "links": [
            "6c4b614fba70c14d"
        ],
        "x": 195,
        "y": 1340,
        "wires": [
            [
                "073493472e3f15af"
            ]
        ]
    },
    {
        "id": "365612cabf4e1f82",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "The kiln schedule is complete.",
        "links": [],
        "x": 195,
        "y": 1380,
        "wires": [
            [
                "154551a7ba429601"
            ]
        ]
    },
    {
        "id": "e4d667c341be7e74",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "detect when connect to dashboard tab",
        "info": "",
        "x": 370,
        "y": 1140,
        "wires": []
    },
    {
        "id": "34d747ac4d0ff66f",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 415,
        "y": 340,
        "wires": [
            [
                "52e7c1f8dff102dc"
            ]
        ],
        "l": false
    },
    {
        "id": "e22edcc46fd64490",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 135,
        "y": 520,
        "wires": [
            [
                "06694a38753bf2cc"
            ]
        ],
        "l": false
    },
    {
        "id": "f62427195cb0ab96",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 515,
        "y": 660,
        "wires": [
            [
                "dc13cdb87e5552ed"
            ]
        ],
        "l": false
    },
    {
        "id": "06694a38753bf2cc",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 195,
        "y": 520,
        "wires": [
            [],
            [
                "d1b9dbb996bc65fd"
            ],
            [
                "d1b9dbb996bc65fd"
            ]
        ],
        "l": false
    },
    {
        "id": "dc13cdb87e5552ed",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 575,
        "y": 660,
        "wires": [
            [],
            [
                "6f1a074c6a1a494f",
                "dd8c493f3d3692df"
            ],
            [
                "6f1a074c6a1a494f",
                "dd8c493f3d3692df"
            ]
        ],
        "l": false
    },
    {
        "id": "edbc0dfd186a2ef1",
        "type": "ui_ui_control",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "events": "all",
        "x": 475,
        "y": 20,
        "wires": [
            [
                "9234cc41d8a3f409"
            ]
        ],
        "l": false
    },
    {
        "id": "0d7362ca2edd72c6",
        "type": "link out",
        "z": "592b686edd11b813",
        "name": "dashboard events w/ client count",
        "mode": "link",
        "links": [
            "c407645cd401c969",
            "72e821de5a9c10a5",
            "cc19dfacf51e9fc6",
            "d3bb9cf4b0826a24",
            "ae639127ca4d386d",
            "c0707caf85c10e83",
            "3de872e32eb64a26",
            "9583bdd91a208b77",
            "47cdbbef8944aef2"
        ],
        "x": 595,
        "y": 20,
        "wires": []
    },
    {
        "id": "c407645cd401c969",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 330,
        "y": 400,
        "wires": [
            [
                "34d747ac4d0ff66f"
            ]
        ],
        "l": true
    },
    {
        "id": "72e821de5a9c10a5",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 130,
        "y": 580,
        "wires": [
            [
                "e22edcc46fd64490"
            ]
        ],
        "l": true
    },
    {
        "id": "cc19dfacf51e9fc6",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 490,
        "y": 600,
        "wires": [
            [
                "f62427195cb0ab96"
            ]
        ],
        "l": true
    },
    {
        "id": "d3bb9cf4b0826a24",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 150,
        "y": 1180,
        "wires": [
            [
                "4ba3b5ace9fff3d0"
            ]
        ],
        "l": true
    },
    {
        "id": "c3c6a25a8238c2c5",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "client count 0",
        "property": "host.clients",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 355,
        "y": 1200,
        "wires": [
            [
                "4bc6a2d8f60ff88a"
            ]
        ],
        "l": false
    },
    {
        "id": "9234cc41d8a3f409",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "dashboard client count",
        "func": "var client_count = global.get('host.clients')\nvar client_count = client_count\nif (msg.payload == 'connect'){\n    client_count = client_count + 1\n} else if (msg.payload == 'lost') {\n    if (client_count > 0) client_count = client_count - 1\n}\nglobal.set('host.clients', client_count);\nmsg.client_count = client_count;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 20,
        "wires": [
            [
                "0d7362ca2edd72c6"
            ]
        ],
        "l": false
    },
    {
        "id": "6553a2457e1b301e",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "PiSugar: https://github.com/PiSugar/pisugar-power-manager-rs",
        "info": "",
        "x": 370,
        "y": 1580,
        "wires": []
    },
    {
        "id": "157d8d2802690122",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "PiSugar user:admin pass:admin",
        "info": "",
        "x": 270,
        "y": 1600,
        "wires": []
    },
    {
        "id": "001d25c9084d4855",
        "type": "http in",
        "z": "592b686edd11b813",
        "name": "",
        "url": "/ui/PiSugar",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 1500,
        "wires": [
            [
                "23f7dd1d1126cae8"
            ]
        ]
    },
    {
        "id": "67da5f33484299fc",
        "type": "http response",
        "z": "592b686edd11b813",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1500,
        "wires": []
    },
    {
        "id": "23f7dd1d1126cae8",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var hostname = global.get('host.hostname')\nvar Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":8421\"\n\nmsg.statusCode = 303;\nmsg.headers = {Location}\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1500,
        "wires": [
            [
                "67da5f33484299fc"
            ]
        ]
    },
    {
        "id": "8c3b80755b085d99",
        "type": "http in",
        "z": "592b686edd11b813",
        "name": "",
        "url": "/ui/NodeRed",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1520,
        "wires": [
            [
                "7f69450907197558"
            ]
        ]
    },
    {
        "id": "2b1845b10613decf",
        "type": "http response",
        "z": "592b686edd11b813",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7f69450907197558",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var hostname = global.get('host.hostname')\nvar Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":1880\"\n\nmsg.statusCode = 303;\nmsg.headers = {Location}\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "2b1845b10613decf"
            ]
        ]
    },
    {
        "id": "22060442e0a5d3cc",
        "type": "http in",
        "z": "592b686edd11b813",
        "name": "",
        "url": "/ui/Grafana",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 1540,
        "wires": [
            [
                "af782d0fb0a5975e"
            ]
        ]
    },
    {
        "id": "97645d6a4b985196",
        "type": "http response",
        "z": "592b686edd11b813",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1540,
        "wires": []
    },
    {
        "id": "af782d0fb0a5975e",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var hostname = global.get('host.hostname')\nvar Location = \"http://\" + hostname.replace(/[^\\x20-\\x7E]/g, '') + \":3000\"\n//var Location = \"http://\"+hostname.replace(/[^\\x20-\\x7E]/g, '')+\":3000/d/_6ZBVeRgk/historical-temperatures?orgId=1&from=now-7d&to=now&fullscreen&panelId=4\"\n\nmsg.statusCode = 303;\nmsg.headers = { Location }\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1540,
        "wires": [
            [
                "97645d6a4b985196"
            ]
        ]
    },
    {
        "id": "96518b72332bac16",
        "type": "comment",
        "z": "592b686edd11b813",
        "name": "web redirection",
        "info": "",
        "x": 100,
        "y": 1460,
        "wires": []
    },
    {
        "id": "67fd6dcf0c009872",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 335,
        "y": 20,
        "wires": [
            [
                "26aedf9d4f3e92fc"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "3a10314de81e4ea3",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 475,
        "y": 560,
        "wires": [
            [
                "7dc828597fda8316"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "b5bc3f51e5bd08f9",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 795,
        "y": 600,
        "wires": [
            [
                "9be32d3453fc15e7"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "af50336fbc3029ac",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 235,
        "y": 880,
        "wires": [
            [
                "5716687e0139b841"
            ]
        ],
        "l": false
    },
    {
        "id": "5716687e0139b841",
        "type": "switch",
        "z": "592b686edd11b813",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 295,
        "y": 880,
        "wires": [
            [],
            [
                "4c5cb4d50d6fc7e2"
            ],
            [
                "4c5cb4d50d6fc7e2"
            ]
        ],
        "l": false
    },
    {
        "id": "3de872e32eb64a26",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 110,
        "y": 880,
        "wires": [
            [
                "af50336fbc3029ac"
            ]
        ],
        "l": true
    },
    {
        "id": "219b6df02966d0e3",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Segment State",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-center",
        "x": 260,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8095bbd934bc130c",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Current Segment State",
        "links": [
            "fb11495e37bdb84b"
        ],
        "x": 135,
        "y": 1020,
        "wires": [
            [
                "219b6df02966d0e3"
            ]
        ]
    },
    {
        "id": "e5aec5149ce37d5d",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current Segment",
        "format": "<font color='green'>{{msg.payload}}</font>",
        "layout": "row-center",
        "x": 270,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1d2a7e1b14ed985d",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - current segment",
        "links": [
            "3ab377921817af3f"
        ],
        "x": 135,
        "y": 1040,
        "wires": [
            [
                "e5aec5149ce37d5d"
            ]
        ]
    },
    {
        "id": "f9d4fdfcb6abeb41",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Soak Remaining",
        "format": "<font color='green'>{{msg.payload}} min</font>",
        "layout": "row-center",
        "x": 260,
        "y": 1060,
        "wires": []
    },
    {
        "id": "bc808949af0e238a",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Segment remaining",
        "links": [
            "355d9c4e737fdfe5",
            "9272078ab32e5e81",
            "f1d4774590c51f3d"
        ],
        "x": 135,
        "y": 1060,
        "wires": [
            [
                "f9d4fdfcb6abeb41"
            ]
        ]
    },
    {
        "id": "2e9532e03f213fb4",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Setpoint",
        "format": "<font color='green'>{{msg.payload}} °F</font>",
        "layout": "row-center",
        "x": 240,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a8bc30bb3ce76d5e",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Status Setpoint",
        "links": [
            "edf985d2d969c4b4"
        ],
        "x": 135,
        "y": 1080,
        "wires": [
            [
                "2e9532e03f213fb4"
            ]
        ]
    },
    {
        "id": "9b6b7f2249d013ba",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Upper Temperature",
        "links": [
            "dcbc073ea7b777ee"
        ],
        "x": 495,
        "y": 1020,
        "wires": [
            [
                "5c033d496a14defe"
            ]
        ]
    },
    {
        "id": "b6802fc260a8ce06",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "upper",
        "label": "Upper",
        "format": "<font color=\"orange\" size=\"+2\">{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 690,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5c033d496a14defe",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 1020,
        "wires": [
            [
                "b6802fc260a8ce06"
            ]
        ],
        "l": false
    },
    {
        "id": "4ea9f6ce194f1281",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Input - Lower Temperature",
        "links": [
            "e65201e766b76bfd"
        ],
        "x": 495,
        "y": 1040,
        "wires": [
            [
                "89d865758685abe8"
            ]
        ]
    },
    {
        "id": "de9267cf7d7ed872",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 9,
        "width": 2,
        "height": 1,
        "name": "lower",
        "label": "Lower",
        "format": "<font color=\"orange\" size=\"+2\">{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 690,
        "y": 1040,
        "wires": []
    },
    {
        "id": "89d865758685abe8",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "msg.payload = msg.payload.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 1040,
        "wires": [
            [
                "de9267cf7d7ed872"
            ]
        ],
        "l": false
    },
    {
        "id": "5140de82704c98d7",
        "type": "ui_text",
        "z": "592b686edd11b813",
        "group": "2201d496820b415d",
        "order": 8,
        "width": 3,
        "height": 1,
        "name": "average",
        "label": "Avg",
        "format": "<font color=\"green\" size=\"+3\">{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 700,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b7fa051787cd56aa",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "var upper = global.get('analoginput.input[0].scaled')\nvar lower = global.get('analoginput.input[1].scaled')\nvar average = (upper + lower) / 2.0\n\nmsg.payload = average.toFixed(0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 1060,
        "wires": [
            [
                "5140de82704c98d7"
            ]
        ],
        "l": false
    },
    {
        "id": "a1adcde3ae3b5ba7",
        "type": "link in",
        "z": "592b686edd11b813",
        "name": "Timer 1",
        "links": [
            "62eccecdbb37e6f8"
        ],
        "x": 495,
        "y": 1060,
        "wires": [
            [
                "b7fa051787cd56aa"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "4d9edf60fc1e08d6",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "",
        "func": "if (msg.hours){\n    context.set('hours', msg.hours)\n}\n\nvar hours = context.get('hours') || 12\nmsg.query = 'select * from Kiln_01_UpperTemperature, Kiln_01_LowerTemperature WHERE time > now() - '+hours+'h'\n\nvar msg_hours = {payload: hours} // send the current hours to the numeric input on the dashboard\n\nreturn [msg, msg_hours];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 575,
        "y": 1160,
        "wires": [
            [
                "fb07d106257c09b8"
            ],
            [
                "cfb05576b9df09f6"
            ]
        ],
        "l": false
    },
    {
        "id": "cfb05576b9df09f6",
        "type": "ui_numeric",
        "z": "592b686edd11b813",
        "name": "",
        "label": "Hours",
        "tooltip": "Select the time in hours to display.",
        "group": "2201d496820b415d",
        "order": 11,
        "width": 7,
        "height": 1,
        "wrap": true,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{msg.payload}}",
        "min": "1",
        "max": "48",
        "step": 1,
        "className": "",
        "x": 435,
        "y": 1220,
        "wires": [
            [
                "611df55f3094693b"
            ]
        ],
        "l": false
    },
    {
        "id": "611df55f3094693b",
        "type": "change",
        "z": "592b686edd11b813",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hours",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 495,
        "y": 1220,
        "wires": [
            [
                "4b1203414e4c5d71"
            ]
        ],
        "l": false
    },
    {
        "id": "229f6febbb4c59a4",
        "type": "function",
        "z": "592b686edd11b813",
        "name": "clear chart",
        "func": "msg.payload = []\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 695,
        "y": 1200,
        "wires": [
            [
                "0ced5c373a61386b"
            ]
        ],
        "l": false
    },
    {
        "id": "4b1203414e4c5d71",
        "type": "trigger",
        "z": "592b686edd11b813",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "date",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 555,
        "y": 1220,
        "wires": [
            [
                "229f6febbb4c59a4"
            ],
            [
                "4d9edf60fc1e08d6"
            ]
        ],
        "outputLabels": [
            "clear chart",
            "set hours"
        ],
        "l": false
    },
    {
        "id": "1c9e79b136a623e2",
        "type": "catch",
        "z": "98e4246c87add39e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 20,
        "wires": [
            [
                "d3aa01638e9fef28"
            ]
        ]
    },
    {
        "id": "d3aa01638e9fef28",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 155,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "0f5d38dea1f9fdf8",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "f14af351da1b05c1"
            ]
        ]
    },
    {
        "id": "f14af351da1b05c1",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "node-red-restart",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "680c5276908a542b",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 200,
        "wires": [
            [
                "3b38d7ad7142ae99"
            ]
        ]
    },
    {
        "id": "3b38d7ad7142ae99",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "sudo shutdown now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "300160ca9486c7ff",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "5bb9693f827a8916"
            ]
        ]
    },
    {
        "id": "5bb9693f827a8916",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "sudo reboot now",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5e1d74212376e4f3",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "hostname",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "f619121c08077343"
            ],
            [],
            []
        ]
    },
    {
        "id": "f619121c08077343",
        "type": "change",
        "z": "98e4246c87add39e",
        "name": "set hostname",
        "rules": [
            {
                "t": "set",
                "p": "host.hostname",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f9460b8af28fe098",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "system commands",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "f5033733f707ca3b",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "5331d4d4d2257e9c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restart Node-RED",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "f14af351da1b05c1"
            ]
        ]
    },
    {
        "id": "f623a973075e595e",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "5331d4d4d2257e9c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown OpenKiln",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "3b38d7ad7142ae99"
            ]
        ]
    },
    {
        "id": "a642f1f2e5e98baf",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "5331d4d4d2257e9c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot OpenKiln",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "5bb9693f827a8916"
            ]
        ]
    },
    {
        "id": "b22998e6d78aeec1",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "Oneshot Timer at Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "7fa2d20f4131fc60"
            ]
        ]
    },
    {
        "id": "99697af708a701c0",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "Timer 1",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 520,
        "wires": [
            [
                "62eccecdbb37e6f8"
            ]
        ]
    },
    {
        "id": "88f077fb53d14a6b",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "Timer 2",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 540,
        "wires": [
            [
                "024e0212ac6e8812"
            ]
        ]
    },
    {
        "id": "7fa2d20f4131fc60",
        "type": "link out",
        "z": "98e4246c87add39e",
        "name": "Oneshot Inject at Startup",
        "mode": "link",
        "links": [
            "1fcd1d351b927c92",
            "67fd6dcf0c009872",
            "3a10314de81e4ea3",
            "b5bc3f51e5bd08f9",
            "b7093a504612f6ed",
            "8025efa4ec2e5944",
            "0f779fd67e9e72b8",
            "faad1abb6ddb40e6",
            "229639664257214b",
            "3481780d26e1a633"
        ],
        "x": 375,
        "y": 500,
        "wires": []
    },
    {
        "id": "62eccecdbb37e6f8",
        "type": "link out",
        "z": "98e4246c87add39e",
        "name": "Timer 1",
        "mode": "link",
        "links": [
            "926b0d1549693d67",
            "98c5268e979c7dcb",
            "83d1eeca2821fcac",
            "c271444bdafb92be",
            "a7a9eeb897d0ea64",
            "df154adfaea23440",
            "b3c9ae5df3d92461",
            "545e40d2b936b0ed",
            "a1adcde3ae3b5ba7"
        ],
        "x": 375,
        "y": 520,
        "wires": []
    },
    {
        "id": "024e0212ac6e8812",
        "type": "link out",
        "z": "98e4246c87add39e",
        "name": "Timer 2",
        "mode": "link",
        "links": [],
        "x": 375,
        "y": 540,
        "wires": []
    },
    {
        "id": "8e7b143f03fe4151",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "Timer 3",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 560,
        "wires": [
            [
                "0023bda6c99b9785"
            ]
        ]
    },
    {
        "id": "0023bda6c99b9785",
        "type": "link out",
        "z": "98e4246c87add39e",
        "name": "Timer 3",
        "mode": "link",
        "links": [
            "9d5778517642c1a5",
            "f1d25824082f84cf",
            "6fd670fffa111a98",
            "39292a30a8541f2a",
            "f7bd5176dea5a20b"
        ],
        "x": 375,
        "y": 560,
        "wires": []
    },
    {
        "id": "229639664257214b",
        "type": "link in",
        "z": "98e4246c87add39e",
        "name": "",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 215,
        "y": 280,
        "wires": [
            [
                "5e1d74212376e4f3"
            ]
        ]
    },
    {
        "id": "af4553bb581c655e",
        "type": "exec",
        "z": "98e4246c87add39e",
        "command": "echo \"get battery\" | nc -q 0 127.0.0.1 8423",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "6f5afb9a88e70a05"
            ],
            [],
            []
        ]
    },
    {
        "id": "d38d9c73aca28d87",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "Timer 4",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "baf5017e8f62ab32"
            ]
        ]
    },
    {
        "id": "baf5017e8f62ab32",
        "type": "link out",
        "z": "98e4246c87add39e",
        "name": "Timer 3",
        "mode": "link",
        "links": [
            "70a6135b55b68537"
        ],
        "x": 375,
        "y": 580,
        "wires": []
    },
    {
        "id": "70a6135b55b68537",
        "type": "link in",
        "z": "98e4246c87add39e",
        "name": "",
        "links": [
            "baf5017e8f62ab32"
        ],
        "x": 305,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6f5afb9a88e70a05",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "var stringlist = msg.payload.split(\":\")\nvar Battery = stringlist[1]\nvar msg_influx = {measurement: 'Battery', payload: parseFloat(parseFloat(Battery).toFixed(2))}\nreturn msg_influx;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 320,
        "wires": [
            [
                "75379ff884a7a0ec"
            ]
        ],
        "l": false
    },
    {
        "id": "75379ff884a7a0ec",
        "type": "influxdb out",
        "z": "98e4246c87add39e",
        "influxdb": "1a7d214ba0ada216",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 815,
        "y": 320,
        "wires": [],
        "l": false
    },
    {
        "id": "696ae3ae2eebb551",
        "type": "comment",
        "z": "98e4246c87add39e",
        "name": "timers",
        "info": "",
        "x": 80,
        "y": 460,
        "wires": []
    },
    {
        "id": "0ff7e04c8ee2db0a",
        "type": "ui_ui_control",
        "z": "98e4246c87add39e",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3d9aac9a08adde21",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "353b1d92547b4d5b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show System",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "warning",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 355,
        "y": 720,
        "wires": [
            [
                "a9f1cbb6fb0bccc8"
            ]
        ],
        "l": false
    },
    {
        "id": "a9f1cbb6fb0bccc8",
        "type": "change",
        "z": "98e4246c87add39e",
        "name": "show",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Utility_Enable_System\"],\"show\":[\"Utility_System\"],\"focus\":true}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 720,
        "wires": [
            [
                "0ff7e04c8ee2db0a"
            ]
        ],
        "l": false
    },
    {
        "id": "416636774a322b91",
        "type": "change",
        "z": "98e4246c87add39e",
        "name": "hide",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Utility_System\"],\"show\":[\"Utility_Enable_System\"],\"focus\":false}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 760,
        "wires": [
            [
                "0ff7e04c8ee2db0a"
            ]
        ],
        "l": false
    },
    {
        "id": "41f5fb056a65a202",
        "type": "switch",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "tab",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 295,
        "y": 760,
        "wires": [
            [
                "b71eb5ffe356396d"
            ]
        ],
        "l": false
    },
    {
        "id": "b71eb5ffe356396d",
        "type": "switch",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 355,
        "y": 760,
        "wires": [
            [],
            [
                "416636774a322b91"
            ],
            [
                "416636774a322b91"
            ]
        ],
        "l": false
    },
    {
        "id": "47cdbbef8944aef2",
        "type": "link in",
        "z": "98e4246c87add39e",
        "name": "dashboard events",
        "links": [
            "0d7362ca2edd72c6"
        ],
        "x": 170,
        "y": 760,
        "wires": [
            [
                "41f5fb056a65a202"
            ]
        ],
        "l": true
    },
    {
        "id": "3481780d26e1a633",
        "type": "link in",
        "z": "98e4246c87add39e",
        "name": "Oneshot Inject at Startup",
        "links": [
            "7fa2d20f4131fc60"
        ],
        "x": 335,
        "y": 20,
        "wires": [
            [
                "4ccc4c0a0c3d268a"
            ]
        ],
        "icon": "node-red/timer.svg"
    },
    {
        "id": "d501bbdc8addad96",
        "type": "inject",
        "z": "98e4246c87add39e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 475,
        "y": 20,
        "wires": [
            [
                "4ccc4c0a0c3d268a"
            ]
        ],
        "l": false
    },
    {
        "id": "e5a0831f8c6b43de",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 595,
        "y": 20,
        "wires": [],
        "l": false
    },
    {
        "id": "4ccc4c0a0c3d268a",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "var host_ver = 1\n// check if variables initialized\nif (context.get('host_ver') != host_ver) {\n    // set to version so we don't run again\n    context.set('host_ver', host_ver)\n\n    var host = { hostname: 'OpenKiln', clients: 0 }\n\n    global.set('host', undefined)  // clear old structure if present\n    global.set('host', host)\n    global.set('host', undefined, 'disk')  // clear old structure if present\n    global.set('host', host, 'disk')\n\n    msg.payload = { host }\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 535,
        "y": 20,
        "wires": [
            [
                "e5a0831f8c6b43de"
            ]
        ],
        "l": false
    },
    {
        "id": "b8284a117fa47751",
        "type": "ui_template",
        "z": "98e4246c87add39e",
        "group": "97b95836b00ea98e",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<script>\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        \n        element.style.display = 'none';\n        document.body.appendChild(element);\n        \n        element.click();\n        \n        document.body.removeChild(element);\n    }\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg.schedules) {\n                // Do something when msg arrives\n                //$(\"#my_\"+scope.$id).html(msg.payload);\n                download(\"schedules.json\",msg.payload)\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a90ef1234bf10f2b",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "97b95836b00ea98e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Schedules",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "dc30988efd432b6a"
            ]
        ]
    },
    {
        "id": "dc30988efd432b6a",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "msg.schedules = true\nmsg.payload = global.get('schedule')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1000,
        "wires": [
            [
                "f93e70b630f3503c"
            ]
        ]
    },
    {
        "id": "f93e70b630f3503c",
        "type": "json",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "b8284a117fa47751"
            ]
        ]
    },
    {
        "id": "06e8942be930114e",
        "type": "ui_template",
        "z": "98e4246c87add39e",
        "group": "97b95836b00ea98e",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script>\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        \n        element.style.display = 'none';\n        document.body.appendChild(element);\n        \n        element.click();\n        \n        document.body.removeChild(element);\n    }\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n        if (msg.pids) {\n            // Do something when msg arrives\n            //$(\"#my_\"+scope.$id).html(msg.payload);\n            download(\"pids.json\",msg.payload)\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "5a3f6a73fbcd5a6d",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "97b95836b00ea98e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "PID",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1040,
        "wires": [
            [
                "07aa29d05da50c6d"
            ]
        ]
    },
    {
        "id": "07aa29d05da50c6d",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "msg.pids = true\nmsg.payload = global.get('pid')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1040,
        "wires": [
            [
                "24ce2e10827634ba"
            ]
        ]
    },
    {
        "id": "24ce2e10827634ba",
        "type": "json",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "06e8942be930114e"
            ]
        ]
    },
    {
        "id": "00acfb4e4f627faa",
        "type": "ui_template",
        "z": "98e4246c87add39e",
        "group": "97b95836b00ea98e",
        "name": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n    function download(filename, text) {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        \n        element.style.display = 'none';\n        document.body.appendChild(element);\n        \n        element.click();\n        \n        document.body.removeChild(element);\n    }\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n        if (msg.inputs) {\n            // Do something when msg arrives\n            //$(\"#my_\"+scope.$id).html(msg.payload);\n            download(\"inputs.json\",msg.payload)\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "f53abade6c774e2f",
        "type": "ui_button",
        "z": "98e4246c87add39e",
        "name": "",
        "group": "97b95836b00ea98e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Inputs",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1080,
        "wires": [
            [
                "8f275006f2d70ac0"
            ]
        ]
    },
    {
        "id": "8f275006f2d70ac0",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "msg.inputs = true\nmsg.payload = global.get('analoginput')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1080,
        "wires": [
            [
                "c8cd51ccfa0c17c1"
            ]
        ]
    },
    {
        "id": "c8cd51ccfa0c17c1",
        "type": "json",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "00acfb4e4f627faa"
            ]
        ]
    },
    {
        "id": "f673688906c6187c",
        "type": "ui_template",
        "z": "98e4246c87add39e",
        "group": "345cf5cc073427be",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<input type=\"file\" id=\"my_file\">\n<script>\nthis.scope.action = function() { \n    const fileInput = document.getElementById('my_file');\n    const selectedFile = fileInput.files[0];\n    return selectedFile; \n    }\n</script>\n<md-button ng-click=\"send({payload:action()})\">\n    Upload backup\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 100,
        "y": 1200,
        "wires": [
            [
                "e2ef22dc541a8c9d",
                "3fbad3940408437a"
            ]
        ]
    },
    {
        "id": "e2ef22dc541a8c9d",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3fbad3940408437a",
        "type": "function",
        "z": "98e4246c87add39e",
        "name": "",
        "func": "msg.payload = msg.payload.toString('ascii')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1220,
        "wires": [
            [
                "52546fdc82ad3fd2",
                "6543e9a8ab54749d"
            ]
        ]
    },
    {
        "id": "52546fdc82ad3fd2",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6543e9a8ab54749d",
        "type": "json",
        "z": "98e4246c87add39e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 1240,
        "wires": [
            [
                "46483b08f2e65b76"
            ]
        ]
    },
    {
        "id": "46483b08f2e65b76",
        "type": "debug",
        "z": "98e4246c87add39e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1240,
        "wires": []
    }
]